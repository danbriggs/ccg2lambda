Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)

No more goals.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
~
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))


Toplevel input, characters 349-353:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                              ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)

No more goals.

Toplevel input, characters 355-372:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^
Error: No such goal.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)

No more goals.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
~
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))

1 goal

H2 : True
x0 : Entity
H3 : _run _smith x0
H4 : True
H1 : _own x0
H5 : _business x0
H7 : True
x2 : Entity
H9 : _for _smith x2
H10 : True
H6 : _two x2
H11 : _year x2
x3 : Entity
H12 : _run _smith x3
H13 : True
H8 : _own x3
H14 : _business x3
============================
False

Toplevel input, characters 365-377:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 379-383:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                            ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
~
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))


Toplevel input, characters 349-353:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                              ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)

No more goals.

Toplevel input, characters 355-372:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^
Error: No such goal.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
~
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))

1 goal

H2 : True
x0 : Entity
H3 : _run _smith x0
H4 : True
H1 : _own x0
H5 : _business x0
H7 : True
x2 : Entity
H9 : _for _smith x2
H10 : True
H6 : _two x2
H11 : _year x2
x3 : Entity
H12 : _run _smith x3
H13 : True
H8 : _own x3
H14 : _business x3
============================
False

Toplevel input, characters 365-377:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 379-383:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                            ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)

No more goals.

Toplevel input, characters 355-372:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^
Error: No such goal.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
~
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))

1 goal

H2 : True
x0 : Entity
H3 : _run _smith x0
H4 : True
H1 : _own x0
H5 : _business x0
H7 : True
x2 : Entity
H9 : _for _smith x2
H10 : True
H6 : _two x2
H11 : _year x2
x3 : Entity
H12 : _run _smith x3
H13 : True
H8 : _own x3
H14 : _business x3
============================
False

Toplevel input, characters 365-377:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 379-383:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                            ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
unknown

