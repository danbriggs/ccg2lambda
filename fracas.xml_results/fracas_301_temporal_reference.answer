Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_own z2 /\ _business z2) /\
(exists z1 : Entity, (_year z1 /\ True) /\ _for z2 z1)) /\ True) /\
_run _smith z2)


Toplevel input, characters 403-407:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_own z2) (_business z2)) (exists z1, (and (and (_year z1) True) (_for z2 z1)))) True) (_run _smith z2))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                    ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
~
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_own z2 /\ _business z2) /\
(exists z1 : Entity, (_year z1 /\ True) /\ _for z2 z1)) /\ True) /\
_run _smith z2))


Toplevel input, characters 409-413:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_own z2) (_business z2)) (exists z1, (and (and (_year z1) True) (_for z2 z1)))) True) (_run _smith z2)))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                          ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _business is declared

Coq < _for is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _two is declared

Coq < _year is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) ->
exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity,
(((_own z2 /\ _business z2) /\
(exists z1 : Entity, (_year z1 /\ True) /\ _for z2 z1)) /\ True) /\
_run _smith z2)

1 goal

H1 : True
x0 : Entity
H3 : _for _smith x0
H4 : True
H0 : _two x0
H5 : _year x0
x1 : Entity
H6 : _run _smith x1
H7 : True
H2 : _own x1
H8 : _business x1
============================
_for x1 x0

Toplevel input, characters 419-431:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_own z2) (_business z2)) (exists z1, (and (and (_year z1) True) (_for z2 z1)))) True) (_run _smith z2))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                    ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 433-437:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_own z2) (_business z2)) (exists z1, (and (and (_year z1) True) (_for z2 z1)))) True) (_run _smith z2))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
unknown

