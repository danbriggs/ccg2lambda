Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))


Toplevel input, characters 586-590:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). nltac. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
~
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))


Toplevel input, characters 592-596:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). nltac. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))

1 goal

H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1))
H3 : True
x0 : Entity
H4 : _revise _smith x0
H2 : _contract x0
H5, H7 : True
x2 : Entity
H8 : _revise _jones x2
H6 : _contract x2
H9 : True
============================
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))

Toplevel input, characters 602-614:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution.

Error: The reference substitution was not found in the current environment.

Toplevel input, characters 616-620:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))


Toplevel input, characters 586-590:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). nltac. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
~
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))

1 goal

H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1))
H2 : _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))
H4 : True
x0 : Entity
H5 : _revise _smith x0
H3 : _contract x0
H6, H8 : True
x2 : Entity
H9 : _revise _jones x2
H7 : _contract x2
H10 : True
============================
False

Toplevel input, characters 608-620:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution.

Error: The reference substitution was not found in the current environment.

Toplevel input, characters 622-626:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
~
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))


Toplevel input, characters 592-596:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). nltac. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))

1 goal

H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1))
H3 : True
x0 : Entity
H4 : _revise _smith x0
H2 : _contract x0
H5, H7 : True
x2 : Entity
H8 : _revise _jones x2
H6 : _contract x2
H9 : True
============================
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))

Toplevel input, characters 602-614:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution.

Error: The reference substitution was not found in the current environment.

Toplevel input, characters 616-620:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
~
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))

1 goal

H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1))
H2 : _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))
H4 : True
x0 : Entity
H5 : _revise _smith x0
H3 : _contract x0
H6, H8 : True
x2 : Entity
H9 : _revise _jones x2
H7 : _contract x2
H10 : True
============================
False

Toplevel input, characters 608-620:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution.

Error: The reference substitution was not found in the current environment.

Toplevel input, characters 622-626:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))

1 goal

H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1))
H3 : True
x0 : Entity
H4 : _revise _smith x0
H2 : _contract x0
H5, H7 : True
x2 : Entity
H8 : _revise _jones x2
H6 : _contract x2
H9 : True
============================
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))

Toplevel input, characters 602-614:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 616-620:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _do is declared

Coq < _jones is declared

Coq < _revise is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) ->
_before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) ->
~
_after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))

1 goal

H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith)
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1))
H2 : _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones)
(exists x : Entity,
(x = _smith /\ True) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2))
H4 : True
x0 : Entity
H5 : _revise _smith x0
H3 : _contract x0
H6, H8 : True
x2 : Entity
H9 : _revise _jones x2
H7 : _contract x2
H10 : True
============================
False

Toplevel input, characters 608-620:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution.

Error: The reference substitution was not found in the current environment.

Toplevel input, characters 622-626:
> Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
unknown

