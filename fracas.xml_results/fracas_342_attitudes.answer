Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)

No more goals.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
~
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1))


Toplevel input, characters 310-314:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                       ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)

No more goals.

Toplevel input, characters 316-333:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^
Error: No such goal.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)

No more goals.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
~
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1))

1 goal

H2 : True
x0 : Entity
H3 : _sign _jones x0
H1 : _contract x0
H4, H6 : True
H8 : _see _smith _jones
H9 : True
x3 : Entity
H10 : _sign _jones x3
H7 : _contract x3
H11 : True
============================
False

Toplevel input, characters 326-338:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 340-344:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                     ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
~
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1))


Toplevel input, characters 310-314:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                       ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)

No more goals.

Toplevel input, characters 316-333:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^
Error: No such goal.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
~
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1))

1 goal

H2 : True
x0 : Entity
H3 : _sign _jones x0
H1 : _contract x0
H4, H6 : True
H8 : _see _smith _jones
H9 : True
x3 : Entity
H10 : _sign _jones x3
H7 : _contract x3
H11 : True
============================
False

Toplevel input, characters 326-338:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 340-344:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                     ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)

No more goals.

Toplevel input, characters 316-333:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^
Error: No such goal.


Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _see is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((z1 = _jones /\ True) /\ _see _smith _jones) /\
(exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) ->
~
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1))

1 goal

H2 : True
x0 : Entity
H3 : _sign _jones x0
H1 : _contract x0
H4, H6 : True
H8 : _see _smith _jones
H9 : True
x3 : Entity
H10 : _sign _jones x3
H7 : _contract x3
H11 : True
============================
False

Toplevel input, characters 326-338:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 340-344:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                     ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
unknown

