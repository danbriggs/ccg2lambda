Welcome to Coq 8.15.0

Coq <
Coq < _cambridge is declared

Coq < _for is declared

Coq < _inhabitant is declared

Coq < _labour is declared

Coq < _mp is declared

Coq < _of is declared

Coq < _vote is declared

Coq < 1 goal

============================
(exists x : Entity,
(((_inhabitant x /\
(exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge)) /\
True) /\ _vote x) /\
(exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2)) ->
forall x : Entity,
_inhabitant x ->
(exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge) /\ True ->
_vote x /\
(exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2)


Toplevel input, characters 429-433:
> Theorem t1: (exists x, (and (and (and (and (_inhabitant x) (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge)))) True) (_vote x)) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))) -> (forall x, ((_inhabitant x) -> ((and (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge))) True) -> (and (_vote x) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                              ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _cambridge is declared

Coq < _for is declared

Coq < _inhabitant is declared

Coq < _labour is declared

Coq < _mp is declared

Coq < _of is declared

Coq < _vote is declared

Coq < 1 goal

============================
(exists x : Entity,
(((_inhabitant x /\
(exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge)) /\
True) /\ _vote x) /\
(exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2)) ->
~
(forall x : Entity,
_inhabitant x ->
(exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge) /\
True ->
_vote x /\
(exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2))


Toplevel input, characters 435-439:
> Theorem t1: (exists x, (and (and (and (and (_inhabitant x) (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge)))) True) (_vote x)) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))) -> (not (forall x, ((_inhabitant x) -> ((and (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge))) True) -> (and (_vote x) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2)))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _cambridge is declared

Coq < _for is declared

Coq < _inhabitant is declared

Coq < _labour is declared

Coq < _mp is declared

Coq < _of is declared

Coq < _vote is declared

Coq < 1 goal

============================
(exists x : Entity,
(((_inhabitant x /\
(exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge)) /\
True) /\ _vote x) /\
(exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2)) ->
forall x : Entity,
_inhabitant x ->
(exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge) /\ True ->
_vote x /\
(exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2)

2 goals

x : Entity
H0 : _inhabitant x
H3 : True
H2 : _of x _cambridge
H4 : True
x1 : Entity
H6 : _vote x1
H7 : True
H : _inhabitant x1
H9 : _of x1 _cambridge
H10 : True
x3 : Entity
H11 : _for x1 x3
H12 : True
H5 : _labour x3
H13 : _mp x3
============================
_vote x

goal 2 is:
_for x x3

Toplevel input, characters 445-457:
> Theorem t1: (exists x, (and (and (and (and (_inhabitant x) (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge)))) True) (_vote x)) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))) -> (forall x, ((_inhabitant x) -> ((and (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge))) True) -> (and (_vote x) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 459-463:
> Theorem t1: (exists x, (and (and (and (and (_inhabitant x) (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge)))) True) (_vote x)) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))) -> (forall x, ((_inhabitant x) -> ((and (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge))) True) -> (and (_vote x) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
unknown

