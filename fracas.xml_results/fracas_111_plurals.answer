Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _one is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < _two is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_one z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) ->
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity,
((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1))


Toplevel input, characters 500-504:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_one z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). nltac. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _one is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < _two is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_one z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) ->
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) ->
~
((exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity,
((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)))


Toplevel input, characters 506-510:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_one z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). nltac. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _contract is declared

Coq < _jones is declared

Coq < _one is declared

Coq < _sign is declared

Coq < _smith is declared

Coq < _two is declared

Coq < 1 goal

============================
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_one z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) ->
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) ->
(exists x : Entity,
(x = _smith /\ True) /\
(exists z1 : Entity,
((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\
(exists x : Entity,
(x = _jones /\ True) /\
(exists z1 : Entity,
((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1))

3 goals

H2 : True
x0 : Entity
H3 : _sign _jones x0
H1 : _contract x0
H4, H6 : True
x2 : Entity
H7 : _sign _smith x2
H8 : True
H5 : _one x2
H9 : _contract x2
============================
_two x2

goal 2 is:
_two x2
goal 3 is:
_sign _jones x2

Toplevel input, characters 516-528:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_one z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). repeat nltac_base. try substitution.

Error: The reference substitution was not found in the current environment.

Toplevel input, characters 530-534:
> Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_one z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. Qed.

Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
unknown

