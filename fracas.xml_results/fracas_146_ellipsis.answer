Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))


Toplevel input, characters 405-409:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                      ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
~
(exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)))


Toplevel input, characters 411-415:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                            ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))

1 goal

H1 : Prog (_go _bill)
H2 : _to_e2 _bill
H3 : _be _bill
H4 : True
H6 : _speak _john
H7 : _have _john
H8 : True
H9 : _to_e3 _john _mary
H10 : True
============================
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))

Toplevel input, characters 421-433:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                      ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 435-439:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))


Toplevel input, characters 405-409:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                      ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
~
(exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)))

1 goal

H2 : _will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))
H3 : True
H5 : _speak _john
H6 : _have _john
H7 : True
H8 : _to_e3 _john _mary
H9 : True
H10 : Prog (_go _bill)
H11 : _to_e2 _bill
H12 : _be _bill
H13 : True
============================
False

Toplevel input, characters 427-439:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                            ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 441-445:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
~
(exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)))


Toplevel input, characters 411-415:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                            ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))

1 goal

H1 : Prog (_go _bill)
H2 : _to_e2 _bill
H3 : _be _bill
H4 : True
H6 : _speak _john
H7 : _have _john
H8 : True
H9 : _to_e3 _john _mary
H10 : True
============================
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))

Toplevel input, characters 421-433:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                      ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 435-439:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
~
(exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)))

1 goal

H2 : _will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))
H3 : True
H5 : _speak _john
H6 : _have _john
H7 : True
H8 : _to_e3 _john _mary
H9 : True
H10 : Prog (_go _bill)
H11 : _to_e2 _bill
H12 : _be _bill
H13 : True
============================
False

Toplevel input, characters 427-439:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                            ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 441-445:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))

1 goal

H1 : Prog (_go _bill)
H2 : _to_e2 _bill
H3 : _be _bill
H4 : True
H6 : _speak _john
H7 : _have _john
H8 : True
H9 : _to_e3 _john _mary
H10 : True
============================
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))

Toplevel input, characters 421-433:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                      ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 435-439:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _bill is declared

Coq < _go is declared

Coq < _have is declared

Coq < _john is declared

Coq < _mary is declared

Coq < _speak is declared

Coq < _to is declared

Coq < _to_e2 is declared

Coq < _to_e3 is declared

Coq < _will is declared

Coq < 1 goal

============================
(exists x : Entity,
(((x = _john /\ True) /\ _have _john) /\ _speak _john) /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) ->
(exists x : Entity,
(((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) ->
~
(exists x : Entity,
(x = _bill /\ True) /\
_will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)))

1 goal

H2 : _will
(_speak _bill /\
(exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))
H3 : True
H5 : _speak _john
H6 : _have _john
H7 : True
H8 : _to_e3 _john _mary
H9 : True
H10 : Prog (_go _bill)
H11 : _to_e2 _bill
H12 : _be _bill
H13 : True
============================
False

Toplevel input, characters 427-439:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                            ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 441-445:
> Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
unknown

