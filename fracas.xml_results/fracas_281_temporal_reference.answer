Welcome to Coq 8.15.0

Coq <
Coq < _1991 is declared

Coq < _1992 is declared

Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _run is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
((x = _smith /\ True) /\ _be _smith) /\
(exists z2 : Entity,
((_1991 z2 /\ True) /\ _in _smith z2) /\
(exists z1 : Entity, (_business z1 /\ True) /\ Prog (_run _smith z1)))) ->
exists x : Entity,
((x = _smith /\ True) /\ _be _smith) /\
(exists z2 : Entity,
((_1992 z2 /\ True) /\ _in _smith z2) /\
(exists z1 : Entity, True /\ Prog (_run _smith z1)))


Toplevel input, characters 388-392:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_business z1) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (Prog (_run _smith z1)))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                     ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _1991 is declared

Coq < _1992 is declared

Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _run is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
((x = _smith /\ True) /\ _be _smith) /\
(exists z2 : Entity,
((_1991 z2 /\ True) /\ _in _smith z2) /\
(exists z1 : Entity, (_business z1 /\ True) /\ Prog (_run _smith z1)))) ->
~
(exists x : Entity,
((x = _smith /\ True) /\ _be _smith) /\
(exists z2 : Entity,
((_1992 z2 /\ True) /\ _in _smith z2) /\
(exists z1 : Entity, True /\ Prog (_run _smith z1))))


Toplevel input, characters 394-398:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_business z1) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (Prog (_run _smith z1))))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                           ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _1991 is declared

Coq < _1992 is declared

Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _run is declared

Coq < _smith is declared

Coq < 1 goal

============================
(exists x : Entity,
((x = _smith /\ True) /\ _be _smith) /\
(exists z2 : Entity,
((_1991 z2 /\ True) /\ _in _smith z2) /\
(exists z1 : Entity, (_business z1 /\ True) /\ Prog (_run _smith z1)))) ->
exists x : Entity,
((x = _smith /\ True) /\ _be _smith) /\
(exists z2 : Entity,
((_1992 z2 /\ True) /\ _in _smith z2) /\
(exists z1 : Entity, True /\ Prog (_run _smith z1)))

1 goal

H1 : _be _smith
H2 : True
x0 : Entity
H4 : _in _smith x0
H0 : _1991 x0
H5 : True
x1 : Entity
H6 : Prog (_run _smith x1)
H3 : _business x1
H7 : True
============================
_1992 x0

Toplevel input, characters 404-416:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_business z1) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (Prog (_run _smith z1)))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                     ^^^^^^^^^^^^
Error: The reference substitution was not found in the current environment.

Toplevel input, characters 418-422:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_business z1) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (Prog (_run _smith z1)))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                   ^^^^
Error:  (in proof t1): Attempt to save an incomplete proof

t1 <

Theorem is not defined!
unknown

