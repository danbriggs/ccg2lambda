Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 296-427:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))).
>                                                                                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 433-438:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). nltac.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 440-444:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 301-432:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))).
>                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 439-444:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). nltac.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 446-450:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 296-427:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))).
>                                                                                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 433-439:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 452-455:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 470-474:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 296-427:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))).
>                                                                                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 433-438:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). nltac.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 440-444:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 301-432:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))).
>                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 439-445:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 458-461:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 476-480:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 301-432:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))).
>                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 439-444:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). nltac.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 446-450:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). nltac. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 296-427:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))).
>                                                                                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 433-439:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 452-455:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 470-474:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 301-432:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))).
>                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 439-445:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 458-461:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 476-480:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 296-427:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))).
>                                                                                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 433-439:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 452-455:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 470-474:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
Welcome to Coq 8.15.0

Coq <
Coq < _be is declared

Coq < _business is declared

Coq < _in is declared

Coq < _own is declared

Coq < _run is declared

Coq < _smith is declared

Coq < _spend is declared

Coq < _two is declared

Coq < _year is declared

Coq < Toplevel input, characters 301-432:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))).
>                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error:
In environment
x : Entity
The term
"exists x : Entity,
((_two x /\ _year x) /\ True) /\
(exists z1 : Entity,
((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type
"Prop" while it is expected to have type "Entity".

Toplevel input, characters 439-445:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^^^^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 458-461:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^^^
Error: Syntax error: illegal begin of toplevel:vernac_toplevel.

Toplevel input, characters 476-480:
> Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution. Qed.
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^^^^
Error: No focused proof (No proof-editing in progress).

Coq <

Theorem is not defined!
unknown

