ERROR:root:Failed to parse exists x.(_memoirs(x) & TrueP & -_will((_allow(x) & _and(\X0 Q.Q(\w.TrueP,\x.-X0(\w.TrueP,\y.(x = y))),\w.TrueP,\y._write(x,y)))))(\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones))). Error: The function '(_memoirs(x) & TrueP & -_will((_allow(x) & _and(\X0 Q.Q(\w.TrueP,\x.-X0(\w.TrueP,\y.(x = y))),\w.TrueP,\y._write(x,y)))))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists x.(_memoirs(x) & TrueP & -_will((_allow(x) & _and(\X0 Q.Q(\w.TrueP,\x.-X0(\w.TrueP,\y.(x = y))),\w.TrueP,\y._write(x,y)))))(\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones)))
                                                                                                                                 ^
ERROR:root:An error occurred: The function '(_memoirs(x) & TrueP & -_will((_allow(x) & _and(\X0 Q.Q(\w.TrueP,\x.-X0(\w.TrueP,\y.(x = y))),\w.TrueP,\y._write(x,y)))))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists x.(_memoirs(x) & TrueP & -_will((_allow(x) & _and(\X0 Q.Q(\w.TrueP,\x.-X0(\w.TrueP,\y.(x = y))),\w.TrueP,\y._write(x,y)))))(\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones)))
                                                                                                                                 ^
Sentence: It is the case that Jones is not and will never be allowed to write his memoirs .
Tree XML:
<sentence>
  <tokens>
    <token start="0" span="1" pos="PRP" chunk="I-NP" entity="O" cat="NP[expl]" id="t1_0" surf="It" base="it"/>
    <token start="1" span="1" pos="VBZ" chunk="I-VP" entity="O" cat="((S[dcl]\NP[expl])/S[em])/NP" id="t1_1" surf="is" base="be"/>
    <token start="2" span="1" pos="DT" chunk="I-NP" entity="O" cat="NP[nb]/N" id="t1_2" surf="the" base="the"/>
    <token start="3" span="1" pos="NN" chunk="I-NP" entity="O" cat="N" id="t1_3" surf="case" base="case"/>
    <token start="4" span="1" pos="IN" chunk="I-SBAR" entity="O" cat="S[em]/S[dcl]" id="t1_4" surf="that" base="that"/>
    <token start="5" span="1" pos="NNP" chunk="I-NP" entity="I-PER" cat="N" id="t1_5" surf="Jones" base="jones"/>
    <token start="6" span="1" pos="VBZ" chunk="I-VP" entity="O" cat="(S[dcl]\NP)/NP" id="t1_6" surf="is" base="be"/>
    <token start="7" span="1" pos="RB" chunk="O" entity="O" cat="(S\NP)\(S\NP)" id="t1_7" surf="not" base="not"/>
    <token start="8" span="1" pos="CC" chunk="O" entity="O" cat="conj" id="t1_8" surf="and" base="and"/>
    <token start="9" span="1" pos="MD" chunk="I-VP" entity="O" cat="(S[dcl]\NP)/(S[b]\NP)" id="t1_9" surf="will" base="will"/>
    <token start="10" span="1" pos="RB" chunk="I-VP" entity="O" cat="(S\NP)\(S\NP)" id="t1_10" surf="never" base="never"/>
    <token start="11" span="1" pos="VB" chunk="I-VP" entity="O" cat="(S[b]\NP)/(S[pss]\NP)" id="t1_11" surf="be" base="be"/>
    <token start="12" span="1" pos="VBN" chunk="I-VP" entity="O" cat="(S[pss]\NP)/(S[to]\NP)" id="t1_12" surf="allowed" base="allow"/>
    <token start="13" span="1" pos="TO" chunk="I-VP" entity="O" cat="(S[to]\NP)/(S[b]\NP)" id="t1_13" surf="to" base="to"/>
    <token start="14" span="1" pos="VB" chunk="I-VP" entity="O" cat="(S[b]\NP)/NP" id="t1_14" surf="write" base="write"/>
    <token start="15" span="1" pos="PRP$" chunk="I-NP" entity="O" cat="NP[nb]/N" id="t1_15" surf="his" base="his"/>
    <token start="16" span="1" pos="NNS" chunk="I-NP" entity="O" cat="N" id="t1_16" surf="memoirs" base="memoirs"/>
    <token start="17" span="1" pos="." chunk="O" entity="O" cat="." id="t1_17" surf="." base="."/>
  </tokens>
  <ccg root="s1_sp0" id="s1_ccg0">
    <span root="true" id="s1_sp0" child="s1_sp1 s1_sp35" pos="None" category="S[dcl=true]" rule="rp"/>
    <span id="s1_sp1" child="s1_sp2 s1_sp3" pos="None" category="S[dcl=true]" rule="ba"/>
    <span start="0" span="1" pos="PRP" chunk="I-NP" entity="O" id="s1_sp2" surf="It" base="it" terminal="t1_0" category="NP[expl=true]"/>
    <span id="s1_sp3" child="s1_sp4 s1_sp9" pos="None" category="S[dcl=true]\NP[expl=true]" rule="fa"/>
    <span id="s1_sp4" child="s1_sp5 s1_sp6" pos="None" category="(S[dcl=true]\NP[expl=true])/S[em=true]" rule="fa"/>
    <span start="1" span="1" pos="VBZ" chunk="I-VP" entity="O" id="s1_sp5" surf="is" base="be" terminal="t1_1" category="((S[dcl=true]\NP[expl=true])/S[em=true])/NP"/>
    <span id="s1_sp6" child="s1_sp7 s1_sp8" pos="None" category="NP[nb=true]" rule="fa"/>
    <span start="2" span="1" pos="DT" chunk="I-NP" entity="O" id="s1_sp7" surf="the" base="the" terminal="t1_2" category="NP[nb=true]/N"/>
    <span start="3" span="1" pos="NN" chunk="I-NP" entity="O" id="s1_sp8" surf="case" base="case" terminal="t1_3" category="N"/>
    <span id="s1_sp9" child="s1_sp10 s1_sp11" pos="None" category="S[em=true]" rule="fa"/>
    <span start="4" span="1" pos="IN" chunk="I-SBAR" entity="O" id="s1_sp10" surf="that" base="that" terminal="t1_4" category="S[em=true]/S[dcl=true]"/>
    <span id="s1_sp11" child="s1_sp12 s1_sp14" pos="None" category="S[dcl=true]" rule="ba"/>
    <span id="s1_sp12" child="s1_sp13" pos="None" category="NP" rule="lex"/>
    <span start="5" span="1" pos="NNP" chunk="I-NP" entity="I-PER" id="s1_sp13" surf="Jones" base="jones" terminal="t1_5" category="N"/>
    <span id="s1_sp14" child="s1_sp15 s1_sp32" pos="None" category="S[dcl=true]\NP" rule="fa"/>
    <span id="s1_sp15" child="s1_sp16 s1_sp19" pos="None" category="(S[dcl=true]\NP)/NP" rule="ba"/>
    <span id="s1_sp16" child="s1_sp17 s1_sp18" pos="None" category="(S[dcl=true]\NP)/NP" rule="bx"/>
    <span start="6" span="1" pos="VBZ" chunk="I-VP" entity="O" id="s1_sp17" surf="is" base="be" terminal="t1_6" category="(S[dcl=true]\NP)/NP"/>
    <span start="7" span="1" pos="RB" chunk="O" entity="O" id="s1_sp18" surf="not" base="not" terminal="t1_7" category="(S\NP)\(S\NP)"/>
    <span id="s1_sp19" child="s1_sp20 s1_sp21" pos="None" category="((S[dcl=true]\NP)/NP)\((S[dcl=true]\NP)/NP)" rule="conj"/>
    <span start="8" span="1" pos="CC" chunk="O" entity="O" id="s1_sp20" surf="and" base="and" terminal="t1_8" category="conj"/>
    <span id="s1_sp21" child="s1_sp22 s1_sp25" pos="None" category="(S[dcl=true]\NP)/NP" rule="fc"/>
    <span id="s1_sp22" child="s1_sp23 s1_sp24" pos="None" category="(S[dcl=true]\NP)/(S[b=true]\NP)" rule="bx"/>
    <span start="9" span="1" pos="MD" chunk="I-VP" entity="O" id="s1_sp23" surf="will" base="will" terminal="t1_9" category="(S[dcl=true]\NP)/(S[b=true]\NP)"/>
    <span start="10" span="1" pos="RB" chunk="I-VP" entity="O" id="s1_sp24" surf="never" base="never" terminal="t1_10" category="(S\NP)\(S\NP)"/>
    <span id="s1_sp25" child="s1_sp26 s1_sp27" pos="None" category="(S[b=true]\NP)/NP" rule="fc"/>
    <span start="11" span="1" pos="VB" chunk="I-VP" entity="O" id="s1_sp26" surf="be" base="be" terminal="t1_11" category="(S[b=true]\NP)/(S[pss=true]\NP)"/>
    <span id="s1_sp27" child="s1_sp28 s1_sp29" pos="None" category="(S[pss=true]\NP)/NP" rule="fc"/>
    <span start="12" span="1" pos="VBN" chunk="I-VP" entity="O" id="s1_sp28" surf="allowed" base="allow" terminal="t1_12" category="(S[pss=true]\NP)/(S[to=true]\NP)"/>
    <span id="s1_sp29" child="s1_sp30 s1_sp31" pos="None" category="(S[to=true]\NP)/NP" rule="fc"/>
    <span start="13" span="1" pos="TO" chunk="I-VP" entity="O" id="s1_sp30" surf="to" base="to" terminal="t1_13" category="(S[to=true]\NP)/(S[b=true]\NP)"/>
    <span start="14" span="1" pos="VB" chunk="I-VP" entity="O" id="s1_sp31" surf="write" base="write" terminal="t1_14" category="(S[b=true]\NP)/NP"/>
    <span id="s1_sp32" child="s1_sp33 s1_sp34" pos="None" category="NP[nb=true]" rule="fa"/>
    <span start="15" span="1" pos="PRP$" chunk="I-NP" entity="O" id="s1_sp33" surf="his" base="his" terminal="t1_15" category="NP[nb=true]/N"/>
    <span start="16" span="1" pos="NNS" chunk="I-NP" entity="O" id="s1_sp34" surf="memoirs" base="memoirs" terminal="t1_16" category="N"/>
    <span start="17" span="1" pos="." chunk="O" entity="O" id="s1_sp35" surf="." base="." terminal="t1_17" category="."/>
  </ccg>
</sentence>

