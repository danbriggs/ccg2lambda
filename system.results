fracas_001_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 410-415: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 417-421: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 416-421: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 423-427: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 410-416: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 429-432: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 447-451: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 410-415: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 417-421: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 416-422: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 435-438: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 453-457: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 416-421: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 423-427: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 410-416: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 429-432: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 447-451: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 416-422: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 435-438: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 453-457: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 410-416: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 429-432: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 447-451: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _an is declared Coq < _become is declared Coq < _greatest is declared Coq < _italian is declared Coq < _tenor is declared Coq < _world is declared Coq < Toplevel input, characters 13-54: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: Illegal application (Non-functional construction): The expression "True" of type "Prop" cannot be applied to the term "fun x : Entity => _an x /\ _italian x" : "Entity -> Prop" Toplevel input, characters 416-422: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 435-438: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 453-457: > Theorem t1: (True (fun x => (and (_an x) (_italian x))) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_world z2) True) (Rel z3 z2))) (_greatest z3)) (_tenor z3)) True) (_become x z3))))) -> (not (exists x z4, (and (and (and (_italian z4) (exists z2, (and (and (and (and (exists z1, (and (and (_world z1) True) (Rel z2 z1))) (_greatest z2)) (_tenor z2)) True) (_become z4 z2)))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_002_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) Toplevel input, characters 450-454: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Toplevel input, characters 456-473: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) 1 goal H : forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1) x0 : Entity H3 : True H4 : _want x0 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x0 = z1) H1 : _italian x0 H5 : _man x0 H7 : True x2 : Entity H8 : _man x2 H0 : _italian x2 H10 : True H6 : _great x2 H11 : _tenor x2 ============================ False Toplevel input, characters 466-478: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 480-484: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) Toplevel input, characters 450-454: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Toplevel input, characters 456-473: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) 1 goal H : forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1) x0 : Entity H3 : True H4 : _want x0 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x0 = z1) H1 : _italian x0 H5 : _man x0 H7 : True x2 : Entity H8 : _man x2 H0 : _italian x2 H10 : True H6 : _great x2 H11 : _tenor x2 ============================ False Toplevel input, characters 466-478: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 480-484: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Toplevel input, characters 456-473: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) 1 goal H : forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1) x0 : Entity H3 : True H4 : _want x0 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x0 = z1) H1 : _italian x0 H5 : _man x0 H7 : True x2 : Entity H8 : _man x2 H0 : _italian x2 H10 : True H6 : _great x2 H11 : _tenor x2 ============================ False Toplevel input, characters 466-478: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 480-484: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_003_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) Toplevel input, characters 450-454: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Toplevel input, characters 456-473: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) 1 goal H : forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1) x0 : Entity H3 : True H4 : _want x0 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x0 = z1) H1 : _italian x0 H5 : _man x0 H7 : True x2 : Entity H8 : _man x2 H0 : _italian x2 H10 : True H6 : _great x2 H11 : _tenor x2 ============================ False Toplevel input, characters 466-478: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 480-484: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) Toplevel input, characters 450-454: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Toplevel input, characters 456-473: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) 1 goal H : forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1) x0 : Entity H3 : True H4 : _want x0 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x0 = z1) H1 : _italian x0 H5 : _man x0 H7 : True x2 : Entity H8 : _man x2 H0 : _italian x2 H10 : True H6 : _great x2 H11 : _tenor x2 ============================ False Toplevel input, characters 466-478: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 480-484: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4 No more goals. Toplevel input, characters 456-473: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _man is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> (exists x : Entity, ((_italian x /\ _man x) /\ True) /\ (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1)) -> ~ (exists x z4 : Entity, (((_italian z4 /\ _man z4) /\ _want z4 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ z4 = z1)) /\ True) /\ x = z4) 1 goal H : forall x : Entity, _italian x /\ _man x -> True -> _want x (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x = z1) x0 : Entity H3 : True H4 : _want x0 (exists z1 : Entity, ((_great z1 /\ _tenor z1) /\ True) /\ x0 = z1) H1 : _italian x0 H5 : _man x0 H7 : True x2 : Entity H8 : _man x2 H0 : _italian x2 H10 : True H6 : _great x2 H11 : _tenor x2 ============================ False Toplevel input, characters 466-478: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 480-484: > Theorem t1: (forall x, ((and (_italian x) (_man x)) -> (True -> (_want x (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))))) -> (exists x, (and (and (and (_italian x) (_man x)) True) (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (x = z1))))) -> (not (exists x z4, (and (and (and (and (_italian z4) (_man z4)) (_want z4 (exists z1, (and (and (and (_great z1) (_tenor z1)) True) (z4 = z1))))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_004_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> ~ (exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3) Toplevel input, characters 282-286: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (not (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3 No more goals. Toplevel input, characters 288-305: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> ~ (exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3) 1 goal H : forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x) x0 : Entity H3 : True H4 : _want x0 (_great x0) H1 : _italian x0 H5 : _tenor x0 x1 : Entity H6 : _great x1 H7 : True H0 : _italian x1 H8 : _tenor x1 ============================ False Toplevel input, characters 298-310: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (not (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 312-316: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (not (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> ~ (exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3) Toplevel input, characters 282-286: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (not (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3 No more goals. Toplevel input, characters 288-305: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> ~ (exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3) 1 goal H : forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x) x0 : Entity H3 : True H4 : _want x0 (_great x0) H1 : _italian x0 H5 : _tenor x0 x1 : Entity H6 : _great x1 H7 : True H0 : _italian x1 H8 : _tenor x1 ============================ False Toplevel input, characters 298-310: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (not (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 312-316: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (not (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3 No more goals. Toplevel input, characters 288-305: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < _want is declared Coq < 1 goal ============================ (forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x)) -> (exists x : Entity, ((_italian x /\ _tenor x) /\ True) /\ _great x) -> ~ (exists x z3 : Entity, (((_italian z3 /\ _tenor z3) /\ _want z3 (_great z3)) /\ True) /\ x = z3) 1 goal H : forall x : Entity, _italian x /\ _tenor x -> True -> _want x (_great x) x0 : Entity H3 : True H4 : _want x0 (_great x0) H1 : _italian x0 H5 : _tenor x0 x1 : Entity H6 : _great x1 H7 : True H0 : _italian x1 H8 : _tenor x1 ============================ False Toplevel input, characters 298-310: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (not (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 312-316: > Theorem t1: (forall x, ((and (_italian x) (_tenor x)) -> (True -> (_want x (_great x))))) -> (exists x, (and (and (and (_italian x) (_tenor x)) True) (_great x))) -> (not (exists x z3, (and (and (and (and (_italian z3) (_tenor z3)) (_want z3 (_great z3))) True) (x = z3)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_005_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> ~ (exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3)) Toplevel input, characters 244-248: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (not (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3) No more goals. Toplevel input, characters 250-267: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> ~ (exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3)) 1 goal x0 : Entity H0 : _really x0 H3 : True H4 : _italian x0 H1 : _ambitious x0 H5 : _tenor x0 x1 : Entity H6 : _italian x1 H7 : True H8 : _tenor x1 H : _really x1 H9 : _ambitious x1 ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (not (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (not (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> ~ (exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3)) Toplevel input, characters 244-248: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (not (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3) No more goals. Toplevel input, characters 250-267: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> ~ (exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3)) 1 goal x0 : Entity H0 : _really x0 H3 : True H4 : _italian x0 H1 : _ambitious x0 H5 : _tenor x0 x1 : Entity H6 : _italian x1 H7 : True H8 : _tenor x1 H : _really x1 H9 : _ambitious x1 ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (not (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (not (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3) No more goals. Toplevel input, characters 250-267: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ambitious is declared Coq < _italian is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_really x /\ _ambitious x) /\ _tenor x) /\ True) /\ _italian x) -> ~ (exists x : Entity, _really x /\ (exists z3 : Entity, (((_ambitious z3 /\ _tenor z3) /\ _italian z3) /\ True) /\ x = z3)) 1 goal x0 : Entity H0 : _really x0 H3 : True H4 : _italian x0 H1 : _ambitious x0 H5 : _tenor x0 x1 : Entity H6 : _italian x1 H7 : True H8 : _tenor x1 H : _really x1 H9 : _ambitious x1 ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (not (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (and (and (_really x) (_ambitious x)) (_tenor x)) True) (_italian x))) -> (not (exists x, (and (_really x) (exists z3, (and (and (and (and (_ambitious z3) (_tenor z3)) (_italian z3)) True) (x = z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_006_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _modest is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (forall x : Entity, (_really x /\ _great x) /\ _tenor x -> True -> ~ _modest x) -> exists x : Entity, _really x /\ (exists z3 : Entity, (((_great z3 /\ _tenor z3) /\ _modest z3) /\ True) /\ x = z3) Toplevel input, characters 232-236: > Theorem t1: (forall x, ((and (and (_really x) (_great x)) (_tenor x)) -> (True -> (not (_modest x))))) -> (exists x, (and (_really x) (exists z3, (and (and (and (and (_great z3) (_tenor z3)) (_modest z3)) True) (x = z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _modest is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (forall x : Entity, (_really x /\ _great x) /\ _tenor x -> True -> ~ _modest x) -> ~ (exists x : Entity, _really x /\ (exists z3 : Entity, (((_great z3 /\ _tenor z3) /\ _modest z3) /\ True) /\ x = z3)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _modest is declared Coq < _really is declared Coq < _tenor is declared Coq < 1 goal ============================ (forall x : Entity, (_really x /\ _great x) /\ _tenor x -> True -> ~ _modest x) -> exists x : Entity, _really x /\ (exists z3 : Entity, (((_great z3 /\ _tenor z3) /\ _modest z3) /\ True) /\ x = z3) 4 focused goals (shelved: 1) H : forall x : Entity, (_really x /\ _great x) /\ _tenor x -> True -> _modest x -> False ============================ _really ?x goal 2 is: _great ?x goal 3 is: _tenor ?x goal 4 is: _modest ?x Toplevel input, characters 248-260: > Theorem t1: (forall x, ((and (and (_really x) (_great x)) (_tenor x)) -> (True -> (not (_modest x))))) -> (exists x, (and (_really x) (exists z3, (and (and (and (and (_great z3) (_tenor z3)) (_modest z3)) True) (x = z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 262-266: > Theorem t1: (forall x, ((and (and (_really x) (_great x)) (_tenor x)) -> (True -> (not (_modest x))))) -> (exists x, (and (_really x) (exists z3, (and (and (and (and (_great z3) (_tenor z3)) (_modest z3)) True) (x = z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_007_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2) Toplevel input, characters 190-194: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2 No more goals. Toplevel input, characters 196-213: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2) 1 goal x0 : Entity H2 : True H3 : _swedish x0 H0 : _great x0 H4 : _tenor x0 x1 : Entity H5 : _swedish x1 H6 : True H : _great x1 H7 : _tenor x1 ============================ False Toplevel input, characters 206-218: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 220-224: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2) Toplevel input, characters 190-194: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2 No more goals. Toplevel input, characters 196-213: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2) 1 goal x0 : Entity H2 : True H3 : _swedish x0 H0 : _great x0 H4 : _tenor x0 x1 : Entity H5 : _swedish x1 H6 : True H : _great x1 H7 : _tenor x1 ============================ False Toplevel input, characters 206-218: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 220-224: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2 No more goals. Toplevel input, characters 196-213: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _swedish is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, ((_great x /\ _tenor x) /\ True) /\ _swedish x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _swedish z2) /\ True) /\ x = z2) 1 goal x0 : Entity H2 : True H3 : _swedish x0 H0 : _great x0 H4 : _tenor x0 x1 : Entity H5 : _swedish x1 H6 : True H : _great x1 H7 : _tenor x1 ============================ False Toplevel input, characters 206-218: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 220-224: > Theorem t1: (exists x, (and (and (and (_great x) (_tenor x)) True) (_swedish x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_swedish z2)) True) (x = z2)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_008_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2) Toplevel input, characters 204-208: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2 No more goals. Toplevel input, characters 210-227: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2) 1 goal x0 : Entity H2 : True H3 : _german x0 H0 : _great x0 H4 : _tenor x0 x1 : Entity H5 : _german x1 H6 : True H7 : _tenor x1 H : _many x1 H8 : _great x1 ============================ False Toplevel input, characters 220-232: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 234-238: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2) Toplevel input, characters 204-208: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2 No more goals. Toplevel input, characters 210-227: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2) 1 goal x0 : Entity H2 : True H3 : _german x0 H0 : _great x0 H4 : _tenor x0 x1 : Entity H5 : _german x1 H6 : True H7 : _tenor x1 H : _many x1 H8 : _great x1 ============================ False Toplevel input, characters 220-232: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 234-238: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2 No more goals. Toplevel input, characters 210-227: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _german is declared Coq < _great is declared Coq < _many is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _great x) /\ _tenor x) /\ True) /\ _german x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _german z2) /\ True) /\ x = z2) 1 goal x0 : Entity H2 : True H3 : _german x0 H0 : _great x0 H4 : _tenor x0 x1 : Entity H5 : _german x1 H6 : True H7 : _tenor x1 H : _many x1 H8 : _great x1 ============================ False Toplevel input, characters 220-232: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 234-238: > Theorem t1: (exists x, (and (and (and (and (_many x) (_great x)) (_tenor x)) True) (_german x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_german z2)) True) (x = z2)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_009_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2) Toplevel input, characters 209-213: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2 No more goals. Toplevel input, characters 215-232: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2) 1 goal x0 : Entity H2 : True H3 : _british x0 H0 : _great x0 H4 : _tenor x0 x1 : Entity H5 : _british x1 H6 : True H7 : _tenor x1 H : _several x1 H8 : _great x1 ============================ False Toplevel input, characters 225-237: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 239-243: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2) Toplevel input, characters 209-213: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2 No more goals. Toplevel input, characters 215-232: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2) 1 goal x0 : Entity H2 : True H3 : _british x0 H0 : _great x0 H4 : _tenor x0 x1 : Entity H5 : _british x1 H6 : True H7 : _tenor x1 H : _several x1 H8 : _great x1 ============================ False Toplevel input, characters 225-237: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 239-243: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2 No more goals. Toplevel input, characters 215-232: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _great is declared Coq < _several is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _great x) /\ _tenor x) /\ True) /\ _british x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _british z2) /\ True) /\ x = z2) 1 goal x0 : Entity H2 : True H3 : _british x0 H0 : _great x0 H4 : _tenor x0 x1 : Entity H5 : _british x1 H6 : True H7 : _tenor x1 H : _several x1 H8 : _great x1 ============================ False Toplevel input, characters 225-237: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 239-243: > Theorem t1: (exists x, (and (and (and (and (_several x) (_great x)) (_tenor x)) True) (_british x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_british z2)) True) (x = z2)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_010_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < 1 goal ============================ most x; (_great x /\ _tenor x) /\ True, _italian x -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _italian z2) /\ True) /\ x = z2 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < 1 goal ============================ most x; (_great x /\ _tenor x) /\ True, _italian x -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _italian z2) /\ True) /\ x = z2) Toplevel input, characters 201-205: > Theorem t1: (Most (fun x => (and (and (_great x) (_tenor x)) True)) (fun x => (_italian x))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_italian z2)) True) (x = z2)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _great is declared Coq < _italian is declared Coq < _tenor is declared Coq < 1 goal ============================ most x; (_great x /\ _tenor x) /\ True, _italian x -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _italian z2) /\ True) /\ x = z2 3 focused goals (shelved: 1) H : most x; (_great x /\ _tenor x) /\ True, _italian x ============================ _great ?x goal 2 is: _tenor ?x goal 3 is: _italian ?x Toplevel input, characters 211-223: > Theorem t1: (Most (fun x => (and (and (_great x) (_tenor x)) True)) (fun x => (_italian x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_italian z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 225-229: > Theorem t1: (Most (fun x => (and (and (_great x) (_tenor x)) True)) (fun x => (_italian x))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_italian z2)) True) (x = z2))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_011_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 481-486: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 488-492: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 487-492: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 494-498: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 481-487: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 500-503: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 518-522: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 481-486: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 488-492: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 487-493: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 506-509: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 524-528: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 487-492: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 494-498: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 481-487: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 500-503: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 518-522: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 487-493: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 506-509: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 524-528: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 481-487: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 500-503: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 518-522: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _like is declared Coq < _music is declared Coq < _popular is declared Coq < _sing is declared Coq < _tenor is declared Coq < Toplevel input, characters 163-322: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, (((_great x /\ _tenor x) /\ (exists z1 : Entity, ((_popular z1 /\ _music z1) /\ True) /\ _like x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 487-493: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 506-509: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 524-528: > Theorem t1: (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing x z1))))) -> (fun F1 F3 => (exists x, (and (and (and (and (_great x) (_tenor x)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_like x z1)))) (F1 x)) (F3 x)))) -> (not (exists x z3, (and (and (and (and (_great z3) (_tenor z3)) (exists z1, (and (and (and (_popular z1) (_music z1)) True) (_sing z3 z1)))) True) (x = z3)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_012_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _poor is declared Coq < _tenor is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _great x) /\ _tenor x) /\ True) /\ _poor x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _poor z2) /\ True) /\ x = z2 Toplevel input, characters 199-203: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (_poor x)))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_poor z2)) True) (x = z2))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _poor is declared Coq < _tenor is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _great x) /\ _tenor x) /\ True) /\ _poor x) -> ~ (exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _poor z2) /\ True) /\ x = z2) Toplevel input, characters 205-209: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (_poor x)))) -> (not (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_poor z2)) True) (x = z2)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _few is declared Coq < _great is declared Coq < _poor is declared Coq < _tenor is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _great x) /\ _tenor x) /\ True) /\ _poor x) -> exists x z2 : Entity, (((_great z2 /\ _tenor z2) /\ _poor z2) /\ True) /\ x = z2 3 focused goals (shelved: 1) H : forall x : Entity, (((_few x /\ _great x) /\ _tenor x) /\ True) /\ _poor x -> False ============================ _great ?x goal 2 is: _tenor ?x goal 3 is: _poor ?x Toplevel input, characters 215-227: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (_poor x)))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_poor z2)) True) (x = z2))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 229-233: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_great x)) (_tenor x)) True) (_poor x)))) -> (exists x z2, (and (and (and (and (_great z2) (_tenor z2)) (_poor z2)) True) (x = z2))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_013_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _excellent is declared Coq < _indispensable is declared Coq < _lead is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((two x /\ _lead x) /\ _tenor x) /\ True) /\ _excellent x) -> (exists x : Entity, (((_lead x /\ _tenor x) /\ _excellent x) /\ True) /\ _indispensable x) -> exists x : Entity, (((two x /\ _lead x) /\ _tenor x) /\ True) /\ _indispensable x Toplevel input, characters 296-300: > Theorem t1: (exists x, (and (and (and (and (two x) (_lead x)) (_tenor x)) True) (_excellent x))) -> (exists x, (and (and (and (and (_lead x) (_tenor x)) (_excellent x)) True) (_indispensable x))) -> (exists x, (and (and (and (and (two x) (_lead x)) (_tenor x)) True) (_indispensable x))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _excellent is declared Coq < _indispensable is declared Coq < _lead is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((two x /\ _lead x) /\ _tenor x) /\ True) /\ _excellent x) -> (exists x : Entity, (((_lead x /\ _tenor x) /\ _excellent x) /\ True) /\ _indispensable x) -> ~ (exists x : Entity, (((two x /\ _lead x) /\ _tenor x) /\ True) /\ _indispensable x) Toplevel input, characters 302-306: > Theorem t1: (exists x, (and (and (and (and (two x) (_lead x)) (_tenor x)) True) (_excellent x))) -> (exists x, (and (and (and (and (_lead x) (_tenor x)) (_excellent x)) True) (_indispensable x))) -> (not (exists x, (and (and (and (and (two x) (_lead x)) (_tenor x)) True) (_indispensable x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _excellent is declared Coq < _indispensable is declared Coq < _lead is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (((two x /\ _lead x) /\ _tenor x) /\ True) /\ _excellent x) -> (exists x : Entity, (((_lead x /\ _tenor x) /\ _excellent x) /\ True) /\ _indispensable x) -> exists x : Entity, (((two x /\ _lead x) /\ _tenor x) /\ True) /\ _indispensable x 1 goal x : Entity H1 : _indispensable x H2 : True H3 : _excellent x H0 : _lead x H4 : _tenor x x0 : Entity H5 : _excellent x0 H6 : True H7 : _tenor x0 H : two x0 H8 : _lead x0 ============================ _indispensable x0 Toplevel input, characters 312-324: > Theorem t1: (exists x, (and (and (and (and (two x) (_lead x)) (_tenor x)) True) (_excellent x))) -> (exists x, (and (and (and (and (_lead x) (_tenor x)) (_excellent x)) True) (_indispensable x))) -> (exists x, (and (and (and (and (two x) (_lead x)) (_tenor x)) True) (_indispensable x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 326-330: > Theorem t1: (exists x, (and (and (and (and (two x) (_lead x)) (_tenor x)) True) (_excellent x))) -> (exists x, (and (and (and (and (_lead x) (_tenor x)) (_excellent x)) True) (_indispensable x))) -> (exists x, (and (and (and (and (two x) (_lead x)) (_tenor x)) True) (_indispensable x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_014_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _cheap is declared Coq < _come is declared Coq < _lead is declared Coq < _of is declared Coq < _one is declared Coq < _pavarotti is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (_lead x /\ _tenor x) /\ two x) /\ (forall x : Entity, _lead x /\ _tenor x -> True -> ~ (_come x /\ _cheap x)) -> (exists x : Entity, ((_one x /\ (exists z1 : Entity, ((_lead z1 /\ _tenor z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (z2 = _pavarotti /\ True) /\ x = _pavarotti)) -> exists x : Entity, (x = _pavarotti /\ True) /\ (exists z3 : Entity, ((((_lead z3 /\ _tenor z3) /\ _cheap z3) /\ _come z3) /\ True) /\ _pavarotti = z3) Toplevel input, characters 509-513: > Theorem t1: (and (exists x, (and (and (_lead x) (_tenor x)) (two x))) (forall x, ((and (_lead x) (_tenor x)) -> (True -> (not (and (_come x) (_cheap x))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (and (_lead z1) (_tenor z1)) True) (_of x z1)))) True) (exists z2, (and (and (z2 = _pavarotti) True) (x = _pavarotti))))) -> (exists x, (and (and (x = _pavarotti) True) (exists z3, (and (and (and (and (and (_lead z3) (_tenor z3)) (_cheap z3)) (_come z3)) True) (_pavarotti = z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cheap is declared Coq < _come is declared Coq < _lead is declared Coq < _of is declared Coq < _one is declared Coq < _pavarotti is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (_lead x /\ _tenor x) /\ two x) /\ (forall x : Entity, _lead x /\ _tenor x -> True -> ~ (_come x /\ _cheap x)) -> (exists x : Entity, ((_one x /\ (exists z1 : Entity, ((_lead z1 /\ _tenor z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (z2 = _pavarotti /\ True) /\ x = _pavarotti)) -> ~ (exists x : Entity, (x = _pavarotti /\ True) /\ (exists z3 : Entity, ((((_lead z3 /\ _tenor z3) /\ _cheap z3) /\ _come z3) /\ True) /\ _pavarotti = z3)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cheap is declared Coq < _come is declared Coq < _lead is declared Coq < _of is declared Coq < _one is declared Coq < _pavarotti is declared Coq < _tenor is declared Coq < 1 goal ============================ (exists x : Entity, (_lead x /\ _tenor x) /\ two x) /\ (forall x : Entity, _lead x /\ _tenor x -> True -> ~ (_come x /\ _cheap x)) -> (exists x : Entity, ((_one x /\ (exists z1 : Entity, ((_lead z1 /\ _tenor z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (z2 = _pavarotti /\ True) /\ x = _pavarotti)) -> exists x : Entity, (x = _pavarotti /\ True) /\ (exists z3 : Entity, ((((_lead z3 /\ _tenor z3) /\ _cheap z3) /\ _come z3) /\ True) /\ _pavarotti = z3) 4 goals H2 : forall x : Entity, _lead x /\ _tenor x -> True -> _come x /\ _cheap x -> False x : Entity H1 : two x H : _lead x H3 : _tenor x H5 : True H0 : _one _pavarotti x1 : Entity H7 : _of _pavarotti x1 H8 : True H6 : _lead x1 H9 : _tenor x1 H11 : True ============================ _lead _pavarotti goal 2 is: _tenor _pavarotti goal 3 is: _cheap _pavarotti goal 4 is: _come _pavarotti Toplevel input, characters 525-537: > Theorem t1: (and (exists x, (and (and (_lead x) (_tenor x)) (two x))) (forall x, ((and (_lead x) (_tenor x)) -> (True -> (not (and (_come x) (_cheap x))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (and (_lead z1) (_tenor z1)) True) (_of x z1)))) True) (exists z2, (and (and (z2 = _pavarotti) True) (x = _pavarotti))))) -> (exists x, (and (and (x = _pavarotti) True) (exists z3, (and (and (and (and (and (_lead z3) (_tenor z3)) (_cheap z3)) (_come z3)) True) (_pavarotti = z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 539-543: > Theorem t1: (and (exists x, (and (and (_lead x) (_tenor x)) (two x))) (forall x, ((and (_lead x) (_tenor x)) -> (True -> (not (and (_come x) (_cheap x))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (and (_lead z1) (_tenor z1)) True) (_of x z1)))) True) (exists z2, (and (and (z2 = _pavarotti) True) (x = _pavarotti))))) -> (exists x, (and (and (x = _pavarotti) True) (exists z3, (and (and (and (and (and (_lead z3) (_tenor z3)) (_cheap z3)) (_come z3)) True) (_pavarotti = z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_015_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> ~ (exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5) Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5 No more goals. Toplevel input, characters 399-416: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> ~ (exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5) 1 goal x0 : Entity H2 : True H0 : _tenor x0 H3 : _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x0 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x0 z2)) x1 : Entity H4 : _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x1 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x1 z2)) H5 : True H : _three x1 H6 : _tenor x1 ============================ False Toplevel input, characters 409-421: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> ~ (exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5) Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5 No more goals. Toplevel input, characters 399-416: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> ~ (exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5) 1 goal x0 : Entity H2 : True H0 : _tenor x0 H3 : _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x0 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x0 z2)) x1 : Entity H4 : _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x1 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x1 z2)) H5 : True H : _three x1 H6 : _tenor x1 ============================ False Toplevel input, characters 409-421: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5 No more goals. Toplevel input, characters 399-416: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _concert is declared Coq < _in is declared Coq < _part is declared Coq < _take is declared Coq < _tenor is declared Coq < _three is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _tenor x) /\ True) /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x z2))) -> ~ (exists x z5 : Entity, ((_tenor z5 /\ _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take z5 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in z5 z2))) /\ True) /\ x = z5) 1 goal x0 : Entity H2 : True H0 : _tenor x0 H3 : _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x0 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x0 z2)) x1 : Entity H4 : _will ((exists z1 : Entity, (_part z1 /\ True) /\ _take x1 z1) /\ (exists z2 : Entity, (_concert z2 /\ True) /\ _in x1 z2)) H5 : True H : _three x1 H6 : _tenor x1 ============================ False Toplevel input, characters 409-421: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (and (_three x) (_tenor x)) True) (_will (and (exists z1, (and (and (_part z1) True) (_take x z1))) (exists z2, (and (and (_concert z2) True) (_in x z2))))))) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_part z1) True) (_take z5 z1))) (exists z2, (and (and (_concert z2) True) (_in z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_016_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 437-442: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 444-448: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 443-448: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 450-454: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 437-443: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 456-459: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 474-478: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 437-442: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 444-448: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 443-449: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 462-465: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 480-484: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 443-448: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 450-454: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 437-443: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 456-459: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 474-478: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 443-449: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 462-465: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 480-484: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 437-443: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 456-459: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 474-478: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _charity is declared Coq < _contribute is declared Coq < _fee is declared Coq < _tenor is declared Coq < _to is declared Coq < _two is declared Coq < _will is declared Coq < Toplevel input, characters 13-242: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _at (most x; ((_two x /\ _tenor x) /\ _will ((exists z1 : Entity, (_fee z1 /\ True) /\ _contribute x z1) /\ (exists z2 : Entity, (_charity z2 /\ True) /\ _to x z2))) /\ True, True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 443-449: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 462-465: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 480-484: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_two x) (_tenor x)) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute x z1))) (exists z2, (and (and (_charity z2) True) (_to x z2)))))) True)) (fun w => True)) S) S)) -> (not (exists x z5, (and (and (and (_tenor z5) (_will (and (exists z1, (and (and (_fee z1) True) (_contribute z5 z1))) (exists z2, (and (and (_charity z2) True) (_to z5 z2)))))) True) (x = z5)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_017_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) Toplevel input, characters 325-329: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (not (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1) No more goals. Toplevel input, characters 331-348: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) 1 goal x : Entity H0 : _irishman x H2 : True x0 : Entity H3 : _win x x0 H4 : True H1 : _nobel x0 H5 : _prize x0 x1 : Entity H : _irishman x1 H7 : True x2 : Entity H8 : _win x1 x2 H9 : True H6 : _nobel x2 H11 : _prize x2 x3 : Entity H12 : _for x2 x3 H10 : _literature x3 H13 : True ============================ False Toplevel input, characters 341-353: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (not (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 355-359: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (not (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) Toplevel input, characters 325-329: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (not (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1) No more goals. Toplevel input, characters 331-348: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) 1 goal x : Entity H0 : _irishman x H2 : True x0 : Entity H3 : _win x x0 H4 : True H1 : _nobel x0 H5 : _prize x0 x1 : Entity H : _irishman x1 H7 : True x2 : Entity H8 : _win x1 x2 H9 : True H6 : _nobel x2 H11 : _prize x2 x3 : Entity H12 : _for x2 x3 H10 : _literature x3 H13 : True ============================ False Toplevel input, characters 341-353: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (not (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 355-359: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (not (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1) No more goals. Toplevel input, characters 331-348: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) 1 goal x : Entity H0 : _irishman x H2 : True x0 : Entity H3 : _win x x0 H4 : True H1 : _nobel x0 H5 : _prize x0 x1 : Entity H : _irishman x1 H7 : True x2 : Entity H8 : _win x1 x2 H9 : True H6 : _nobel x2 H11 : _prize x2 x3 : Entity H12 : _for x2 x3 H10 : _literature x3 H13 : True ============================ False Toplevel input, characters 341-353: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (not (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 355-359: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))) -> (not (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_018_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x Toplevel input, characters 479-483: > Theorem t1: (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 485-489: > Theorem t1: (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x 3 goals H : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H1 : True H2 : _european x H3 : _can_e2 x ============================ _within x _europe goal 2 is: _freely x goal 3 is: _travel x Toplevel input, characters 495-507: > Theorem t1: (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_019_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 650-654: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 656-660: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H1 : _europeans x H2 : True ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 666-678: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 680-684: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 650-654: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H1 : forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 672-684: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 686-690: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 656-660: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H1 : _europeans x H2 : True ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 666-678: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 680-684: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H1 : forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 672-684: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 686-690: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H1 : _europeans x H2 : True ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 666-678: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 680-684: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H1 : forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 672-684: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 686-690: > Theorem t1: (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_020_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x Toplevel input, characters 479-483: > Theorem t1: (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 485-489: > Theorem t1: (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x 3 goals H : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H1 : True H2 : _european x H3 : _can_e2 x ============================ _within x _europe goal 2 is: _freely x goal 3 is: _travel x Toplevel input, characters 495-507: > Theorem t1: (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_021_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 997-1001: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H3 : True H : _resident x x0 : Entity H5 : _of x x0 H6 : True H4 : _member x0 H7 : _state x0 x1 : Entity H8 : _have x x1 H9 : True H10 : _right x1 H11 : _live x1 H12 : _in x1 _europe H13 : True ============================ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 1007-1019: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1021-1025: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H3 : _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H4 : True H2 : _resident x x0 : Entity H6 : _of x x0 H7 : True H5 : _member x0 H8 : _state x0 x1 : Entity H10 : True H : _resident x1 x2 : Entity H12 : _of x1 x2 H13 : True H11 : _member x2 H14 : _state x2 x3 : Entity H15 : _have x1 x3 H16 : True H17 : _right x3 H18 : _live x3 H19 : _in x3 _europe H20 : True ============================ False Toplevel input, characters 1013-1025: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1027-1031: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 997-1001: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H3 : True H : _resident x x0 : Entity H5 : _of x x0 H6 : True H4 : _member x0 H7 : _state x0 x1 : Entity H8 : _have x x1 H9 : True H10 : _right x1 H11 : _live x1 H12 : _in x1 _europe H13 : True ============================ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 1007-1019: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1021-1025: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H3 : _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H4 : True H2 : _resident x x0 : Entity H6 : _of x x0 H7 : True H5 : _member x0 H8 : _state x0 x1 : Entity H10 : True H : _resident x1 x2 : Entity H12 : _of x1 x2 H13 : True H11 : _member x2 H14 : _state x2 x3 : Entity H15 : _have x1 x3 H16 : True H17 : _right x3 H18 : _live x3 H19 : _in x3 _europe H20 : True ============================ False Toplevel input, characters 1013-1025: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1027-1031: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H3 : True H : _resident x x0 : Entity H5 : _of x x0 H6 : True H4 : _member x0 H7 : _state x0 x1 : Entity H8 : _have x x1 H9 : True H10 : _right x1 H11 : _live x1 H12 : _in x1 _europe H13 : True ============================ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 1007-1019: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1021-1025: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H3 : _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H4 : True H2 : _resident x x0 : Entity H6 : _of x x0 H7 : True H5 : _member x0 H8 : _state x0 x1 : Entity H10 : True H : _resident x1 x2 : Entity H12 : _of x1 x2 H13 : True H11 : _member x2 H14 : _state x2 x3 : Entity H15 : _have x1 x3 H16 : True H17 : _right x3 H18 : _live x3 H19 : _in x3 _europe H20 : True ============================ False Toplevel input, characters 1013-1025: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1027-1031: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_022_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1) Toplevel input, characters 291-295: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> ~ (forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) Toplevel input, characters 297-301: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (not (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1) 1 goal H : forall x : Entity, _delegate x -> True -> (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> False x : Entity H0 : _delegate x H1 : True x0 : Entity H3 : _finish x x0 H2 : _report x0 H4 : True ============================ False Toplevel input, characters 307-319: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 321-325: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1) Toplevel input, characters 291-295: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> ~ (forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) 1 goal H : forall x : Entity, _delegate x -> True -> (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> False H0 : forall x : Entity, _delegate x -> True -> (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1) -> False ============================ False Toplevel input, characters 313-325: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (not (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 327-331: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (not (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> ~ (forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) Toplevel input, characters 297-301: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (not (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1) 1 goal H : forall x : Entity, _delegate x -> True -> (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> False x : Entity H0 : _delegate x H1 : True x0 : Entity H3 : _finish x x0 H2 : _report x0 H4 : True ============================ False Toplevel input, characters 307-319: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 321-325: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> ~ (forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) 1 goal H : forall x : Entity, _delegate x -> True -> (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> False H0 : forall x : Entity, _delegate x -> True -> (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1) -> False ============================ False Toplevel input, characters 313-325: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (not (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 327-331: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (not (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1) 1 goal H : forall x : Entity, _delegate x -> True -> (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> False x : Entity H0 : _delegate x H1 : True x0 : Entity H3 : _finish x x0 H2 : _report x0 H4 : True ============================ False Toplevel input, characters 307-319: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 321-325: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> ~ (forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) 1 goal H : forall x : Entity, _delegate x -> True -> (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> False H0 : forall x : Entity, _delegate x -> True -> (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1) -> False ============================ False Toplevel input, characters 313-325: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (not (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 327-331: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (not (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_023_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1) No more goals. Toplevel input, characters 295-312: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) 1 goal x : Entity H0 : _delegate x H2 : True x0 : Entity H3 : _finish x x0 H1 : _survey x0 H4 : True x1 : Entity H : _delegate x1 H6 : True x2 : Entity H8 : _on x1 x2 H5 : _time x2 H9 : True x3 : Entity H10 : _finish x1 x3 H7 : _survey x3 H11 : True ============================ False Toplevel input, characters 305-317: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1) No more goals. Toplevel input, characters 295-312: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) 1 goal x : Entity H0 : _delegate x H2 : True x0 : Entity H3 : _finish x x0 H1 : _survey x0 H4 : True x1 : Entity H : _delegate x1 H6 : True x2 : Entity H8 : _on x1 x2 H5 : _time x2 H9 : True x3 : Entity H10 : _finish x1 x3 H7 : _survey x3 H11 : True ============================ False Toplevel input, characters 305-317: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1) No more goals. Toplevel input, characters 295-312: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) 1 goal x : Entity H0 : _delegate x H2 : True x0 : Entity H3 : _finish x x0 H1 : _survey x0 H4 : True x1 : Entity H : _delegate x1 H6 : True x2 : Entity H8 : _on x1 x2 H5 : _time x2 H9 : True x3 : Entity H10 : _finish x1 x3 H7 : _survey x3 H11 : True ============================ False Toplevel input, characters 305-317: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_024_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_survey z2 /\ True) /\ _from x z2) /\ (exists z1 : Entity, (_result z1 /\ True) /\ _obtain x z1)) Toplevel input, characters 406-410: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (_survey z2) True) (_from x z2)) (exists z1, (and (and (_result z1) True) (_obtain x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> ~ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_survey z2 /\ True) /\ _from x z2) /\ (exists z1 : Entity, (_result z1 /\ True) /\ _obtain x z1))) Toplevel input, characters 412-416: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (_survey z2) True) (_from x z2)) (exists z1, (and (and (_result z1) True) (_obtain x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_survey z2 /\ True) /\ _from x z2) /\ (exists z1 : Entity, (_result z1 /\ True) /\ _obtain x z1)) 1 goal x : Entity H1 : True H : _many x H2 : _delegate x x0 : Entity H3 : _obtain x x0 H4 : True H0 : _interesting x0 H6 : _result x0 x1 : Entity H7 : _from x0 x1 H5 : _survey x1 H8 : True ============================ _from x x1 Toplevel input, characters 422-434: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (_survey z2) True) (_from x z2)) (exists z1, (and (and (_result z1) True) (_obtain x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (_survey z2) True) (_from x z2)) (exists z1, (and (and (_result z1) True) (_obtain x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_025_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) Toplevel input, characters 406-410: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2) No more goals. Toplevel input, characters 412-429: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) 1 goal x : Entity H2 : True H0 : _several x H3 : _delegate x x0 : Entity H4 : _get x x0 H5 : True H1 : _result x0 H6 : _publish x0 x1 : Entity H8 : True H : _several x1 H9 : _delegate x1 x2 : Entity H10 : _get x1 x2 H11 : True H7 : _result x2 x3 : Entity H13 : _publish x2 H14 : _in x2 x3 H15 : True H16 : _newspaper x3 H12 : _major x3 H17 : _national x3 ============================ False Toplevel input, characters 422-434: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) Toplevel input, characters 406-410: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2) No more goals. Toplevel input, characters 412-429: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) 1 goal x : Entity H2 : True H0 : _several x H3 : _delegate x x0 : Entity H4 : _get x x0 H5 : True H1 : _result x0 H6 : _publish x0 x1 : Entity H8 : True H : _several x1 H9 : _delegate x1 x2 : Entity H10 : _get x1 x2 H11 : True H7 : _result x2 x3 : Entity H13 : _publish x2 H14 : _in x2 x3 H15 : True H16 : _newspaper x3 H12 : _major x3 H17 : _national x3 ============================ False Toplevel input, characters 422-434: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2) No more goals. Toplevel input, characters 412-429: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) 1 goal x : Entity H2 : True H0 : _several x H3 : _delegate x x0 : Entity H4 : _get x x0 H5 : True H1 : _result x0 H6 : _publish x0 x1 : Entity H8 : True H : _several x1 H9 : _delegate x1 x2 : Entity H10 : _get x1 x2 H11 : True H7 : _result x2 x3 : Entity H13 : _publish x2 H14 : _in x2 x3 H15 : True H16 : _newspaper x3 H12 : _major x3 H17 : _national x3 ============================ False Toplevel input, characters 422-434: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_026_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 659-663: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 669-681: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 683-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 675-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 689-693: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 659-663: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 669-681: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 683-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 675-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 689-693: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 669-681: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 683-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : most x; _european x /\ True, _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 675-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 689-693: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_027_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _scandinavia is declared Coq < _sweden is declared Coq < 1 goal ============================ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden) /\ True -> exists z3 : Entity, (z3 = _scandinavia /\ True) /\ _from x _scandinavia) -> exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z2 : Entity, (z2 = _scandinavia /\ True) /\ _from x _scandinavia) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _scandinavia is declared Coq < _sweden is declared Coq < 1 goal ============================ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden) /\ True -> exists z3 : Entity, (z3 = _scandinavia /\ True) /\ _from x _scandinavia) -> ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z2 : Entity, (z2 = _scandinavia /\ True) /\ _from x _scandinavia)) Toplevel input, characters 618-622: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))) True) -> (exists z3, (and (and (z3 = _scandinavia) True) (_from x _scandinavia)))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z2, (and (and (z2 = _scandinavia) True) (_from x _scandinavia)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _scandinavia is declared Coq < _sweden is declared Coq < 1 goal ============================ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden) /\ True -> exists z3 : Entity, (z3 = _scandinavia /\ True) /\ _from x _scandinavia) -> exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z2 : Entity, (z2 = _scandinavia /\ True) /\ _from x _scandinavia) 1 goal H0 : forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden) /\ True -> exists z3 : Entity, (z3 = _scandinavia /\ True) /\ _from x _scandinavia x : Entity H3 : True H4 : _member x H : _few x H5 : _committee x H6 : _from x _sweden H7 : True ============================ _from x _scandinavia Toplevel input, characters 628-640: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))) True) -> (exists z3, (and (and (z3 = _scandinavia) True) (_from x _scandinavia)))))) -> (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z2, (and (and (z2 = _scandinavia) True) (_from x _scandinavia))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 642-646: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))) True) -> (exists z3, (and (and (z3 = _scandinavia) True) (_from x _scandinavia)))))) -> (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z2, (and (and (z2 = _scandinavia) True) (_from x _scandinavia))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_028_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, ((_southern z2 /\ _europe z2) /\ True) /\ _from z3 z2)) /\ True) /\ x = z3) Toplevel input, characters 672-676: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (and (_southern z2) (_europe z2)) True) (_from z3 z2)))) True) (x = z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> ~ (exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, ((_southern z2 /\ _europe z2) /\ True) /\ _from z3 z2)) /\ True) /\ x = z3)) Toplevel input, characters 678-682: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (not (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (and (_southern z2) (_europe z2)) True) (_from z3 z2)))) True) (x = z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, ((_southern z2 /\ _europe z2) /\ True) /\ _from z3 z2)) /\ True) /\ x = z3) 1 focused goal (shelved: 1) H0 : forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3 H : forall x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) -> False H4 : True H7 : _committee ?x H2 : _few ?x H6 : _member ?x x0 : Entity H8 : _from ?x x0 H9 : True H5 : _southern x0 H10 : _europe x0 ============================ False Toplevel input, characters 688-700: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (and (_southern z2) (_europe z2)) True) (_from z3 z2)))) True) (x = z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 702-706: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (and (_southern z2) (_europe z2)) True) (_from z3 z2)))) True) (x = z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, ((_southern z2 /\ _europe z2) /\ True) /\ _from z3 z2)) /\ True) /\ x = z3) Toplevel input, characters 672-676: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (and (_southern z2) (_europe z2)) True) (_from z3 z2)))) True) (x = z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> ~ (exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, ((_southern z2 /\ _europe z2) /\ True) /\ _from z3 z2)) /\ True) /\ x = z3)) 4 focused goals (shelved: 1) H0 : forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3 x : Entity H2 : forall x0 : Entity, ((((_few x0 /\ _committee x0) /\ _member x0) /\ (exists z2 : Entity, ((_southern z2 /\ _europe z2) /\ True) /\ _from x0 z2)) /\ True) /\ x = x0 -> False H : forall x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) -> False ============================ _few ?x goal 2 is: _committee ?x goal 3 is: _member ?x goal 4 is: _from ?x _portugal Toplevel input, characters 694-706: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (not (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (and (_southern z2) (_europe z2)) True) (_from z3 z2)))) True) (x = z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 708-712: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (not (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (and (_southern z2) (_europe z2)) True) (_from z3 z2)))) True) (x = z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_029_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _businessman is declared Coq < _commissioner is declared Coq < _lead is declared Coq < _use is declared Coq < 1 goal ============================ (exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, ((_lead z1 /\ _businessman z1) /\ True) /\ x = z1)) -> exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, (_businessman z1 /\ True) /\ x = z1) Toplevel input, characters 294-298: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (and (_lead z1) (_businessman z1)) True) (x = z1)))))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (_businessman z1) True) (x = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _businessman is declared Coq < _commissioner is declared Coq < _lead is declared Coq < _use is declared Coq < 1 goal ============================ (exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, ((_lead z1 /\ _businessman z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, (_businessman z1 /\ True) /\ x = z1)) Toplevel input, characters 300-304: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (and (_lead z1) (_businessman z1)) True) (x = z1)))))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (_businessman z1) True) (x = z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _businessman is declared Coq < _commissioner is declared Coq < _lead is declared Coq < _use is declared Coq < 1 goal ============================ (exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, ((_lead z1 /\ _businessman z1) /\ True) /\ x = z1)) -> exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, (_businessman z1 /\ True) /\ x = z1) 1 goal x : Entity H0 : _use x (exists z1 : Entity, ((_lead z1 /\ _businessman z1) /\ True) /\ x = z1) H1 : True H : two x H2 : _commissioner x ============================ _use x (exists z1 : Entity, (_businessman z1 /\ True) /\ x = z1) Toplevel input, characters 310-322: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (and (_lead z1) (_businessman z1)) True) (x = z1)))))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (_businessman z1) True) (x = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 324-328: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (and (_lead z1) (_businessman z1)) True) (x = z1)))))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (_businessman z1) True) (x = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_030_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) Toplevel input, characters 509-513: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> ~ ((exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)))) Toplevel input, characters 515-519: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) 1 goal H1 : forall x : Entity, _commissioner x -> True -> (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) -> False x : Entity H : _commissioner x H2 : True x0 : Entity H5 : _at x x0 H3 : _home x0 H6 : True x1 : Entity H7 : _spend x x1 H4 : _time x1 H8 : True x2 : Entity H0 : _commissioner x2 H9 : two x2 ============================ False Toplevel input, characters 525-537: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 539-543: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) Toplevel input, characters 509-513: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> ~ ((exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)))) 1 goal H2 : forall x : Entity, _commissioner x -> True -> (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) -> False H3 : forall x : Entity, _commissioner x -> True -> (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) -> False x : Entity H : _commissioner x H0 : two x x0 : Entity H1 : _commissioner x0 H4 : two x0 ============================ False Toplevel input, characters 531-543: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 545-549: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> ~ ((exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)))) Toplevel input, characters 515-519: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) 1 goal H1 : forall x : Entity, _commissioner x -> True -> (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) -> False x : Entity H : _commissioner x H2 : True x0 : Entity H5 : _at x x0 H3 : _home x0 H6 : True x1 : Entity H7 : _spend x x1 H4 : _time x1 H8 : True x2 : Entity H0 : _commissioner x2 H9 : two x2 ============================ False Toplevel input, characters 525-537: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 539-543: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> ~ ((exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)))) 1 goal H2 : forall x : Entity, _commissioner x -> True -> (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) -> False H3 : forall x : Entity, _commissioner x -> True -> (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) -> False x : Entity H : _commissioner x H0 : two x x0 : Entity H1 : _commissioner x0 H4 : two x0 ============================ False Toplevel input, characters 531-543: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 545-549: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) 1 goal H1 : forall x : Entity, _commissioner x -> True -> (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) -> False x : Entity H : _commissioner x H2 : True x0 : Entity H5 : _at x x0 H3 : _home x0 H6 : True x1 : Entity H7 : _spend x x1 H4 : _time x1 H8 : True x2 : Entity H0 : _commissioner x2 H9 : two x2 ============================ False Toplevel input, characters 525-537: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 539-543: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> ~ ((exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)))) 1 goal H2 : forall x : Entity, _commissioner x -> True -> (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) -> False H3 : forall x : Entity, _commissioner x -> True -> (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) -> False x : Entity H : _commissioner x H0 : two x x0 : Entity H1 : _commissioner x0 H4 : two x0 ============================ False Toplevel input, characters 531-543: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 545-549: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_031_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) /\ (exists z3 : Entity, (_home z3 /\ True) /\ _at x z3)) -> exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) Toplevel input, characters 435-439: > Theorem t1: (exists x, (and (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))) (exists z3, (and (and (_home z3) True) (_at x z3))))) -> (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) /\ (exists z3 : Entity, (_home z3 /\ True) /\ _at x z3)) -> ~ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) Toplevel input, characters 441-445: > Theorem t1: (exists x, (and (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))) (exists z3, (and (and (_home z3) True) (_at x z3))))) -> (not (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) /\ (exists z3 : Entity, (_home z3 /\ True) /\ _at x z3)) -> exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) 1 goal x : Entity H2 : True H : _three x H3 : _commissioner x x0 : Entity H4 : _spend x x0 H5 : True H1 : _lot x0 x1 : Entity H7 : _of x0 x1 H6 : _time x1 H8 : True x2 : Entity H9 : _at x x2 H0 : _home x2 H10 : True ============================ _spend x x1 Toplevel input, characters 451-463: > Theorem t1: (exists x, (and (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))) (exists z3, (and (and (_home z3) True) (_at x z3))))) -> (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 465-469: > Theorem t1: (exists x, (and (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))) (exists z3, (and (and (_home z3) True) (_at x z3))))) -> (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_032_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-527: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 529-533: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-533: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 535-539: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-528: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 541-544: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 559-563: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-527: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 529-533: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-534: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 547-550: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 565-569: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-533: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 535-539: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-528: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 541-544: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 559-563: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-534: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 547-550: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 565-569: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-528: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 541-544: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 559-563: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-285: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-534: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 547-550: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 565-569: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_033_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2) Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) Toplevel input, characters 325-329: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (not (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2) 2 focused goals (shelved: 1) x : Entity H : _irishman x H1 : True x0 : Entity H2 : _win x x0 H3 : True H0 : _nobel x0 H4 : _prize x0 ============================ _literature ?z1 goal 2 is: _for x0 ?z1 Toplevel input, characters 335-347: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 349-353: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2) Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) 1 goal x : Entity H0 : _irishman x H2 : True x0 : Entity H3 : _win x x0 H4 : True H1 : _nobel x0 H6 : _prize x0 x1 : Entity H7 : _for x0 x1 H5 : _literature x1 H8 : True x2 : Entity H : _irishman x2 H10 : True x3 : Entity H11 : _win x2 x3 H12 : True H9 : _nobel x3 H13 : _prize x3 ============================ False Toplevel input, characters 341-353: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (not (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 355-359: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (not (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) Toplevel input, characters 325-329: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (not (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2) 2 focused goals (shelved: 1) x : Entity H : _irishman x H1 : True x0 : Entity H2 : _win x x0 H3 : True H0 : _nobel x0 H4 : _prize x0 ============================ _literature ?z1 goal 2 is: _for x0 ?z1 Toplevel input, characters 335-347: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 349-353: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) 1 goal x : Entity H0 : _irishman x H2 : True x0 : Entity H3 : _win x x0 H4 : True H1 : _nobel x0 H6 : _prize x0 x1 : Entity H7 : _for x0 x1 H5 : _literature x1 H8 : True x2 : Entity H : _irishman x2 H10 : True x3 : Entity H11 : _win x2 x3 H12 : True H9 : _nobel x3 H13 : _prize x3 ============================ False Toplevel input, characters 341-353: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (not (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 355-359: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (not (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2) 2 focused goals (shelved: 1) x : Entity H : _irishman x H1 : True x0 : Entity H2 : _win x x0 H3 : True H0 : _nobel x0 H4 : _prize x0 ============================ _literature ?z1 goal 2 is: _for x0 ?z1 Toplevel input, characters 335-347: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 349-353: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _irishman is declared Coq < _literature is declared Coq < _nobel is declared Coq < _prize is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (_irishman x /\ True) /\ (exists z1 : Entity, ((_nobel z1 /\ _prize z1) /\ True) /\ _win x z1)) -> ~ (exists x : Entity, (_irishman x /\ True) /\ (exists z2 : Entity, (((_nobel z2 /\ _prize z2) /\ (exists z1 : Entity, (_literature z1 /\ True) /\ _for z2 z1)) /\ True) /\ _win x z2)) 1 goal x : Entity H0 : _irishman x H2 : True x0 : Entity H3 : _win x x0 H4 : True H1 : _nobel x0 H6 : _prize x0 x1 : Entity H7 : _for x0 x1 H5 : _literature x1 H8 : True x2 : Entity H : _irishman x2 H10 : True x3 : Entity H11 : _win x2 x3 H12 : True H9 : _nobel x3 H13 : _prize x3 ============================ False Toplevel input, characters 341-353: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (not (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 355-359: > Theorem t1: (exists x, (and (and (_irishman x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (not (exists x, (and (and (_irishman x) True) (exists z2, (and (and (and (and (_nobel z2) (_prize z2)) (exists z1, (and (and (_literature z1) True) (_for z2 z1)))) True) (_win x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_034_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 479-483: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 485-489: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x x : Entity H0 : _person x H3 : True x0 : Entity H2 : _have x x0 H4 : True H5 : _right x0 H6 : _live x0 H7 : _in x0 _europe H8 : True ============================ _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 495-507: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 479-483: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 501-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 485-489: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x x : Entity H0 : _person x H3 : True x0 : Entity H2 : _have x x0 H4 : True H5 : _right x0 H6 : _live x0 H7 : _in x0 _europe H8 : True ============================ _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 495-507: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 501-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x x : Entity H0 : _person x H3 : True x0 : Entity H2 : _have x x0 H4 : True H5 : _right x0 H6 : _live x0 H7 : _in x0 _europe H8 : True ============================ _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 495-507: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 501-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_035_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 Toplevel input, characters 650-654: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) Toplevel input, characters 656-660: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 4 focused goals (shelved: 1) H : forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H1 : _european x H2 : True ============================ _in ?z4 _europe goal 2 is: _live ?z4 goal 3 is: _right ?z4 goal 4 is: _have x ?z4 Toplevel input, characters 666-678: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 680-684: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 Toplevel input, characters 650-654: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) 1 goal H : forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H1 : forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 ============================ False Toplevel input, characters 672-684: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 686-690: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) Toplevel input, characters 656-660: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 4 focused goals (shelved: 1) H : forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H1 : _european x H2 : True ============================ _in ?z4 _europe goal 2 is: _live ?z4 goal 3 is: _right ?z4 goal 4 is: _have x ?z4 Toplevel input, characters 666-678: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 680-684: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) 1 goal H : forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H1 : forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 ============================ False Toplevel input, characters 672-684: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 686-690: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 4 focused goals (shelved: 1) H : forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H1 : _european x H2 : True ============================ _in ?z4 _europe goal 2 is: _live ?z4 goal 3 is: _right ?z4 goal 4 is: _have x ?z4 Toplevel input, characters 666-678: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 680-684: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _europeans is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) 1 goal H : forall x : Entity, _europeans x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H1 : forall x : Entity, _european x -> True -> exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4 ============================ False Toplevel input, characters 672-684: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 686-690: > Theorem t1: (forall x, ((_europeans x) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (forall x, ((_european x) -> (True -> (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_036_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 479-483: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 485-489: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x x : Entity H0 : _person x H3 : True x0 : Entity H2 : _have x x0 H4 : True H5 : _right x0 H6 : _live x0 H7 : _in x0 _europe H8 : True ============================ _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 495-507: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 479-483: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 501-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 485-489: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x x : Entity H0 : _person x H3 : True x0 : Entity H2 : _have x x0 H4 : True H5 : _right x0 H6 : _live x0 H7 : _in x0 _europe H8 : True ============================ _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 495-507: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 501-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x x : Entity H0 : _person x H3 : True x0 : Entity H2 : _have x x0 H4 : True H5 : _right x0 H6 : _live x0 H7 : _in x0 _europe H8 : True ============================ _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 495-507: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _can_e2 is declared Coq < _can_t2 is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _person is declared Coq < _right is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ (forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _european x /\ _can_e2 x -> True -> exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x H0 : forall x : Entity, _person x -> (exists z4 : Entity, (((exists z1 : Entity, ((z1 = _europe /\ True) /\ _in z4 _europe) /\ _live z4) /\ _right z4) /\ True) /\ _have x z4) /\ True -> _can_t2 (exists z7 : Entity, (((z7 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 501-513: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (forall x, ((and (_european x) (_can_e2 x)) -> (True -> (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (forall x, ((_person x) -> ((and (exists z4, (and (and (and (exists z1, (and (and (and (z1 = _europe) True) (_in z4 _europe)) (_live z4))) (_right z4)) True) (_have x z4))) True) -> (_can_t2 (exists z7, (and (and (and (and (z7 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_037_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8) Toplevel input, characters 1033-1037: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8)) Toplevel input, characters 1039-1043: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8) 5 focused goals (shelved: 1) H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H2 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H3 : True H : _resident x x0 : Entity H5 : _of x x0 H6 : True H4 : _member x0 H7 : _state x0 ============================ _in ?z8 _europe goal 2 is: _anywhere ?z8 goal 3 is: _live ?z8 goal 4 is: _right ?z8 goal 5 is: _have x ?z8 Toplevel input, characters 1049-1061: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1063-1067: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8) Toplevel input, characters 1033-1037: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8)) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H4 : True H2 : _resident x x0 : Entity H6 : _of x x0 H7 : True H5 : _member x0 H8 : _state x0 x1 : Entity H9 : _have x x1 H10 : True H11 : _right x1 H12 : _live x1 H13 : _anywhere x1 H14 : _in x1 _europe H15 : True x3 : Entity H16 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x3 _europe) /\ _freely x3) /\ _travel x3) H17 : True H : _resident x3 x4 : Entity H19 : _of x3 x4 H20 : True H18 : _member x4 H21 : _state x4 ============================ False Toplevel input, characters 1055-1067: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1069-1073: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8)) Toplevel input, characters 1039-1043: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8) 5 focused goals (shelved: 1) H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H2 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H3 : True H : _resident x x0 : Entity H5 : _of x x0 H6 : True H4 : _member x0 H7 : _state x0 ============================ _in ?z8 _europe goal 2 is: _anywhere ?z8 goal 3 is: _live ?z8 goal 4 is: _right ?z8 goal 5 is: _have x ?z8 Toplevel input, characters 1049-1061: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1063-1067: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8)) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H4 : True H2 : _resident x x0 : Entity H6 : _of x x0 H7 : True H5 : _member x0 H8 : _state x0 x1 : Entity H9 : _have x x1 H10 : True H11 : _right x1 H12 : _live x1 H13 : _anywhere x1 H14 : _in x1 _europe H15 : True x3 : Entity H16 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x3 _europe) /\ _freely x3) /\ _travel x3) H17 : True H : _resident x3 x4 : Entity H19 : _of x3 x4 H20 : True H18 : _member x4 H21 : _state x4 ============================ False Toplevel input, characters 1055-1067: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1069-1073: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8) 5 focused goals (shelved: 1) H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H2 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H3 : True H : _resident x x0 : Entity H5 : _of x x0 H6 : True H4 : _member x0 H7 : _state x0 ============================ _in ?z8 _europe goal 2 is: _anywhere ?z8 goal 3 is: _live ?z8 goal 4 is: _right ?z8 goal 5 is: _have x ?z8 Toplevel input, characters 1049-1061: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1063-1067: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anywhere is declared Coq < _can is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _individual is declared Coq < _live is declared Coq < _member is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _state is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2) -> (forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ (exists x : Entity, ((_resident x /\ (exists z3 : Entity, ((_member z3 /\ _state z3) /\ True) /\ _of x z3)) /\ True) /\ (exists z8 : Entity, (((exists z5 : Entity, (((z5 = _europe /\ True) /\ _in z8 _europe) /\ _anywhere z8) /\ _live z8) /\ _right z8) /\ True) /\ _have x z8)) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, ((_member z1 /\ _state z1) /\ True) /\ _of x z1) /\ True -> exists z2 : Entity, (_individual z2 /\ True) /\ x = z2 H1 : forall x : Entity, _individual x -> (exists z5 : Entity, (((exists z2 : Entity, (((z2 = _europe /\ True) /\ _in z5 _europe) /\ _anywhere z5) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) /\ True -> _can (exists z8 : Entity, (((z8 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) x : Entity H4 : True H2 : _resident x x0 : Entity H6 : _of x x0 H7 : True H5 : _member x0 H8 : _state x0 x1 : Entity H9 : _have x x1 H10 : True H11 : _right x1 H12 : _live x1 H13 : _anywhere x1 H14 : _in x1 _europe H15 : True x3 : Entity H16 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x3 _europe) /\ _freely x3) /\ _travel x3) H17 : True H : _resident x3 x4 : Entity H19 : _of x3 x4 H20 : True H18 : _member x4 H21 : _state x4 ============================ False Toplevel input, characters 1055-1067: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1069-1073: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (_member z1) (_state z1)) True) (_of x z1))) True) -> (exists z2, (and (and (_individual z2) True) (x = z2)))))) -> (forall x, ((_individual x) -> ((and (exists z5, (and (and (and (exists z2, (and (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_anywhere z5)) (_live z5))) (_right z5)) True) (_have x z5))) True) -> (_can (exists z8, (and (and (and (and (z8 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (exists x, (and (and (and (_resident x) (exists z3, (and (and (and (_member z3) (_state z3)) True) (_of x z3)))) True) (exists z8, (and (and (and (exists z5, (and (and (and (and (z5 = _europe) True) (_in z8 _europe)) (_anywhere z8)) (_live z8))) (_right z8)) True) (_have x z8)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_038_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) Toplevel input, characters 287-291: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) 5 focused goals (shelved: 3) H : forall x : Entity, _delegate x -> True -> (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1) -> False ============================ _delegate ?x goal 2 is: _time ?z2 goal 3 is: _on ?x ?z2 goal 4 is: _report ?z1 goal 5 is: _finish ?x ?z1 Toplevel input, characters 303-315: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 317-321: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z1, (and (and (_report z1) True) (_finish x z1))))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_039_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) Toplevel input, characters 283-287: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) 2 focused goals (shelved: 1) x : Entity H : _delegate x H1 : True x0 : Entity H2 : _finish x x0 H0 : _survey x0 H3 : True ============================ _time ?z2 goal 2 is: _on x ?z2 Toplevel input, characters 299-311: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 313-317: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) Toplevel input, characters 283-287: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) 1 goal x : Entity H0 : _delegate x H2 : True x0 : Entity H4 : _on x x0 H1 : _time x0 H5 : True x1 : Entity H6 : _finish x x1 H3 : _survey x1 H7 : True x2 : Entity H : _delegate x2 H9 : True x3 : Entity H10 : _finish x2 x3 H8 : _survey x3 H11 : True ============================ False Toplevel input, characters 305-317: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) 2 focused goals (shelved: 1) x : Entity H : _delegate x H1 : True x0 : Entity H2 : _finish x x0 H0 : _survey x0 H3 : True ============================ _time ?z2 goal 2 is: _on x ?z2 Toplevel input, characters 299-311: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 313-317: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) 1 goal x : Entity H0 : _delegate x H2 : True x0 : Entity H4 : _on x x0 H1 : _time x0 H5 : True x1 : Entity H6 : _finish x x1 H3 : _survey x1 H7 : True x2 : Entity H : _delegate x2 H9 : True x3 : Entity H10 : _finish x2 x3 H8 : _survey x3 H11 : True ============================ False Toplevel input, characters 305-317: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) 2 focused goals (shelved: 1) x : Entity H : _delegate x H1 : True x0 : Entity H2 : _finish x x0 H0 : _survey x0 H3 : True ============================ _time ?z2 goal 2 is: _on x ?z2 Toplevel input, characters 299-311: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 313-317: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) 1 goal x : Entity H0 : _delegate x H2 : True x0 : Entity H4 : _on x x0 H1 : _time x0 H5 : True x1 : Entity H6 : _finish x x1 H3 : _survey x1 H7 : True x2 : Entity H : _delegate x2 H9 : True x3 : Entity H10 : _finish x2 x3 H8 : _survey x3 H11 : True ============================ False Toplevel input, characters 305-317: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z1, (and (and (_survey z1) True) (_finish x z1))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_040_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_survey z2 /\ True) /\ _from x z2) /\ (exists z1 : Entity, (_result z1 /\ True) /\ _obtain x z1))) -> exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2) Toplevel input, characters 406-410: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (_survey z2) True) (_from x z2)) (exists z1, (and (and (_result z1) True) (_obtain x z1))))))) -> (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_survey z2 /\ True) /\ _from x z2) /\ (exists z1 : Entity, (_result z1 /\ True) /\ _obtain x z1))) -> ~ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) Toplevel input, characters 412-416: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (_survey z2) True) (_from x z2)) (exists z1, (and (and (_result z1) True) (_obtain x z1))))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_survey z2 /\ True) /\ _from x z2) /\ (exists z1 : Entity, (_result z1 /\ True) /\ _obtain x z1))) -> exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2) 2 goals x : Entity H1 : True H : _many x H2 : _delegate x x0 : Entity H4 : _from x x0 H0 : _survey x0 H5 : True x1 : Entity H6 : _obtain x x1 H3 : _result x1 H7 : True ============================ _interesting x1 goal 2 is: _from x1 x0 Toplevel input, characters 422-434: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (_survey z2) True) (_from x z2)) (exists z1, (and (and (_result z1) True) (_obtain x z1))))))) -> (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (_survey z2) True) (_from x z2)) (exists z1, (and (and (_result z1) True) (_obtain x z1))))))) -> (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_041_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) Toplevel input, characters 400-404: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) Toplevel input, characters 406-410: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) 4 focused goals (shelved: 1) x : Entity H1 : True H : _several x H2 : _delegate x x0 : Entity H3 : _get x x0 H4 : True H0 : _result x0 H5 : _publish x0 ============================ _major ?z1 goal 2 is: _national ?z1 goal 3 is: _newspaper ?z1 goal 4 is: _in x0 ?z1 Toplevel input, characters 416-428: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 430-434: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) Toplevel input, characters 400-404: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) 1 goal x : Entity H2 : True H0 : _several x H3 : _delegate x x0 : Entity H4 : _get x x0 H5 : True H1 : _result x0 x1 : Entity H7 : _publish x0 H8 : _in x0 x1 H9 : True H10 : _newspaper x1 H6 : _major x1 H11 : _national x1 x2 : Entity H13 : True H : _several x2 H14 : _delegate x2 x3 : Entity H15 : _get x2 x3 H16 : True H12 : _result x3 H17 : _publish x3 ============================ False Toplevel input, characters 422-434: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) Toplevel input, characters 406-410: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) 4 focused goals (shelved: 1) x : Entity H1 : True H : _several x H2 : _delegate x x0 : Entity H3 : _get x x0 H4 : True H0 : _result x0 H5 : _publish x0 ============================ _major ?z1 goal 2 is: _national ?z1 goal 3 is: _newspaper ?z1 goal 4 is: _in x0 ?z1 Toplevel input, characters 416-428: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 430-434: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) 1 goal x : Entity H2 : True H0 : _several x H3 : _delegate x x0 : Entity H4 : _get x x0 H5 : True H1 : _result x0 x1 : Entity H7 : _publish x0 H8 : _in x0 x1 H9 : True H10 : _newspaper x1 H6 : _major x1 H11 : _national x1 x2 : Entity H13 : True H : _several x2 H14 : _delegate x2 x3 : Entity H15 : _get x2 x3 H16 : True H12 : _result x3 H17 : _publish x3 ============================ False Toplevel input, characters 422-434: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) 4 focused goals (shelved: 1) x : Entity H1 : True H : _several x H2 : _delegate x x0 : Entity H3 : _get x x0 H4 : True H0 : _result x0 H5 : _publish x0 ============================ _major ?z1 goal 2 is: _national ?z1 goal 3 is: _newspaper ?z1 goal 4 is: _in x0 ?z1 Toplevel input, characters 416-428: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 430-434: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_result z2 /\ _publish z2) /\ True) /\ _get x z2)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) 1 goal x : Entity H2 : True H0 : _several x H3 : _delegate x x0 : Entity H4 : _get x x0 H5 : True H1 : _result x0 x1 : Entity H7 : _publish x0 H8 : _in x0 x1 H9 : True H10 : _newspaper x1 H6 : _major x1 H11 : _national x1 x2 : Entity H13 : True H : _several x2 H14 : _delegate x2 x3 : Entity H15 : _get x2 x3 H16 : True H12 : _result x3 H17 : _publish x3 ============================ False Toplevel input, characters 422-434: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z2, (and (and (and (_result z2) (_publish z2)) True) (_get x z2))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_042_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) Toplevel input, characters 653-657: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) Toplevel input, characters 659-663: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) Toplevel input, characters 669-681: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 683-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) Toplevel input, characters 653-657: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) ============================ False Toplevel input, characters 675-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 689-693: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) Toplevel input, characters 659-663: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) Toplevel input, characters 669-681: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 683-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) ============================ False Toplevel input, characters 675-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 689-693: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) Toplevel input, characters 669-681: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 683-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _people is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> (forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> ~ most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _european x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x) /\ True -> _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : most x; _european x /\ True, (exists z5 : Entity, ((z5 = _europe /\ True) /\ _in x _europe) /\ _resident x) ============================ False Toplevel input, characters 675-687: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 689-693: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_european x) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x))) True) -> (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (exists z5, (and (and (and (z5 = _europe) True) (_in x _europe)) (_resident x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_043_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _scandinavia is declared Coq < _sweden is declared Coq < 1 goal ============================ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden) /\ True -> exists z3 : Entity, (z3 = _scandinavia /\ True) /\ _from x _scandinavia) -> exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z2 : Entity, (z2 = _sweden /\ True) /\ _from x _sweden) Toplevel input, characters 612-616: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))) True) -> (exists z3, (and (and (z3 = _scandinavia) True) (_from x _scandinavia)))))) -> (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z2, (and (and (z2 = _sweden) True) (_from x _sweden))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _scandinavia is declared Coq < _sweden is declared Coq < 1 goal ============================ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden) /\ True -> exists z3 : Entity, (z3 = _scandinavia /\ True) /\ _from x _scandinavia) -> ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z2 : Entity, (z2 = _sweden /\ True) /\ _from x _sweden)) Toplevel input, characters 618-622: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))) True) -> (exists z3, (and (and (z3 = _scandinavia) True) (_from x _scandinavia)))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z2, (and (and (z2 = _sweden) True) (_from x _sweden)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _scandinavia is declared Coq < _sweden is declared Coq < 1 goal ============================ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden) /\ True -> exists z3 : Entity, (z3 = _scandinavia /\ True) /\ _from x _scandinavia) -> exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z2 : Entity, (z2 = _sweden /\ True) /\ _from x _sweden) 1 goal H0 : forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _sweden /\ True) /\ _from x _sweden) /\ True -> exists z3 : Entity, (z3 = _scandinavia /\ True) /\ _from x _scandinavia x : Entity H3 : True H4 : _member x H : _few x H5 : _committee x H6 : _from x _scandinavia H7 : True ============================ _from x _sweden Toplevel input, characters 628-640: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))) True) -> (exists z3, (and (and (z3 = _scandinavia) True) (_from x _scandinavia)))))) -> (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z2, (and (and (z2 = _sweden) True) (_from x _sweden))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 642-646: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _sweden) True) (_from x _sweden))) True) -> (exists z3, (and (and (z3 = _scandinavia) True) (_from x _scandinavia)))))) -> (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z2, (and (and (z2 = _sweden) True) (_from x _sweden))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_044_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, (z2 = _portugal /\ True) /\ _from z3 _portugal)) /\ True) /\ x = z3) Toplevel input, characters 672-676: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (z2 = _portugal) True) (_from z3 _portugal)))) True) (x = z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> ~ (exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, (z2 = _portugal /\ True) /\ _from z3 _portugal)) /\ True) /\ x = z3)) Toplevel input, characters 678-682: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (not (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (z2 = _portugal) True) (_from z3 _portugal)))) True) (x = z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, (z2 = _portugal /\ True) /\ _from z3 _portugal)) /\ True) /\ x = z3) 1 focused goal (shelved: 1) H0 : forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3 H : forall x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1) -> False H4 : True H7 : _committee ?x H2 : _few ?x H6 : _member ?x H8 : _from ?x _portugal H9 : True ============================ False Toplevel input, characters 688-700: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (z2 = _portugal) True) (_from z3 _portugal)))) True) (x = z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 702-706: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (z2 = _portugal) True) (_from z3 _portugal)))) True) (x = z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, (z2 = _portugal /\ True) /\ _from z3 _portugal)) /\ True) /\ x = z3) Toplevel input, characters 672-676: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (z2 = _portugal) True) (_from z3 _portugal)))) True) (x = z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _people is declared Coq < _portugal is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> (forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1) -> (forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3) -> ~ (exists x : Entity, ~ (exists z3 : Entity, ((((_few z3 /\ _committee z3) /\ _member z3) /\ (exists z2 : Entity, (z2 = _portugal /\ True) /\ _from z3 _portugal)) /\ True) /\ x = z3)) 6 focused goals (shelved: 2) H0 : forall x : Entity, _committee x /\ _member x -> True -> exists z1 : Entity, (_people z1 /\ True) /\ x = z1 H1 : forall x : Entity, _people x -> (exists z1 : Entity, (z1 = _portugal /\ True) /\ _from x _portugal) /\ True -> exists z3 : Entity, ((_southern z3 /\ _europe z3) /\ True) /\ _from x z3 x : Entity H2 : forall x0 : Entity, ((((_few x0 /\ _committee x0) /\ _member x0) /\ (exists z2 : Entity, (z2 = _portugal /\ True) /\ _from x0 _portugal)) /\ True) /\ x = x0 -> False H : forall x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1) -> False ============================ _few ?x goal 2 is: _committee ?x goal 3 is: _member ?x goal 4 is: _southern ?z1 goal 5 is: _europe ?z1 goal 6 is: _from ?x ?z1 Toplevel input, characters 694-706: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (not (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (z2 = _portugal) True) (_from z3 _portugal)))) True) (x = z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 708-712: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (forall x, ((and (_committee x) (_member x)) -> (True -> (exists z1, (and (and (_people z1) True) (x = z1)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (z1 = _portugal) True) (_from x _portugal))) True) -> (exists z3, (and (and (and (_southern z3) (_europe z3)) True) (_from x z3)))))) -> (not (exists x, (not (exists z3, (and (and (and (and (and (_few z3) (_committee z3)) (_member z3)) (exists z2, (and (and (z2 = _portugal) True) (_from z3 _portugal)))) True) (x = z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_045_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _businessman is declared Coq < _commissioner is declared Coq < _lead is declared Coq < _use is declared Coq < 1 goal ============================ (exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, (_businessman z1 /\ True) /\ x = z1)) -> exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, ((_lead z1 /\ _businessman z1) /\ True) /\ x = z1) Toplevel input, characters 294-298: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (_businessman z1) True) (x = z1)))))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (and (_lead z1) (_businessman z1)) True) (x = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _businessman is declared Coq < _commissioner is declared Coq < _lead is declared Coq < _use is declared Coq < 1 goal ============================ (exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, (_businessman z1 /\ True) /\ x = z1)) -> ~ (exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, ((_lead z1 /\ _businessman z1) /\ True) /\ x = z1)) Toplevel input, characters 300-304: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (_businessman z1) True) (x = z1)))))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (and (_lead z1) (_businessman z1)) True) (x = z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _businessman is declared Coq < _commissioner is declared Coq < _lead is declared Coq < _use is declared Coq < 1 goal ============================ (exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, (_businessman z1 /\ True) /\ x = z1)) -> exists x : Entity, ((two x /\ _commissioner x) /\ True) /\ _use x (exists z1 : Entity, ((_lead z1 /\ _businessman z1) /\ True) /\ x = z1) 1 goal x : Entity H0 : _use x (exists z1 : Entity, (_businessman z1 /\ True) /\ x = z1) H1 : True H : two x H2 : _commissioner x ============================ _use x (exists z1 : Entity, ((_lead z1 /\ _businessman z1) /\ True) /\ x = z1) Toplevel input, characters 310-322: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (_businessman z1) True) (x = z1)))))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (and (_lead z1) (_businessman z1)) True) (x = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 324-328: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (_businessman z1) True) (x = z1)))))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use x (exists z1, (and (and (and (_lead z1) (_businessman z1)) True) (x = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_046_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _one is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, ((_one x /\ (exists z1 : Entity, (_commissioner z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z4 : Entity, ((_home z4 /\ True) /\ _at x z4) /\ (exists z3 : Entity, ((_lot z3 /\ (exists z2 : Entity, (_time z2 /\ True) /\ _of z3 z2)) /\ True) /\ _spend x z3)) Toplevel input, characters 512-516: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (_commissioner z1) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _one is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> ~ (exists x : Entity, ((_one x /\ (exists z1 : Entity, (_commissioner z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z4 : Entity, ((_home z4 /\ True) /\ _at x z4) /\ (exists z3 : Entity, ((_lot z3 /\ (exists z2 : Entity, (_time z2 /\ True) /\ _of z3 z2)) /\ True) /\ _spend x z3))) Toplevel input, characters 518-522: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))) -> (not (exists x, (and (and (and (_one x) (exists z1, (and (and (_commissioner z1) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _one is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, ((_one x /\ (exists z1 : Entity, (_commissioner z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z4 : Entity, ((_home z4 /\ True) /\ _at x z4) /\ (exists z3 : Entity, ((_lot z3 /\ (exists z2 : Entity, (_time z2 /\ True) /\ _of z3 z2)) /\ True) /\ _spend x z3)) 8 focused goals (shelved: 4) H1 : forall x : Entity, _commissioner x -> True -> (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) -> False x : Entity H : _commissioner x H0 : two x ============================ _one ?x goal 2 is: _of ?x x goal 3 is: _home ?z4 goal 4 is: _at ?x ?z4 goal 5 is: _lot ?z3 goal 6 is: _time ?z2 goal 7 is: _of ?z3 ?z2 goal 8 is: _spend ?x ?z3 Toplevel input, characters 528-540: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (_commissioner z1) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 542-546: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (_commissioner z1) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_047_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, (((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) /\ (exists z3 : Entity, (_home z3 /\ True) /\ _at x z3) Toplevel input, characters 435-439: > Theorem t1: (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (exists x, (and (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))) (exists z3, (and (and (_home z3) True) (_at x z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> ~ (exists x : Entity, (((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) /\ (exists z3 : Entity, (_home z3 /\ True) /\ _at x z3)) Toplevel input, characters 441-445: > Theorem t1: (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))) (exists z3, (and (and (_home z3) True) (_at x z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, (((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) /\ (exists z3 : Entity, (_home z3 /\ True) /\ _at x z3) 2 goals x : Entity H1 : True H : _three x H2 : _commissioner x x0 : Entity H4 : _at x x0 H0 : _home x0 H5 : True x1 : Entity H6 : _spend x x1 H3 : _time x1 H7 : True ============================ _lot x1 goal 2 is: _of x1 x1 Toplevel input, characters 451-463: > Theorem t1: (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (exists x, (and (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))) (exists z3, (and (and (_home z3) True) (_at x z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 465-469: > Theorem t1: (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (exists x, (and (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))) (exists z3, (and (and (_home z3) True) (_at x z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_048_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-527: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 529-533: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-533: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 535-539: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-528: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 541-544: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 559-563: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-527: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 529-533: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-534: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 547-550: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 565-569: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-533: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 535-539: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-528: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 541-544: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 559-563: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-534: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 547-550: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 565-569: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 522-528: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 541-544: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 559-563: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 528-534: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 547-550: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 565-569: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_049_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 240-323: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-428: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 430-434: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 245-328: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-434: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 240-323: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-429: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 442-445: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 240-323: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-428: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 430-434: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 245-328: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-435: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 448-451: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-470: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 245-328: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-434: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-440: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 240-323: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-429: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 442-445: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 245-328: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-435: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 448-451: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-470: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 240-323: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-429: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 442-445: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 245-328: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-435: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 448-451: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-470: > Theorem t1: (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_050_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 664-668: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H1 : _resident x H4 : True x0 : Entity H3 : _of x x0 H5 : True H6 : _continent x0 H2 : _north x0 H7 : _american x0 ============================ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 664-668: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H1 : _resident x H4 : True x0 : Entity H3 : _of x x0 H5 : True H6 : _continent x0 H2 : _north x0 H7 : _american x0 ============================ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H1 : _resident x H4 : True x0 : Entity H3 : _of x x0 H5 : True H6 : _continent x0 H2 : _north x0 H7 : _american x0 ============================ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_051_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 664-668: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H1 : _resident x H4 : True x0 : Entity H3 : _of x x0 H5 : True H6 : _continent x0 H2 : _north x0 H7 : _american x0 ============================ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 664-668: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H1 : _resident x H4 : True x0 : Entity H3 : _of x x0 H5 : True H6 : _continent x0 H2 : _north x0 H7 : _american x0 ============================ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H1 : _resident x H4 : True x0 : Entity H3 : _of x x0 H5 : True H6 : _continent x0 H2 : _north x0 H7 : _american x0 ============================ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_052_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 664-668: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H1 : _resident x H4 : True x0 : Entity H3 : _of x x0 H5 : True H6 : _continent x0 H2 : _north x0 H7 : _american x0 ============================ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 664-668: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H1 : _resident x H4 : True x0 : Entity H3 : _of x x0 H5 : True H6 : _continent x0 H2 : _north x0 H7 : _american x0 ============================ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H1 : _resident x H4 : True x0 : Entity H3 : _of x x0 H5 : True H6 : _continent x0 H2 : _north x0 H7 : _american x0 ============================ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_053_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) Toplevel input, characters 816-820: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> ~ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) Toplevel input, characters 822-826: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (not (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) 4 focused goals (shelved: 1) H0 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3 x : Entity H1 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : True H : _resident x x0 : Entity H4 : _of x x0 H5 : True H6 : _country x0 H3 : _major x0 H7 : _western x0 ============================ _in ?z5 _europe goal 2 is: _live ?z5 goal 3 is: _right ?z5 goal 4 is: _have x ?z5 Toplevel input, characters 832-844: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 846-850: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) Toplevel input, characters 816-820: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> ~ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3 x : Entity H3 : True H1 : _resident x x0 : Entity H5 : _of x x0 H6 : True H4 : _western x0 H7 : _country x0 x1 : Entity H8 : _have x x1 H9 : True H10 : _right x1 H11 : _live x1 H12 : _in x1 _europe H13 : True x3 : Entity H14 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x3 _europe) /\ _freely x3) /\ _travel x3) H15 : True H : _resident x3 x4 : Entity H17 : _of x3 x4 H18 : True H19 : _country x4 H16 : _major x4 H20 : _western x4 ============================ False Toplevel input, characters 838-850: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (not (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 852-856: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (not (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> ~ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) Toplevel input, characters 822-826: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (not (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) 4 focused goals (shelved: 1) H0 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3 x : Entity H1 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : True H : _resident x x0 : Entity H4 : _of x x0 H5 : True H6 : _country x0 H3 : _major x0 H7 : _western x0 ============================ _in ?z5 _europe goal 2 is: _live ?z5 goal 3 is: _right ?z5 goal 4 is: _have x ?z5 Toplevel input, characters 832-844: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 846-850: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> ~ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3 x : Entity H3 : True H1 : _resident x x0 : Entity H5 : _of x x0 H6 : True H4 : _western x0 H7 : _country x0 x1 : Entity H8 : _have x x1 H9 : True H10 : _right x1 H11 : _live x1 H12 : _in x1 _europe H13 : True x3 : Entity H14 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x3 _europe) /\ _freely x3) /\ _travel x3) H15 : True H : _resident x3 x4 : Entity H17 : _of x3 x4 H18 : True H19 : _country x4 H16 : _major x4 H20 : _western x4 ============================ False Toplevel input, characters 838-850: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (not (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 852-856: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (not (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) 4 focused goals (shelved: 1) H0 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3 x : Entity H1 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : True H : _resident x x0 : Entity H4 : _of x x0 H5 : True H6 : _country x0 H3 : _major x0 H7 : _western x0 ============================ _in ?z5 _europe goal 2 is: _live ?z5 goal 3 is: _right ?z5 goal 4 is: _have x ?z5 Toplevel input, characters 832-844: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 846-850: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> ~ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) 1 goal H0 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3 x : Entity H3 : True H1 : _resident x x0 : Entity H5 : _of x x0 H6 : True H4 : _western x0 H7 : _country x0 x1 : Entity H8 : _have x x1 H9 : True H10 : _right x1 H11 : _live x1 H12 : _in x1 _europe H13 : True x3 : Entity H14 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x3 _europe) /\ _freely x3) /\ _travel x3) H15 : True H : _resident x3 x4 : Entity H17 : _of x3 x4 H18 : True H19 : _country x4 H16 : _major x4 H20 : _western x4 ============================ False Toplevel input, characters 838-850: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (not (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 852-856: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (not (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_054_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _scandinavian is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _scandinavian x /\ _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) Toplevel input, characters 369-373: > Theorem t1: (forall x, ((and (_scandinavian x) (_delegate x)) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _scandinavian is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _scandinavian x /\ _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) Toplevel input, characters 375-379: > Theorem t1: (forall x, ((and (_scandinavian x) (_delegate x)) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _scandinavian is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _scandinavian x /\ _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) 5 focused goals (shelved: 3) H : forall x : Entity, _scandinavian x /\ _delegate x -> True -> (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> False ============================ _delegate ?x goal 2 is: _time ?z2 goal 3 is: _on ?x ?z2 goal 4 is: _report ?z1 goal 5 is: _finish ?x ?z1 Toplevel input, characters 385-397: > Theorem t1: (forall x, ((and (_scandinavian x) (_delegate x)) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 399-403: > Theorem t1: (forall x, ((and (_scandinavian x) (_delegate x)) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_055_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) Toplevel input, characters 364-368: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) No more goals. Toplevel input, characters 370-387: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) 1 goal x : Entity H0 : _delegate x H2 : True x0 : Entity H4 : _on x x0 H1 : _time x0 H5 : True x1 : Entity H6 : _finish x x1 H3 : _survey x1 H7 : True x2 : Entity H9 : True H : _irish x2 H10 : _delegate x2 x3 : Entity H12 : _on x2 x3 H8 : _time x3 H13 : True x4 : Entity H14 : _finish x2 x4 H11 : _survey x4 H15 : True ============================ False Toplevel input, characters 380-392: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 394-398: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) Toplevel input, characters 364-368: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) No more goals. Toplevel input, characters 370-387: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) 1 goal x : Entity H0 : _delegate x H2 : True x0 : Entity H4 : _on x x0 H1 : _time x0 H5 : True x1 : Entity H6 : _finish x x1 H3 : _survey x1 H7 : True x2 : Entity H9 : True H : _irish x2 H10 : _delegate x2 x3 : Entity H12 : _on x2 x3 H8 : _time x3 H13 : True x4 : Entity H14 : _finish x2 x4 H11 : _survey x4 H15 : True ============================ False Toplevel input, characters 380-392: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 394-398: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) No more goals. Toplevel input, characters 370-387: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) 1 goal x : Entity H0 : _delegate x H2 : True x0 : Entity H4 : _on x x0 H1 : _time x0 H5 : True x1 : Entity H6 : _finish x x1 H3 : _survey x1 H7 : True x2 : Entity H9 : True H : _irish x2 H10 : _delegate x2 x3 : Entity H12 : _on x2 x3 H8 : _time x3 H13 : True x4 : Entity H14 : _finish x2 x4 H11 : _survey x4 H15 : True ============================ False Toplevel input, characters 380-392: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 394-398: > Theorem t1: (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_056_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> ~ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) Toplevel input, characters 456-460: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2) No more goals. Toplevel input, characters 462-479: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> ~ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) 1 goal x : Entity H2 : True H0 : _many x H3 : _delegate x x0 : Entity H4 : _obtain x x0 H5 : True H1 : _interesting x0 H7 : _result x0 x1 : Entity H8 : _from x0 x1 H6 : _survey x1 H9 : True x2 : Entity H11 : True H12 : _delegate x2 H : _many x2 H13 : _british x2 x3 : Entity H14 : _obtain x2 x3 H15 : True H10 : _interesting x3 H17 : _result x3 x4 : Entity H18 : _from x3 x4 H16 : _survey x4 H19 : True ============================ False Toplevel input, characters 472-484: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 486-490: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> ~ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) Toplevel input, characters 456-460: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2) No more goals. Toplevel input, characters 462-479: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> ~ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) 1 goal x : Entity H2 : True H0 : _many x H3 : _delegate x x0 : Entity H4 : _obtain x x0 H5 : True H1 : _interesting x0 H7 : _result x0 x1 : Entity H8 : _from x0 x1 H6 : _survey x1 H9 : True x2 : Entity H11 : True H12 : _delegate x2 H : _many x2 H13 : _british x2 x3 : Entity H14 : _obtain x2 x3 H15 : True H10 : _interesting x3 H17 : _result x3 x4 : Entity H18 : _from x3 x4 H16 : _survey x4 H19 : True ============================ False Toplevel input, characters 472-484: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 486-490: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2) No more goals. Toplevel input, characters 462-479: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> ~ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) 1 goal x : Entity H2 : True H0 : _many x H3 : _delegate x x0 : Entity H4 : _obtain x x0 H5 : True H1 : _interesting x0 H7 : _result x0 x1 : Entity H8 : _from x0 x1 H6 : _survey x1 H9 : True x2 : Entity H11 : True H12 : _delegate x2 H : _many x2 H13 : _british x2 x3 : Entity H14 : _obtain x2 x3 H15 : True H10 : _interesting x3 H17 : _result x3 x4 : Entity H18 : _from x3 x4 H16 : _survey x4 H19 : True ============================ False Toplevel input, characters 472-484: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 486-490: > Theorem t1: (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_057_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) Toplevel input, characters 531-535: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) No more goals. Toplevel input, characters 537-554: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) 1 goal x : Entity H2 : True H0 : _several x H3 : _delegate x x0 : Entity H4 : _get x x0 H5 : True H1 : _result x0 x1 : Entity H7 : _publish x0 H8 : _in x0 x1 H9 : True H10 : _newspaper x1 H6 : _major x1 H11 : _national x1 x2 : Entity H13 : True H14 : _delegate x2 H : _several x2 H15 : _portuguese x2 x3 : Entity H16 : _get x2 x3 H17 : True H12 : _result x3 x4 : Entity H19 : _publish x3 H20 : _in x3 x4 H21 : True H22 : _newspaper x4 H18 : _major x4 H23 : _national x4 ============================ False Toplevel input, characters 547-559: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 561-565: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) Toplevel input, characters 531-535: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) No more goals. Toplevel input, characters 537-554: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) 1 goal x : Entity H2 : True H0 : _several x H3 : _delegate x x0 : Entity H4 : _get x x0 H5 : True H1 : _result x0 x1 : Entity H7 : _publish x0 H8 : _in x0 x1 H9 : True H10 : _newspaper x1 H6 : _major x1 H11 : _national x1 x2 : Entity H13 : True H14 : _delegate x2 H : _several x2 H15 : _portuguese x2 x3 : Entity H16 : _get x2 x3 H17 : True H12 : _result x3 x4 : Entity H19 : _publish x3 H20 : _in x3 x4 H21 : True H22 : _newspaper x4 H18 : _major x4 H23 : _national x4 ============================ False Toplevel input, characters 547-559: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 561-565: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) No more goals. Toplevel input, characters 537-554: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) 1 goal x : Entity H2 : True H0 : _several x H3 : _delegate x x0 : Entity H4 : _get x x0 H5 : True H1 : _result x0 x1 : Entity H7 : _publish x0 H8 : _in x0 x1 H9 : True H10 : _newspaper x1 H6 : _major x1 H11 : _national x1 x2 : Entity H13 : True H14 : _delegate x2 H : _several x2 H15 : _portuguese x2 x3 : Entity H16 : _get x2 x3 H17 : True H12 : _result x3 x4 : Entity H19 : _publish x3 H20 : _in x3 x4 H21 : True H22 : _newspaper x4 H18 : _major x4 H23 : _national x4 ============================ False Toplevel input, characters 547-559: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 561-565: > Theorem t1: (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_058_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 434-438: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 440-444: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 450-462: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 464-468: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 434-438: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 456-468: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 470-474: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 440-444: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 450-462: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 464-468: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 456-468: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 470-474: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 450-462: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 464-468: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _in is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _in x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 456-468: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 470-474: > Theorem t1: (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_in x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_059_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) Toplevel input, characters 347-351: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia) No more goals. Toplevel input, characters 353-370: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) 1 goal x : Entity H2 : True H3 : _member x H0 : _few x H4 : _committee x H5 : _from x _scandinavia H6 : True x1 : Entity H8 : True H9 : _member x1 H10 : _committee x1 H : _few x1 H11 : _female x1 H12 : _from x1 _scandinavia H13 : True ============================ False Toplevel input, characters 363-375: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 377-381: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) Toplevel input, characters 347-351: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia) No more goals. Toplevel input, characters 353-370: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) 1 goal x : Entity H2 : True H3 : _member x H0 : _few x H4 : _committee x H5 : _from x _scandinavia H6 : True x1 : Entity H8 : True H9 : _member x1 H10 : _committee x1 H : _few x1 H11 : _female x1 H12 : _from x1 _scandinavia H13 : True ============================ False Toplevel input, characters 363-375: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 377-381: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia) No more goals. Toplevel input, characters 353-370: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) 1 goal x : Entity H2 : True H3 : _member x H0 : _few x H4 : _committee x H5 : _from x _scandinavia H6 : True x1 : Entity H8 : True H9 : _member x1 H10 : _committee x1 H : _few x1 H11 : _female x1 H12 : _from x1 _scandinavia H13 : True ============================ False Toplevel input, characters 363-375: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 377-381: > Theorem t1: (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_060_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) Toplevel input, characters 361-365: > Theorem t1: (not (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> ~ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) Toplevel input, characters 367-371: > Theorem t1: (not (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (not (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) 1 goal x : Entity H2 : True H3 : _member x H0 : _few x H4 : _committee x x0 : Entity H5 : _from x x0 H6 : True H1 : _southern x0 H7 : _europe x0 H : forall x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1) -> False ============================ _female x Toplevel input, characters 377-389: > Theorem t1: (not (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 391-395: > Theorem t1: (not (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_061_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-361: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 363-367: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 362-367: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 369-373: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-362: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 375-378: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 393-397: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-361: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 363-367: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 362-368: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 381-384: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 399-403: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 362-367: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 369-373: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-362: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 375-378: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 393-397: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 362-368: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 381-384: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 399-403: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-362: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 375-378: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 393-397: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 13-207: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 362-368: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 381-384: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 399-403: > Theorem t1: (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))) -> (not (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_062_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _one is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_female x /\ _commissioner x) /\ two x) /\ (forall x : Entity, _female x /\ _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> exists x : Entity, ((_one x /\ (exists z1 : Entity, (_commissioner z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z4 : Entity, ((_home z4 /\ True) /\ _at x z4) /\ (exists z3 : Entity, ((_lot z3 /\ (exists z2 : Entity, (_time z2 /\ True) /\ _of z3 z2)) /\ True) /\ _spend x z3)) Toplevel input, characters 606-610: > Theorem t1: (and (exists x, (and (and (_female x) (_commissioner x)) (two x))) (forall x, ((and (_female x) (_commissioner x)) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (_commissioner z1) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _one is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_female x /\ _commissioner x) /\ two x) /\ (forall x : Entity, _female x /\ _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> ~ (exists x : Entity, ((_one x /\ (exists z1 : Entity, (_commissioner z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z4 : Entity, ((_home z4 /\ True) /\ _at x z4) /\ (exists z3 : Entity, ((_lot z3 /\ (exists z2 : Entity, (_time z2 /\ True) /\ _of z3 z2)) /\ True) /\ _spend x z3))) Toplevel input, characters 612-616: > Theorem t1: (and (exists x, (and (and (_female x) (_commissioner x)) (two x))) (forall x, ((and (_female x) (_commissioner x)) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (exists x, (and (and (and (_one x) (exists z1, (and (and (_commissioner z1) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _one is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_female x /\ _commissioner x) /\ two x) /\ (forall x : Entity, _female x /\ _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> exists x : Entity, ((_one x /\ (exists z1 : Entity, (_commissioner z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z4 : Entity, ((_home z4 /\ True) /\ _at x z4) /\ (exists z3 : Entity, ((_lot z3 /\ (exists z2 : Entity, (_time z2 /\ True) /\ _of z3 z2)) /\ True) /\ _spend x z3)) 8 focused goals (shelved: 4) H1 : forall x : Entity, _female x /\ _commissioner x -> True -> (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) -> False x : Entity H0 : two x H : _female x H2 : _commissioner x ============================ _one ?x goal 2 is: _of ?x x goal 3 is: _home ?z4 goal 4 is: _at ?x ?z4 goal 5 is: _lot ?z3 goal 6 is: _time ?z2 goal 7 is: _of ?z3 ?z2 goal 8 is: _spend ?x ?z3 Toplevel input, characters 622-634: > Theorem t1: (and (exists x, (and (and (_female x) (_commissioner x)) (two x))) (forall x, ((and (_female x) (_commissioner x)) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (_commissioner z1) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 636-640: > Theorem t1: (and (exists x, (and (and (_female x) (_commissioner x)) (two x))) (forall x, ((and (_female x) (_commissioner x)) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (_commissioner z1) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_063_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> ~ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) Toplevel input, characters 401-405: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) No more goals. Toplevel input, characters 407-424: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> ~ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) 1 goal x : Entity H2 : True H0 : _three x H3 : _commissioner x x0 : Entity H5 : _at x x0 H1 : _home x0 H6 : True x1 : Entity H7 : _spend x x1 H4 : _time x1 H8 : True x2 : Entity H10 : True H11 : _commissioner x2 H : _three x2 H12 : _female x2 x3 : Entity H14 : _at x2 x3 H9 : _home x3 H15 : True x4 : Entity H16 : _spend x2 x4 H13 : _time x4 H17 : True ============================ False Toplevel input, characters 417-429: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 431-435: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> ~ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) Toplevel input, characters 401-405: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) No more goals. Toplevel input, characters 407-424: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> ~ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) 1 goal x : Entity H2 : True H0 : _three x H3 : _commissioner x x0 : Entity H5 : _at x x0 H1 : _home x0 H6 : True x1 : Entity H7 : _spend x x1 H4 : _time x1 H8 : True x2 : Entity H10 : True H11 : _commissioner x2 H : _three x2 H12 : _female x2 x3 : Entity H14 : _at x2 x3 H9 : _home x3 H15 : True x4 : Entity H16 : _spend x2 x4 H13 : _time x4 H17 : True ============================ False Toplevel input, characters 417-429: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 431-435: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) No more goals. Toplevel input, characters 407-424: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (((_three x /\ _female x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> ~ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) 1 goal x : Entity H2 : True H0 : _three x H3 : _commissioner x x0 : Entity H5 : _at x x0 H1 : _home x0 H6 : True x1 : Entity H7 : _spend x x1 H4 : _time x1 H8 : True x2 : Entity H10 : True H11 : _commissioner x2 H : _three x2 H12 : _female x2 x3 : Entity H14 : _at x2 x3 H9 : _home x3 H15 : True x4 : Entity H16 : _spend x2 x4 H13 : _time x4 H17 : True ============================ False Toplevel input, characters 417-429: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 431-435: > Theorem t1: (exists x, (and (and (and (and (_three x) (_female x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_064_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-487: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 489-493: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-493: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 495-499: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-488: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 501-504: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 519-523: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-487: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 489-493: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-494: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 507-510: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 525-529: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-493: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 495-499: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-488: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 501-504: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 519-523: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-494: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 507-510: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 525-529: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-488: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 501-504: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 519-523: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-245: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; (((_ten x /\ _female x) /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-494: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 507-510: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 525-529: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_065_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-428: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 430-434: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-434: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-440: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-429: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 442-445: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-428: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 430-434: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-435: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 448-451: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-470: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-434: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-440: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-429: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 442-445: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-435: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 448-451: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-470: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 423-429: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 442-445: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _nobel is declared Coq < _prize is declared Coq < _scandinavian is declared Coq < _swede is declared Coq < _win is declared Coq < _won is declared Coq < Toplevel input, characters 26-109: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 429-435: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 448-451: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-470: > Theorem t1: (and (_nobel (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x))))) (_prize (fun F2 F3 => (exists x, (and (and (and (_scandinavian x) (_won x)) (F2 x)) (F3 x)))))) -> (forall x, ((_swede x) -> (True -> (exists z1, (and (and (_scandinavian z1) True) (x = z1)))))) -> (not (exists x, (and (and (_swede x) True) (exists z1, (and (and (and (_nobel z1) (_prize z1)) True) (_win x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_066_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H2 : True H3 : _canadian x H4 : _resident x ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H2 : True H3 : _canadian x H4 : _resident x ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H2 : True H3 : _canadian x H4 : _resident x ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_067_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H2 : True H3 : _canadian x H4 : _resident x ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H2 : True H3 : _canadian x H4 : _resident x ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H2 : True H3 : _canadian x H4 : _resident x ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_068_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H2 : True H3 : _canadian x H4 : _resident x ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H2 : True H3 : _canadian x H4 : _resident x ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 x : Entity H2 : True H3 : _canadian x H4 : _resident x ============================ _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 680-692: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 694-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _american is declared Coq < _can is declared Coq < _canadian is declared Coq < _continent is declared Coq < _europe is declared Coq < _freely is declared Coq < _north is declared Coq < _of is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ (forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2) -> ~ (forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) 1 goal H : forall x : Entity, _resident x -> (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of x z1) /\ True -> _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : forall x : Entity, _canadian x /\ _resident x -> True -> exists z2 : Entity, ((_resident z2 /\ (exists z1 : Entity, (((_north z1 /\ _american z1) /\ _continent z1) /\ True) /\ _of z2 z1)) /\ True) /\ x = z2 H1 : forall x : Entity, _canadian x /\ _resident x -> True -> _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of x z1))) True) -> (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))) -> (forall x, ((and (_canadian x) (_resident x)) -> (True -> (exists z2, (and (and (and (_resident z2) (exists z1, (and (and (and (and (_north z1) (_american z1)) (_continent z1)) True) (_of z2 z1)))) True) (x = z2)))))) -> (not (forall x, ((and (_canadian x) (_resident x)) -> (True -> (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_069_generalized_quantifiers multi Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) Toplevel input, characters 816-820: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> ~ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5)) Toplevel input, characters 822-826: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (not (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _country is declared Coq < _europe is declared Coq < _freely is declared Coq < _have is declared Coq < _in is declared Coq < _live is declared Coq < _major is declared Coq < _of is declared Coq < _resident is declared Coq < _right is declared Coq < _travel is declared Coq < _western is declared Coq < _within is declared Coq < 1 goal ============================ (exists x : Entity, ((_resident x /\ (exists z1 : Entity, ((_western z1 /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x)) -> (forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3) -> exists x : Entity, ((_resident x /\ (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z5 : Entity, (((exists z2 : Entity, ((z2 = _europe /\ True) /\ _in z5 _europe) /\ _live z5) /\ _right z5) /\ True) /\ _have x z5) 5 focused goals (shelved: 1) H0 : forall x : Entity, _resident x -> (exists z1 : Entity, (((_major z1 /\ _western z1) /\ _country z1) /\ True) /\ _of x z1) /\ True -> exists z3 : Entity, ((_resident z3 /\ (exists z2 : Entity, ((_western z2 /\ _country z2) /\ True) /\ _of z3 z2)) /\ True) /\ x = z3 x : Entity H1 : _can (exists z3 : Entity, (((z3 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H2 : True H : _resident x x0 : Entity H4 : _of x x0 H5 : True H3 : _western x0 H6 : _country x0 ============================ _major x0 goal 2 is: _in ?z5 _europe goal 3 is: _live ?z5 goal 4 is: _right ?z5 goal 5 is: _have x ?z5 Toplevel input, characters 832-844: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 846-850: > Theorem t1: (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (_western z1) (_country z1)) True) (_of x z1)))) True) (_can (exists z3, (and (and (and (and (z3 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (forall x, ((_resident x) -> ((and (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1))) True) -> (exists z3, (and (and (and (_resident z3) (exists z2, (and (and (and (_western z2) (_country z2)) True) (_of z3 z2)))) True) (x = z3)))))) -> (exists x, (and (and (and (_resident x) (exists z1, (and (and (and (and (_major z1) (_western z1)) (_country z1)) True) (_of x z1)))) True) (exists z5, (and (and (and (exists z2, (and (and (and (z2 = _europe) True) (_in z5 _europe)) (_live z5))) (_right z5)) True) (_have x z5))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_070_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _scandinavian is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> exists x : Entity, ((_scandinavian x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) Toplevel input, characters 369-373: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (exists x, (and (and (and (_scandinavian x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _scandinavian is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, ((_scandinavian x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _on is declared Coq < _report is declared Coq < _scandinavian is declared Coq < _time is declared Coq < 1 goal ============================ (forall x : Entity, _delegate x -> True -> ~ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1))) -> exists x : Entity, ((_scandinavian x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) 6 focused goals (shelved: 3) H : forall x : Entity, _delegate x -> True -> (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _finish x z1)) -> False ============================ _scandinavian ?x goal 2 is: _delegate ?x goal 3 is: _time ?z2 goal 4 is: _on ?x ?z2 goal 5 is: _report ?z1 goal 6 is: _finish ?x ?z1 Toplevel input, characters 385-397: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (exists x, (and (and (and (_scandinavian x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 399-403: > Theorem t1: (forall x, ((_delegate x) -> (True -> (not (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))))) -> (exists x, (and (and (and (_scandinavian x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_report z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_071_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) Toplevel input, characters 358-362: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> ~ (exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) Toplevel input, characters 364-368: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (not (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _finish is declared Coq < _irish is declared Coq < _on is declared Coq < _survey is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, (_delegate x /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1))) -> exists x : Entity, ((_irish x /\ _delegate x) /\ True) /\ (exists z2 : Entity, ((_time z2 /\ True) /\ _on x z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _finish x z1)) 1 goal x : Entity H : _delegate x H1 : True x0 : Entity H3 : _on x x0 H0 : _time x0 H4 : True x1 : Entity H5 : _finish x x1 H2 : _survey x1 H6 : True ============================ _irish x Toplevel input, characters 374-386: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 388-392: > Theorem t1: (exists x, (and (and (_delegate x) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))) -> (exists x, (and (and (and (_irish x) (_delegate x)) True) (exists z2, (and (and (and (_time z2) True) (_on x z2)) (exists z1, (and (and (_survey z1) True) (_finish x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_072_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2) Toplevel input, characters 450-454: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> ~ (exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) Toplevel input, characters 456-460: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (not (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _british is declared Coq < _delegate is declared Coq < _from is declared Coq < _interesting is declared Coq < _many is declared Coq < _obtain is declared Coq < _result is declared Coq < _survey is declared Coq < 1 goal ============================ (exists x : Entity, ((_many x /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2)) -> exists x : Entity, (((_many x /\ _british x) /\ _delegate x) /\ True) /\ (exists z2 : Entity, (((_interesting z2 /\ _result z2) /\ (exists z1 : Entity, (_survey z1 /\ True) /\ _from z2 z1)) /\ True) /\ _obtain x z2) 1 goal x : Entity H1 : True H : _many x H2 : _delegate x x0 : Entity H3 : _obtain x x0 H4 : True H0 : _interesting x0 H6 : _result x0 x1 : Entity H7 : _from x0 x1 H5 : _survey x1 H8 : True ============================ _british x Toplevel input, characters 466-478: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 480-484: > Theorem t1: (exists x, (and (and (and (_many x) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))) -> (exists x, (and (and (and (and (_many x) (_british x)) (_delegate x)) True) (exists z2, (and (and (and (and (_interesting z2) (_result z2)) (exists z1, (and (and (_survey z1) True) (_from z2 z1)))) True) (_obtain x z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_073_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) Toplevel input, characters 525-529: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> ~ (exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) Toplevel input, characters 531-535: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (not (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _delegate is declared Coq < _get is declared Coq < _in is declared Coq < _major is declared Coq < _national is declared Coq < _newspaper is declared Coq < _portuguese is declared Coq < _publish is declared Coq < _result is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, ((_several x /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4)) -> exists x : Entity, (((_several x /\ _portuguese x) /\ _delegate x) /\ True) /\ (exists z4 : Entity, ((_result z4 /\ (exists z1 : Entity, ((((_major z1 /\ _national z1) /\ _newspaper z1) /\ True) /\ _in z4 z1) /\ _publish z4)) /\ True) /\ _get x z4) 1 goal x : Entity H1 : True H : _several x H2 : _delegate x x0 : Entity H3 : _get x x0 H4 : True H0 : _result x0 x1 : Entity H6 : _publish x0 H7 : _in x0 x1 H8 : True H9 : _newspaper x1 H5 : _major x1 H10 : _national x1 ============================ _portuguese x Toplevel input, characters 541-553: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 555-559: > Theorem t1: (exists x, (and (and (and (_several x) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))) -> (exists x, (and (and (and (and (_several x) (_portuguese x)) (_delegate x)) True) (exists z4, (and (and (and (_result z4) (exists z1, (and (and (and (and (and (_major z1) (_national z1)) (_newspaper z1)) True) (_in z4 z1)) (_publish z4)))) True) (_get x z4))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_074_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 439-443: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 445-449: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 455-467: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 469-473: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 439-443: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 461-473: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 475-479: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 445-449: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 455-467: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 469-473: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 461-473: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 475-479: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) Toplevel input, characters 455-467: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 469-473: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _can is declared Coq < _europe is declared Coq < _european is declared Coq < _freely is declared Coq < _outside is declared Coq < _resident is declared Coq < _travel is declared Coq < _within is declared Coq < 1 goal ============================ most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) -> ~ most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) 1 goal H : most x; _european x /\ True, _can (exists z2 : Entity, (((z2 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) H0 : most x; (_european x /\ (exists z1 : Entity, ((z1 = _europe /\ True) /\ _outside x _europe) /\ _resident x)) /\ True, _can (exists z5 : Entity, (((z5 = _europe /\ True) /\ _within x _europe) /\ _freely x) /\ _travel x) ============================ False Toplevel input, characters 461-473: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 475-479: > Theorem t1: (Most (fun x => (and (_european x) True)) (fun x => (_can (exists z2, (and (and (and (and (z2 = _europe) True) (_within x _europe)) (_freely x)) (_travel x)))))) -> (not (Most (fun x => (and (and (_european x) (exists z1, (and (and (and (z1 = _europe) True) (_outside x _europe)) (_resident x)))) True)) (fun x => (_can (exists z5, (and (and (and (and (z5 = _europe) True) (_within x _europe)) (_freely x)) (_travel x))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_075_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia) Toplevel input, characters 341-345: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> ~ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) Toplevel input, characters 347-351: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (not (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _scandinavia is declared Coq < 1 goal ============================ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia)) -> exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, (z1 = _scandinavia /\ True) /\ _from x _scandinavia) 1 goal x : Entity H1 : True H2 : _member x H : _few x H3 : _committee x H4 : _from x _scandinavia H5 : True ============================ _female x Toplevel input, characters 357-369: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 371-375: > Theorem t1: (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))) -> (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (z1 = _scandinavia) True) (_from x _scandinavia))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_076_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> ~ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> ~ ~ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) Toplevel input, characters 367-371: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (not (not (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> ~ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) No more goals. Toplevel input, characters 373-390: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (not (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> ~ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _committee is declared Coq < _europe is declared Coq < _female is declared Coq < _few is declared Coq < _from is declared Coq < _member is declared Coq < _southern is declared Coq < 1 goal ============================ ~ (exists x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) -> ~ ~ (exists x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1)) 7 focused goals (shelved: 2) H0 : forall x : Entity, ((((_few x /\ _female x) /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1) -> False H : forall x : Entity, (((_few x /\ _committee x) /\ _member x) /\ True) /\ (exists z1 : Entity, ((_southern z1 /\ _europe z1) /\ True) /\ _from x z1) -> False ============================ _few ?x goal 2 is: _female ?x goal 3 is: _committee ?x goal 4 is: _member ?x goal 5 is: _southern ?z1 goal 6 is: _europe ?z1 goal 7 is: _from ?x ?z1 Toplevel input, characters 383-395: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (not (not (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 397-401: > Theorem t1: (not (exists x, (and (and (and (and (_few x) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1)))))) -> (not (not (exists x, (and (and (and (and (and (_few x) (_female x)) (_committee x)) (_member x)) True) (exists z1, (and (and (and (_southern z1) (_europe z1)) True) (_from x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_077_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 159-353: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-361: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 363-367: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 164-358: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 362-367: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 369-373: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 159-353: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-362: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 375-378: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 159-353: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-361: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 363-367: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 164-358: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 362-368: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 381-384: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 399-403: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 164-358: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 362-367: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 369-373: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 159-353: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-362: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 375-378: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 164-358: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 362-368: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 381-384: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 399-403: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 159-353: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F3 : Entity -> Prop => exists x : Entity, ((((((two x /\ _female x) /\ _commissioner x) /\ _use_e2 x) /\ _be x) /\ (exists z1 : Entity, (_business z1 /\ True) /\ _in x z1)) /\ F1 x) /\ F3 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 356-362: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 375-378: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _commissioner is declared Coq < _female is declared Coq < _in is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < Toplevel input, characters 164-358: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 362-368: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 381-384: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 399-403: > Theorem t1: (exists x, (and (and (and (two x) (_commissioner x)) True) (_use_e3 x (and (_be x) (exists z1, (and (and (_business z1) True) (_in x z1))))))) -> (not (fun F1 F3 => (exists x, (and (and (and (and (and (and (and (two x) (_female x)) (_commissioner x)) (_use_e2 x)) (_be x)) (exists z1, (and (and (_business z1) True) (_in x z1)))) (F1 x)) (F3 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_078_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _one is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> exists x : Entity, ((_one x /\ (exists z1 : Entity, ((_female z1 /\ _commissioner z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z4 : Entity, ((_home z4 /\ True) /\ _at x z4) /\ (exists z3 : Entity, ((_lot z3 /\ (exists z2 : Entity, (_time z2 /\ True) /\ _of z3 z2)) /\ True) /\ _spend x z3)) Toplevel input, characters 589-593: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (and (_female z1) (_commissioner z1)) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _one is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> ~ (exists x : Entity, ((_one x /\ (exists z1 : Entity, ((_female z1 /\ _commissioner z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z4 : Entity, ((_home z4 /\ True) /\ _at x z4) /\ (exists z3 : Entity, ((_lot z3 /\ (exists z2 : Entity, (_time z2 /\ True) /\ _of z3 z2)) /\ True) /\ _spend x z3))) Toplevel input, characters 595-599: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (not (exists x, (and (and (and (_one x) (exists z1, (and (and (and (_female z1) (_commissioner z1)) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _lot is declared Coq < _of is declared Coq < _one is declared Coq < _spend is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, _commissioner x /\ two x) /\ (forall x : Entity, _commissioner x -> True -> ~ (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2))) -> exists x : Entity, ((_one x /\ (exists z1 : Entity, ((_female z1 /\ _commissioner z1) /\ True) /\ _of x z1)) /\ True) /\ (exists z4 : Entity, ((_home z4 /\ True) /\ _at x z4) /\ (exists z3 : Entity, ((_lot z3 /\ (exists z2 : Entity, (_time z2 /\ True) /\ _of z3 z2)) /\ True) /\ _spend x z3)) 9 focused goals (shelved: 4) H1 : forall x : Entity, _commissioner x -> True -> (exists z3 : Entity, ((_home z3 /\ True) /\ _at x z3) /\ (exists z2 : Entity, ((_lot z2 /\ (exists z1 : Entity, (_time z1 /\ True) /\ _of z2 z1)) /\ True) /\ _spend x z2)) -> False x : Entity H : _commissioner x H0 : two x ============================ _one ?x goal 2 is: _female x goal 3 is: _of ?x x goal 4 is: _home ?z4 goal 5 is: _at ?x ?z4 goal 6 is: _lot ?z3 goal 7 is: _time ?z2 goal 8 is: _of ?z3 ?z2 goal 9 is: _spend ?x ?z3 Toplevel input, characters 605-617: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (and (_female z1) (_commissioner z1)) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 619-623: > Theorem t1: (and (exists x, (and (_commissioner x) (two x))) (forall x, ((_commissioner x) -> (True -> (not (exists z3, (and (and (and (_home z3) True) (_at x z3)) (exists z2, (and (and (and (_lot z2) (exists z1, (and (and (_time z1) True) (_of z2 z1)))) True) (_spend x z2)))))))))) -> (exists x, (and (and (and (_one x) (exists z1, (and (and (and (_female z1) (_commissioner z1)) True) (_of x z1)))) True) (exists z4, (and (and (and (_home z4) True) (_at x z4)) (exists z3, (and (and (and (_lot z3) (exists z2, (and (and (_time z2) True) (_of z3 z2)))) True) (_spend x z3))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_079_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _male is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, (((_three x /\ _male x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (exists x, (and (and (and (and (_three x) (_male x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _male is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> ~ (exists x : Entity, (((_three x /\ _male x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) Toplevel input, characters 399-403: > Theorem t1: (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (not (exists x, (and (and (and (and (_three x) (_male x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _home is declared Coq < _male is declared Coq < _spend is declared Coq < _three is declared Coq < _time is declared Coq < 1 goal ============================ (exists x : Entity, ((_three x /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) -> exists x : Entity, (((_three x /\ _male x) /\ _commissioner x) /\ True) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1)) 1 goal x : Entity H1 : True H : _three x H2 : _commissioner x x0 : Entity H4 : _at x x0 H0 : _home x0 H5 : True x1 : Entity H6 : _spend x x1 H3 : _time x1 H7 : True ============================ _male x Toplevel input, characters 409-421: > Theorem t1: (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (exists x, (and (and (and (and (_three x) (_male x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (and (_three x) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))) -> (exists x, (and (and (and (and (_three x) (_male x)) (_commissioner x)) True) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_080_generalized_quantifiers single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-487: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 489-493: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-493: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 495-499: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-488: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 501-504: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 519-523: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-487: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 489-493: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-494: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 507-510: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 525-529: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-493: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 495-499: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-488: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 501-504: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 519-523: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-494: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 507-510: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 525-529: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 482-488: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 501-504: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 519-523: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _commissioner is declared Coq < _female is declared Coq < _home is declared Coq < _spend is declared Coq < _ten is declared Coq < _time is declared Coq < Toplevel input, characters 33-227: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment S : ?T The term "most x; ((_ten x /\ _commissioner x) /\ (exists z2 : Entity, ((_home z2 /\ True) /\ _at x z2) /\ (exists z1 : Entity, (_time z1 /\ True) /\ _spend x z1))) /\ True, True" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 488-494: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 507-510: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 525-529: > Theorem t1: (fun S => (and (_at (Most (fun x => (and (and (and (_ten x) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S)) -> (not (fun S => (and (_at (Most (fun x => (and (and (and (and (_ten x) (_female x)) (_commissioner x)) (exists z2, (and (and (and (_home z2) True) (_at x z2)) (exists z1, (and (and (_time z1) True) (_spend x z1)))))) True)) (fun w => True)) S) S))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_081_plurals single unknown
fracas_082_plurals single unknown
fracas_083_plurals single unknown
fracas_084_plurals single unknown
fracas_085_plurals single Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _contract is declared Coq < _exactly is declared Coq < _lawyer is declared Coq < _sign is declared Coq < _six is declared Coq < _three is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (((((_exactly x /\ _two x) /\ _three x) /\ _accountant x) /\ _lawyer x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1)) -> exists x : Entity, ((_six x /\ _lawyer x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1) Toplevel input, characters 309-313: > Theorem t1: (exists x, (and (and (and (and (and (and (_exactly x) (_two x)) (_three x)) (_accountant x)) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))) -> (exists x, (and (and (and (_six x) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _contract is declared Coq < _exactly is declared Coq < _lawyer is declared Coq < _sign is declared Coq < _six is declared Coq < _three is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (((((_exactly x /\ _two x) /\ _three x) /\ _accountant x) /\ _lawyer x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1)) -> ~ (exists x : Entity, ((_six x /\ _lawyer x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1)) Toplevel input, characters 315-319: > Theorem t1: (exists x, (and (and (and (and (and (and (_exactly x) (_two x)) (_three x)) (_accountant x)) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))) -> (not (exists x, (and (and (and (_six x) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _contract is declared Coq < _exactly is declared Coq < _lawyer is declared Coq < _sign is declared Coq < _six is declared Coq < _three is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (((((_exactly x /\ _two x) /\ _three x) /\ _accountant x) /\ _lawyer x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1)) -> exists x : Entity, ((_six x /\ _lawyer x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1) 1 goal x : Entity H1 : True H2 : _lawyer x H3 : _accountant x H4 : _three x H : _exactly x H5 : _two x x0 : Entity H6 : _sign x x0 H0 : _contract x0 H7 : True ============================ _six x Toplevel input, characters 325-337: > Theorem t1: (exists x, (and (and (and (and (and (and (_exactly x) (_two x)) (_three x)) (_accountant x)) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))) -> (exists x, (and (and (and (_six x) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 339-343: > Theorem t1: (exists x, (and (and (and (and (and (and (_exactly x) (_two x)) (_three x)) (_accountant x)) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))) -> (exists x, (and (and (and (_six x) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_086_plurals single Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _contract is declared Coq < _exactly is declared Coq < _lawyer is declared Coq < _sign is declared Coq < _six is declared Coq < _three is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (((((_exactly x /\ _two x) /\ _three x) /\ _accountant x) /\ _lawyer x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1)) -> exists x : Entity, ((_six x /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1) Toplevel input, characters 313-317: > Theorem t1: (exists x, (and (and (and (and (and (and (_exactly x) (_two x)) (_three x)) (_accountant x)) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))) -> (exists x, (and (and (and (_six x) (_accountant x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _contract is declared Coq < _exactly is declared Coq < _lawyer is declared Coq < _sign is declared Coq < _six is declared Coq < _three is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (((((_exactly x /\ _two x) /\ _three x) /\ _accountant x) /\ _lawyer x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1)) -> ~ (exists x : Entity, ((_six x /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1)) Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (and (and (and (and (_exactly x) (_two x)) (_three x)) (_accountant x)) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))) -> (not (exists x, (and (and (and (_six x) (_accountant x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _contract is declared Coq < _exactly is declared Coq < _lawyer is declared Coq < _sign is declared Coq < _six is declared Coq < _three is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (((((_exactly x /\ _two x) /\ _three x) /\ _accountant x) /\ _lawyer x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1)) -> exists x : Entity, ((_six x /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign x z1) 1 goal x : Entity H1 : True H2 : _lawyer x H3 : _accountant x H4 : _three x H : _exactly x H5 : _two x x0 : Entity H6 : _sign x x0 H0 : _contract x0 H7 : True ============================ _six x Toplevel input, characters 329-341: > Theorem t1: (exists x, (and (and (and (and (and (and (_exactly x) (_two x)) (_three x)) (_accountant x)) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))) -> (exists x, (and (and (and (_six x) (_accountant x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 343-347: > Theorem t1: (exists x, (and (and (and (and (and (and (_exactly x) (_two x)) (_three x)) (_accountant x)) (_lawyer x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))) -> (exists x, (and (and (and (_six x) (_accountant x)) True) (exists z1, (and (and (_contract z1) True) (_sign x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_087_plurals single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 Toplevel input, characters 245-249: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) Toplevel input, characters 251-255: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 2 focused goals (shelved: 1) H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 x : Entity H0 : _representative x H1 : True ============================ _meeting ?z1 goal 2 is: _at x ?z1 Toplevel input, characters 261-273: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 275-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 Toplevel input, characters 245-249: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) 1 goal H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H0 : forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 ============================ False Toplevel input, characters 267-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 281-285: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) Toplevel input, characters 251-255: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 2 focused goals (shelved: 1) H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 x : Entity H0 : _representative x H1 : True ============================ _meeting ?z1 goal 2 is: _at x ?z1 Toplevel input, characters 261-273: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 275-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) 1 goal H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H0 : forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 ============================ False Toplevel input, characters 267-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 281-285: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 2 focused goals (shelved: 1) H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 x : Entity H0 : _representative x H1 : True ============================ _meeting ?z1 goal 2 is: _at x ?z1 Toplevel input, characters 261-273: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 275-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) 1 goal H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H0 : forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 ============================ False Toplevel input, characters 267-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 281-285: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_088_plurals single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 Toplevel input, characters 245-249: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) Toplevel input, characters 251-255: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 2 focused goals (shelved: 1) H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 x : Entity H0 : _representative x H1 : True ============================ _meeting ?z1 goal 2 is: _at x ?z1 Toplevel input, characters 261-273: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 275-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 Toplevel input, characters 245-249: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) 1 goal H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H0 : forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 ============================ False Toplevel input, characters 267-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 281-285: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) Toplevel input, characters 251-255: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 2 focused goals (shelved: 1) H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 x : Entity H0 : _representative x H1 : True ============================ _meeting ?z1 goal 2 is: _at x ?z1 Toplevel input, characters 261-273: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 275-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) 1 goal H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H0 : forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 ============================ False Toplevel input, characters 267-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 281-285: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 2 focused goals (shelved: 1) H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 x : Entity H0 : _representative x H1 : True ============================ _meeting ?z1 goal 2 is: _at x ?z1 Toplevel input, characters 261-273: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 275-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) 1 goal H : forall x : Entity, _client x /\ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H0 : forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 ============================ False Toplevel input, characters 267-279: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 281-285: > Theorem t1: (forall x, ((and (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_089_plurals single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ ((forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1)) Toplevel input, characters 350-354: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) No more goals. Toplevel input, characters 356-373: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ ((forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1)) 1 goal H : forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H1 : forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H2 : forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 ============================ False Toplevel input, characters 366-378: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ ((forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1)) Toplevel input, characters 350-354: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) No more goals. Toplevel input, characters 356-373: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ ((forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1)) 1 goal H : forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H1 : forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H2 : forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 ============================ False Toplevel input, characters 366-378: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> (forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) No more goals. Toplevel input, characters 356-373: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _client is declared Coq < _meeting is declared Coq < _representative is declared Coq < 1 goal ============================ (forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) -> ~ ((forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ (forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1)) 1 goal H : forall x : Entity, _client x \/ _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H1 : forall x : Entity, _representative x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 H2 : forall x : Entity, _client x -> True -> exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1 ============================ False Toplevel input, characters 366-378: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (forall x, ((or (_client x) (_representative x)) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) -> (not (and (forall x, ((_representative x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))) (forall x, ((_client x) -> (True -> (exists z1, (and (and (_meeting z1) True) (_at x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_090_plurals single Welcome to Coq 8.15.0 Coq < Coq < _agenda is declared Coq < _chairman is declared Coq < _item is declared Coq < _on is declared Coq < _out is declared Coq < _read is declared Coq < 1 goal ============================ (exists x : Entity, ((_chairman x /\ True) /\ _out x) /\ (exists z3 : Entity, ((_item z3 /\ (exists z2 : Entity, (_agenda z2 /\ True) /\ _on z3 z2)) /\ True) /\ _read x z3)) -> exists x : Entity, (_chairman x /\ True) /\ (exists z3 : Entity, (((_agenda z3 /\ True) /\ _on x z3) /\ _out x) /\ (forall z2 : Entity, _item z2 -> True -> _read x z2)) Toplevel input, characters 366-370: > Theorem t1: (exists x, (and (and (and (_chairman x) True) (_out x)) (exists z3, (and (and (and (_item z3) (exists z2, (and (and (_agenda z2) True) (_on z3 z2)))) True) (_read x z3))))) -> (exists x, (and (and (_chairman x) True) (exists z3, (and (and (and (and (_agenda z3) True) (_on x z3)) (_out x)) (forall z2, ((_item z2) -> (True -> (_read x z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _agenda is declared Coq < _chairman is declared Coq < _item is declared Coq < _on is declared Coq < _out is declared Coq < _read is declared Coq < 1 goal ============================ (exists x : Entity, ((_chairman x /\ True) /\ _out x) /\ (exists z3 : Entity, ((_item z3 /\ (exists z2 : Entity, (_agenda z2 /\ True) /\ _on z3 z2)) /\ True) /\ _read x z3)) -> ~ (exists x : Entity, (_chairman x /\ True) /\ (exists z3 : Entity, (((_agenda z3 /\ True) /\ _on x z3) /\ _out x) /\ (forall z2 : Entity, _item z2 -> True -> _read x z2))) Toplevel input, characters 372-376: > Theorem t1: (exists x, (and (and (and (_chairman x) True) (_out x)) (exists z3, (and (and (and (_item z3) (exists z2, (and (and (_agenda z2) True) (_on z3 z2)))) True) (_read x z3))))) -> (not (exists x, (and (and (_chairman x) True) (exists z3, (and (and (and (and (_agenda z3) True) (_on x z3)) (_out x)) (forall z2, ((_item z2) -> (True -> (_read x z2))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _agenda is declared Coq < _chairman is declared Coq < _item is declared Coq < _on is declared Coq < _out is declared Coq < _read is declared Coq < 1 goal ============================ (exists x : Entity, ((_chairman x /\ True) /\ _out x) /\ (exists z3 : Entity, ((_item z3 /\ (exists z2 : Entity, (_agenda z2 /\ True) /\ _on z3 z2)) /\ True) /\ _read x z3)) -> exists x : Entity, (_chairman x /\ True) /\ (exists z3 : Entity, (((_agenda z3 /\ True) /\ _on x z3) /\ _out x) /\ (forall z2 : Entity, _item z2 -> True -> _read x z2)) 2 goals x : Entity H1 : _out x H : _chairman x H2 : True x0 : Entity H3 : _read x x0 H4 : True H0 : _item x0 x1 : Entity H6 : _on x0 x1 H5 : _agenda x1 H7 : True ============================ _on x x1 goal 2 is: _read x z2 Toplevel input, characters 382-394: > Theorem t1: (exists x, (and (and (and (_chairman x) True) (_out x)) (exists z3, (and (and (and (_item z3) (exists z2, (and (and (_agenda z2) True) (_on z3 z2)))) True) (_read x z3))))) -> (exists x, (and (and (_chairman x) True) (exists z3, (and (and (and (and (_agenda z3) True) (_on x z3)) (_out x)) (forall z2, ((_item z2) -> (True -> (_read x z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 396-400: > Theorem t1: (exists x, (and (and (and (_chairman x) True) (_out x)) (exists z3, (and (and (and (_item z3) (exists z2, (and (and (_agenda z2) True) (_on z3 z2)))) True) (_read x z3))))) -> (exists x, (and (and (_chairman x) True) (exists z3, (and (and (and (and (_agenda z3) True) (_on x z3)) (_out x)) (forall z2, ((_item z2) -> (True -> (_read x z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_091_plurals single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (exists x : Entity, (((_people x /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1)) /\ True) /\ _vote x) /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (and (and (_people x) (exists z1, (and (and (_meeting z1) True) (_at x z1)))) True) (_vote x)) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (exists x : Entity, (((_people x /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1)) /\ True) /\ _vote x) /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) Toplevel input, characters 409-413: > Theorem t1: (exists x, (and (and (and (and (_people x) (exists z1, (and (and (_meeting z1) True) (_at x z1)))) True) (_vote x)) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (exists x : Entity, (((_people x /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1)) /\ True) /\ _vote x) /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) 2 goals x : Entity H0 : _people x H3 : True x0 : Entity H2 : _at x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : _vote x1 H7 : True H : _people x1 x2 : Entity H9 : _at x1 x2 H8 : _meeting x2 H10 : True x3 : Entity H11 : _for x1 x3 H12 : True H5 : _new x3 H13 : _chairman x3 ============================ _vote x goal 2 is: _for x x3 Toplevel input, characters 419-431: > Theorem t1: (exists x, (and (and (and (and (_people x) (exists z1, (and (and (_meeting z1) True) (_at x z1)))) True) (_vote x)) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 433-437: > Theorem t1: (exists x, (and (and (and (and (_people x) (exists z1, (and (and (_meeting z1) True) (_at x z1)))) True) (_vote x)) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_092_plurals single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) Toplevel input, characters 449-453: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Toplevel input, characters 455-472: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) 1 goal H : forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4) H0 : forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) ============================ False Toplevel input, characters 465-477: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 479-483: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) Toplevel input, characters 449-453: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Toplevel input, characters 455-472: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) 1 goal H : forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4) H0 : forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) ============================ False Toplevel input, characters 465-477: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 479-483: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Toplevel input, characters 455-472: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) 1 goal H : forall x : Entity, (exists z1 : Entity, (((_people z1 /\ True) /\ x = z1) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _at z1 z2)) /\ True) -> _vote x /\ (exists z4 : Entity, ((_new z4 /\ _chairman z4) /\ True) /\ _for x z4) H0 : forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) ============================ False Toplevel input, characters 465-477: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 479-483: > Theorem t1: (forall x, ((exists z1, (and (and (and (and (_people z1) True) (x = z1)) (exists z2, (and (and (_meeting z2) True) (_at z1 z2)))) True)) -> (and (_vote x) (exists z4, (and (and (and (_new z4) (_chairman z4)) True) (_for x z4)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_093_plurals single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) Toplevel input, characters 438-442: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Toplevel input, characters 444-461: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) 1 goal H : forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3) H0 : forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) ============================ False Toplevel input, characters 454-466: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 468-472: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) Toplevel input, characters 438-442: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Toplevel input, characters 444-461: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) 1 goal H : forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3) H0 : forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) ============================ False Toplevel input, characters 454-466: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 468-472: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) No more goals. Toplevel input, characters 444-461: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _chairman is declared Coq < _for is declared Coq < _meeting is declared Coq < _new is declared Coq < _people is declared Coq < _vote is declared Coq < 1 goal ============================ (forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3)) -> ~ (forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2)) 1 goal H : forall x : Entity, (exists z5 : Entity, ((_people z5 /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _at z5 z1)) /\ True) /\ x = z5) -> _vote x /\ (exists z3 : Entity, ((_new z3 /\ _chairman z3) /\ True) /\ _for x z3) H0 : forall x : Entity, _people x -> (exists z1 : Entity, (_meeting z1 /\ True) /\ _at x z1) /\ True -> _vote x /\ (exists z2 : Entity, ((_new z2 /\ _chairman z2) /\ True) /\ _for x z2) ============================ False Toplevel input, characters 454-466: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 468-472: > Theorem t1: (forall x, ((exists z5, (and (and (and (_people z5) (exists z1, (and (and (_meeting z1) True) (_at z5 z1)))) True) (x = z5))) -> (and (_vote x) (exists z3, (and (and (and (_new z3) (_chairman z3)) True) (_for x z3)))))) -> (not (forall x, ((_people x) -> ((and (exists z1, (and (and (_meeting z1) True) (_at x z1))) True) -> (and (_vote x) (exists z2, (and (and (and (_new z2) (_chairman z2)) True) (_for x z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_094_plurals single Welcome to Coq 8.15.0 Coq < Coq < _cambridge is declared Coq < _for is declared Coq < _inhabitant is declared Coq < _labour is declared Coq < _mp is declared Coq < _of is declared Coq < _vote is declared Coq < 1 goal ============================ (exists x : Entity, (((_inhabitant x /\ (exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge)) /\ True) /\ _vote x) /\ (exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2)) -> forall x : Entity, _inhabitant x -> (exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge) /\ True -> _vote x /\ (exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2) Toplevel input, characters 429-433: > Theorem t1: (exists x, (and (and (and (and (_inhabitant x) (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge)))) True) (_vote x)) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))) -> (forall x, ((_inhabitant x) -> ((and (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge))) True) -> (and (_vote x) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cambridge is declared Coq < _for is declared Coq < _inhabitant is declared Coq < _labour is declared Coq < _mp is declared Coq < _of is declared Coq < _vote is declared Coq < 1 goal ============================ (exists x : Entity, (((_inhabitant x /\ (exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge)) /\ True) /\ _vote x) /\ (exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2)) -> ~ (forall x : Entity, _inhabitant x -> (exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge) /\ True -> _vote x /\ (exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2)) Toplevel input, characters 435-439: > Theorem t1: (exists x, (and (and (and (and (_inhabitant x) (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge)))) True) (_vote x)) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))) -> (not (forall x, ((_inhabitant x) -> ((and (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge))) True) -> (and (_vote x) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cambridge is declared Coq < _for is declared Coq < _inhabitant is declared Coq < _labour is declared Coq < _mp is declared Coq < _of is declared Coq < _vote is declared Coq < 1 goal ============================ (exists x : Entity, (((_inhabitant x /\ (exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge)) /\ True) /\ _vote x) /\ (exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2)) -> forall x : Entity, _inhabitant x -> (exists z1 : Entity, (z1 = _cambridge /\ True) /\ _of x _cambridge) /\ True -> _vote x /\ (exists z2 : Entity, ((_labour z2 /\ _mp z2) /\ True) /\ _for x z2) 2 goals x : Entity H0 : _inhabitant x H3 : True H2 : _of x _cambridge H4 : True x1 : Entity H6 : _vote x1 H7 : True H : _inhabitant x1 H9 : _of x1 _cambridge H10 : True x3 : Entity H11 : _for x1 x3 H12 : True H5 : _labour x3 H13 : _mp x3 ============================ _vote x goal 2 is: _for x x3 Toplevel input, characters 445-457: > Theorem t1: (exists x, (and (and (and (and (_inhabitant x) (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge)))) True) (_vote x)) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))) -> (forall x, ((_inhabitant x) -> ((and (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge))) True) -> (and (_vote x) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 459-463: > Theorem t1: (exists x, (and (and (and (and (_inhabitant x) (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge)))) True) (_vote x)) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))) -> (forall x, ((_inhabitant x) -> ((and (exists z1, (and (and (z1 = _cambridge) True) (_of x _cambridge))) True) -> (and (_vote x) (exists z2, (and (and (and (_labour z2) (_mp z2)) True) (_for x z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_095_plurals single Welcome to Coq 8.15.0 Coq < Coq < _ancient is declared Coq < _greek is declared Coq < _greeks is declared Coq < _note is declared Coq < _noted is declared Coq < _philosopher is declared Coq < 1 goal ============================ (forall x : Entity, _ancient x /\ _greeks x -> True -> _philosopher x /\ _note x) -> forall x : Entity, _ancient x /\ _greek x -> True -> exists z1 : Entity, ((_noted z1 /\ _philosopher z1) /\ True) /\ x = z1 Toplevel input, characters 246-250: > Theorem t1: (forall x, ((and (_ancient x) (_greeks x)) -> (True -> (and (_philosopher x) (_note x))))) -> (forall x, ((and (_ancient x) (_greek x)) -> (True -> (exists z1, (and (and (and (_noted z1) (_philosopher z1)) True) (x = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ancient is declared Coq < _greek is declared Coq < _greeks is declared Coq < _note is declared Coq < _noted is declared Coq < _philosopher is declared Coq < 1 goal ============================ (forall x : Entity, _ancient x /\ _greeks x -> True -> _philosopher x /\ _note x) -> ~ (forall x : Entity, _ancient x /\ _greek x -> True -> exists z1 : Entity, ((_noted z1 /\ _philosopher z1) /\ True) /\ x = z1) Toplevel input, characters 252-256: > Theorem t1: (forall x, ((and (_ancient x) (_greeks x)) -> (True -> (and (_philosopher x) (_note x))))) -> (not (forall x, ((and (_ancient x) (_greek x)) -> (True -> (exists z1, (and (and (and (_noted z1) (_philosopher z1)) True) (x = z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ancient is declared Coq < _greek is declared Coq < _greeks is declared Coq < _note is declared Coq < _noted is declared Coq < _philosopher is declared Coq < 1 goal ============================ (forall x : Entity, _ancient x /\ _greeks x -> True -> _philosopher x /\ _note x) -> forall x : Entity, _ancient x /\ _greek x -> True -> exists z1 : Entity, ((_noted z1 /\ _philosopher z1) /\ True) /\ x = z1 2 goals H : forall x : Entity, _ancient x /\ _greeks x -> True -> _philosopher x /\ _note x x : Entity H1 : True H2 : _ancient x H3 : _greek x ============================ _noted x goal 2 is: _philosopher x Toplevel input, characters 262-274: > Theorem t1: (forall x, ((and (_ancient x) (_greeks x)) -> (True -> (and (_philosopher x) (_note x))))) -> (forall x, ((and (_ancient x) (_greek x)) -> (True -> (exists z1, (and (and (and (_noted z1) (_philosopher z1)) True) (x = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 276-280: > Theorem t1: (forall x, ((and (_ancient x) (_greeks x)) -> (True -> (and (_philosopher x) (_note x))))) -> (forall x, ((and (_ancient x) (_greek x)) -> (True -> (exists z1, (and (and (and (_noted z1) (_philosopher z1)) True) (x = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_096_plurals single Welcome to Coq 8.15.0 Coq < Coq < _ancient is declared Coq < _greek is declared Coq < _greeks is declared Coq < _note is declared Coq < _noted is declared Coq < _philosopher is declared Coq < 1 goal ============================ (forall x : Entity, _ancient x /\ _greeks x -> True -> forall z1 : Entity, _note z1 /\ _philosopher z1 -> True -> x = z1) -> forall x : Entity, _ancient x /\ _greek x -> True -> exists z1 : Entity, ((_noted z1 /\ _philosopher z1) /\ True) /\ x = z1 Toplevel input, characters 285-289: > Theorem t1: (forall x, ((and (_ancient x) (_greeks x)) -> (True -> (forall z1, ((and (_note z1) (_philosopher z1)) -> (True -> (x = z1))))))) -> (forall x, ((and (_ancient x) (_greek x)) -> (True -> (exists z1, (and (and (and (_noted z1) (_philosopher z1)) True) (x = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ancient is declared Coq < _greek is declared Coq < _greeks is declared Coq < _note is declared Coq < _noted is declared Coq < _philosopher is declared Coq < 1 goal ============================ (forall x : Entity, _ancient x /\ _greeks x -> True -> forall z1 : Entity, _note z1 /\ _philosopher z1 -> True -> x = z1) -> ~ (forall x : Entity, _ancient x /\ _greek x -> True -> exists z1 : Entity, ((_noted z1 /\ _philosopher z1) /\ True) /\ x = z1) Toplevel input, characters 291-295: > Theorem t1: (forall x, ((and (_ancient x) (_greeks x)) -> (True -> (forall z1, ((and (_note z1) (_philosopher z1)) -> (True -> (x = z1))))))) -> (not (forall x, ((and (_ancient x) (_greek x)) -> (True -> (exists z1, (and (and (and (_noted z1) (_philosopher z1)) True) (x = z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _ancient is declared Coq < _greek is declared Coq < _greeks is declared Coq < _note is declared Coq < _noted is declared Coq < _philosopher is declared Coq < 1 goal ============================ (forall x : Entity, _ancient x /\ _greeks x -> True -> forall z1 : Entity, _note z1 /\ _philosopher z1 -> True -> x = z1) -> forall x : Entity, _ancient x /\ _greek x -> True -> exists z1 : Entity, ((_noted z1 /\ _philosopher z1) /\ True) /\ x = z1 2 goals H : forall x : Entity, _ancient x /\ _greeks x -> True -> forall z1 : Entity, _note z1 /\ _philosopher z1 -> True -> x = z1 x : Entity H1 : True H2 : _ancient x H3 : _greek x ============================ _noted x goal 2 is: _philosopher x Toplevel input, characters 301-313: > Theorem t1: (forall x, ((and (_ancient x) (_greeks x)) -> (True -> (forall z1, ((and (_note z1) (_philosopher z1)) -> (True -> (x = z1))))))) -> (forall x, ((and (_ancient x) (_greek x)) -> (True -> (exists z1, (and (and (and (_noted z1) (_philosopher z1)) True) (x = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 315-319: > Theorem t1: (forall x, ((and (_ancient x) (_greeks x)) -> (True -> (forall z1, ((and (_note z1) (_philosopher z1)) -> (True -> (x = z1))))))) -> (forall x, ((and (_ancient x) (_greek x)) -> (True -> (exists z1, (and (and (and (_noted z1) (_philosopher z1)) True) (x = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_097_plurals single Welcome to Coq 8.15.0 Coq < Coq < _blame is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _more is declared Coq < _on is declared Coq < _one is declared Coq < _software is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, (((_software x /\ _fault x) /\ True) /\ _blame x) /\ (exists z1 : Entity, ((_system z1 /\ _failure z1) /\ True) /\ _for x z1)) -> exists x : Entity, (((_system x /\ _failure x) /\ True) /\ _blame x) /\ (exists z1 : Entity, (((_more z1 /\ _software z1) /\ _fault z1 \/ (_one z1 /\ _software z1) /\ _fault z1) /\ True) /\ _on x z1) Toplevel input, characters 397-401: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_system x) (_failure x)) True) (_blame x)) (exists z1, (and (and (or (and (and (_more z1) (_software z1)) (_fault z1)) (and (and (_one z1) (_software z1)) (_fault z1))) True) (_on x z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _blame is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _more is declared Coq < _on is declared Coq < _one is declared Coq < _software is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, (((_software x /\ _fault x) /\ True) /\ _blame x) /\ (exists z1 : Entity, ((_system z1 /\ _failure z1) /\ True) /\ _for x z1)) -> ~ (exists x : Entity, (((_system x /\ _failure x) /\ True) /\ _blame x) /\ (exists z1 : Entity, (((_more z1 /\ _software z1) /\ _fault z1 \/ (_one z1 /\ _software z1) /\ _fault z1) /\ True) /\ _on x z1)) Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (not (exists x, (and (and (and (and (_system x) (_failure x)) True) (_blame x)) (exists z1, (and (and (or (and (and (_more z1) (_software z1)) (_fault z1)) (and (and (_one z1) (_software z1)) (_fault z1))) True) (_on x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _blame is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _more is declared Coq < _on is declared Coq < _one is declared Coq < _software is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, (((_software x /\ _fault x) /\ True) /\ _blame x) /\ (exists z1 : Entity, ((_system z1 /\ _failure z1) /\ True) /\ _for x z1)) -> exists x : Entity, (((_system x /\ _failure x) /\ True) /\ _blame x) /\ (exists z1 : Entity, (((_more z1 /\ _software z1) /\ _fault z1 \/ (_one z1 /\ _software z1) /\ _fault z1) /\ True) /\ _on x z1) 3 focused goals (shelved: 1) x : Entity H1 : _blame x H2 : True H : _software x H3 : _fault x x0 : Entity H4 : _for x x0 H5 : True H0 : _system x0 H6 : _failure x0 ============================ _blame x0 goal 2 is: (_more ?z1 /\ _software ?z1) /\ _fault ?z1 \/ (_one ?z1 /\ _software ?z1) /\ _fault ?z1 goal 3 is: _on x0 ?z1 Toplevel input, characters 413-425: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_system x) (_failure x)) True) (_blame x)) (exists z1, (and (and (or (and (and (_more z1) (_software z1)) (_fault z1)) (and (and (_one z1) (_software z1)) (_fault z1))) True) (_on x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 427-431: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_system x) (_failure x)) True) (_blame x)) (exists z1, (and (and (or (and (and (_more z1) (_software z1)) (_fault z1)) (and (and (_one z1) (_software z1)) (_fault z1))) True) (_on x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_098_plurals multi Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 501-506: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 508-512: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 507-512: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 514-518: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 501-507: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 520-523: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 538-542: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 501-506: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 508-512: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 507-513: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 526-529: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 544-548: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 507-512: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 514-518: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 501-507: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 520-523: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 538-542: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 507-513: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 526-529: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 544-548: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 501-507: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 520-523: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 538-542: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < Toplevel input, characters 10-11: > Parameter _# : Entity -> Prop. > ^ Error: Syntax error: [inline] expected after [assumption_token] (in [gallina]). Coq < _32_dash_985 is declared Coq < _blame is declared Coq < _bug is declared Coq < _failure is declared Coq < _fault is declared Coq < _for is declared Coq < _known is declared Coq < _software is declared Coq < _system is declared Coq < Toplevel input, characters 209-210: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). > ^ Error: Syntax error: ',' or ')' expected after [term level 200] (in [term]). Toplevel input, characters 507-513: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 526-529: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 544-548: > Theorem t1: (exists x, (and (and (and (and (_software x) (_fault x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1))))) -> (exists x, (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (exists z1, (and (and (and (and (_known z1) (_software z1)) (_fault z1)) True) (x = z1))))) -> (not (exists x, (and (and (and (and (and (_bug x) (_# x)) (_32_dash_985 x)) True) (_blame x)) (exists z1, (and (and (and (_system z1) (_failure z1)) True) (_for x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_099_plurals multi Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith) No more goals. Toplevel input, characters 676-693: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith)) 1 goal H : forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x H3 : True x0 : Entity H4 : _impress _smith H5 : _by _smith x0 H6 : True H7 : _performance x0 x1 : Entity H8 : Rel x0 x1 H2 : _system x1 H9, H11 : True x3 : Entity H13 : _at _smith x3 H10 : _demonstration x3 H14 : True H12 : _client _smith H16 : True ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith)) Toplevel input, characters 670-674: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith) No more goals. Toplevel input, characters 676-693: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith)) 1 goal H : forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x H3 : True x0 : Entity H4 : _impress _smith H5 : _by _smith x0 H6 : True H7 : _performance x0 x1 : Entity H8 : Rel x0 x1 H2 : _system x1 H9, H11 : True x3 : Entity H13 : _at _smith x3 H10 : _demonstration x3 H14 : True H12 : _client _smith H16 : True ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith) No more goals. Toplevel input, characters 676-693: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _smith is declared Coq < _system is declared Coq < 1 goal ============================ (forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_demonstration z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_client z1 /\ True) /\ _smith = z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((((exists z1 : Entity, (_system z1 /\ True) /\ Rel z2 z1) /\ _performance z2) /\ True) /\ _by _smith z2) /\ _impress _smith)) 1 goal H : forall x : Entity, (exists z7 : Entity, ((_client z7 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at z7 z1)) /\ True) /\ x = z7) -> exists z4 : Entity, ((((exists z3 : Entity, (_system z3 /\ True) /\ Rel z4 z3) /\ _performance z4) /\ True) /\ _by x z4) /\ _impress x H3 : True x0 : Entity H4 : _impress _smith H5 : _by _smith x0 H6 : True H7 : _performance x0 x1 : Entity H8 : Rel x0 x1 H2 : _system x1 H9, H11 : True x3 : Entity H13 : _at _smith x3 H10 : _demonstration x3 H14 : True H12 : _client _smith H16 : True ============================ False Toplevel input, characters 686-698: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (forall x, ((exists z7, (and (and (and (_client z7) (exists z1, (and (and (_demonstration z1) True) (_at z7 z1)))) True) (x = z7))) -> (exists z4, (and (and (and (and (exists z3, (and (and (_system z3) True) (Rel z4 z3))) (_performance z4)) True) (_by x z4)) (_impress x))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_demonstration z2) True) (_at _smith z2)) (exists z1, (and (and (_client z1) True) (_smith = z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (exists z1, (and (and (_system z1) True) (Rel z2 z1))) (_performance z2)) True) (_by _smith z2)) (_impress _smith)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_100_plurals single Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) Toplevel input, characters 528-532: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> ~ most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) Toplevel input, characters 534-538: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (not (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) 1 goal x : Entity H1 : True H : _client x x0 : Entity H3 : _at x x0 H2 : _demonstration x0 H4 : True x1 : Entity H5 : _impress x H6 : _by x x1 H7 : True H8 : _performance x1 x2 : Entity H9 : Rel x1 x2 H0 : _system x2 H10 : True ============================ most x3; (_client x3 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x3 z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x3 z3) /\ _impress x3) Toplevel input, characters 544-556: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 558-562: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) Toplevel input, characters 528-532: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> ~ most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) 1 goal H0 : most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) x : Entity H2 : True H : _client x x0 : Entity H4 : _at x x0 H3 : _demonstration x0 H5 : True x1 : Entity H6 : _impress x H7 : _by x x1 H8 : True H9 : _performance x1 x2 : Entity H10 : Rel x1 x2 H1 : _system x2 H11 : True ============================ False Toplevel input, characters 550-562: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (not (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 564-568: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (not (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> ~ most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) Toplevel input, characters 534-538: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (not (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) 1 goal x : Entity H1 : True H : _client x x0 : Entity H3 : _at x x0 H2 : _demonstration x0 H4 : True x1 : Entity H5 : _impress x H6 : _by x x1 H7 : True H8 : _performance x1 x2 : Entity H9 : Rel x1 x2 H0 : _system x2 H10 : True ============================ most x3; (_client x3 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x3 z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x3 z3) /\ _impress x3) Toplevel input, characters 544-556: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 558-562: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> ~ most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) 1 goal H0 : most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) x : Entity H2 : True H : _client x x0 : Entity H4 : _at x x0 H3 : _demonstration x0 H5 : True x1 : Entity H6 : _impress x H7 : _by x x1 H8 : True H9 : _performance x1 x2 : Entity H10 : Rel x1 x2 H1 : _system x2 H11 : True ============================ False Toplevel input, characters 550-562: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (not (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 564-568: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (not (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) 1 goal x : Entity H1 : True H : _client x x0 : Entity H3 : _at x x0 H2 : _demonstration x0 H4 : True x1 : Entity H5 : _impress x H6 : _by x x1 H7 : True H8 : _performance x1 x2 : Entity H9 : Rel x1 x2 H0 : _system x2 H10 : True ============================ most x3; (_client x3 /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x3 z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x3 z3) /\ _impress x3) Toplevel input, characters 544-556: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 558-562: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _by is declared Coq < _client is declared Coq < _demonstration is declared Coq < _impress is declared Coq < _performance is declared Coq < _system is declared Coq < 1 goal ============================ (exists x : Entity, ((_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True) /\ (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x)) -> ~ most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) 1 goal H0 : most x; (_client x /\ (exists z1 : Entity, (_demonstration z1 /\ True) /\ _at x z1)) /\ True, (exists z3 : Entity, ((((exists z2 : Entity, (_system z2 /\ True) /\ Rel z3 z2) /\ _performance z3) /\ True) /\ _by x z3) /\ _impress x) x : Entity H2 : True H : _client x x0 : Entity H4 : _at x x0 H3 : _demonstration x0 H5 : True x1 : Entity H6 : _impress x H7 : _by x x1 H8 : True H9 : _performance x1 x2 : Entity H10 : Rel x1 x2 H1 : _system x2 H11 : True ============================ False Toplevel input, characters 550-562: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (not (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 564-568: > Theorem t1: (exists x, (and (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True) (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x))))) -> (not (Most (fun x => (and (and (_client x) (exists z1, (and (and (_demonstration z1) True) (_at x z1)))) True)) (fun x => (exists z3, (and (and (and (and (exists z2, (and (and (_system z2) True) (Rel z3 z2))) (_performance z3)) True) (_by x z3)) (_impress x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_101_plurals multi Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _likely is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> exists x : Entity, ((x = _smith /\ True) /\ _likely _smith) /\ (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) Toplevel input, characters 498-502: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (and (x = _smith) True) (_likely _smith)) (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _likely is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> ~ (exists x : Entity, ((x = _smith /\ True) /\ _likely _smith) /\ (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1)) Toplevel input, characters 504-508: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (not (exists x, (and (and (and (x = _smith) True) (_likely _smith)) (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _likely is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> exists x : Entity, ((x = _smith /\ True) /\ _likely _smith) /\ (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) 4 goals H2, H4 : True H5 : _graduate _smith H1 : _university _smith x1 : Entity H7 : True H : _university x1 H8 : _graduate x1 x2 : Entity H9 : _make x1 x2 H10 : True H11 : _trader x2 H6 : _poor x2 H12 : _stock_dash_market x2 ============================ _likely _smith goal 2 is: _stock x2 goal 3 is: _market x2 goal 4 is: _make _smith x2 Toplevel input, characters 514-526: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (and (x = _smith) True) (_likely _smith)) (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 528-532: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (and (x = _smith) True) (_likely _smith)) (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_102_plurals multi Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) Toplevel input, characters 483-487: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1)) Toplevel input, characters 489-493: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (not (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) 1 goal H2, H4 : True H5 : _graduate _smith H1 : _university _smith x1 : Entity H7 : True H : _university x1 H8 : _graduate x1 x2 : Entity H9 : _make x1 x2 H10 : True H11 : _trader x2 H6 : _poor x2 H12 : _stock_dash_market x2 ============================ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) Toplevel input, characters 499-511: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 513-517: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) Toplevel input, characters 483-487: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1)) 1 goal H2 : _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) H3 : True x0 : Entity H5 : True H : _university x0 H6 : _graduate x0 x1 : Entity H7 : _make x0 x1 H8 : True H9 : _trader x1 H4 : _poor x1 H10 : _stock_dash_market x1 H12, H14 : True H15 : _graduate _smith H11 : _university _smith ============================ False Toplevel input, characters 505-517: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (not (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 519-523: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (not (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1)) Toplevel input, characters 489-493: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (not (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) 1 goal H2, H4 : True H5 : _graduate _smith H1 : _university _smith x1 : Entity H7 : True H : _university x1 H8 : _graduate x1 x2 : Entity H9 : _make x1 x2 H10 : True H11 : _trader x2 H6 : _poor x2 H12 : _stock_dash_market x2 ============================ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) Toplevel input, characters 499-511: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 513-517: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1)) 1 goal H2 : _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) H3 : True x0 : Entity H5 : True H : _university x0 H6 : _graduate x0 x1 : Entity H7 : _make x0 x1 H8 : True H9 : _trader x1 H4 : _poor x1 H10 : _stock_dash_market x1 H12, H14 : True H15 : _graduate _smith H11 : _university _smith ============================ False Toplevel input, characters 505-517: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (not (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 519-523: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (not (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) 1 goal H2, H4 : True H5 : _graduate _smith H1 : _university _smith x1 : Entity H7 : True H : _university x1 H8 : _graduate x1 x2 : Entity H9 : _make x1 x2 H10 : True H11 : _trader x2 H6 : _poor x2 H12 : _stock_dash_market x2 ============================ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) Toplevel input, characters 499-511: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 513-517: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _graduate is declared Coq < _make is declared Coq < _market is declared Coq < _poor is declared Coq < _smith is declared Coq < _stock is declared Coq < _stock_dash_market is declared Coq < _trader is declared Coq < _university is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, ((_university x /\ _graduate x) /\ True) /\ (exists z1 : Entity, (((_poor z1 /\ _stock_dash_market z1) /\ _trader z1) /\ True) /\ _make x z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _graduate z1) /\ True) /\ _smith = z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1)) 1 goal H2 : _will (exists z1 : Entity, ((((_poor z1 /\ _stock z1) /\ _market z1) /\ _trader z1) /\ True) /\ _make _smith z1) H3 : True x0 : Entity H5 : True H : _university x0 H6 : _graduate x0 x1 : Entity H7 : _make x0 x1 H8 : True H9 : _trader x1 H4 : _poor x1 H10 : _stock_dash_market x1 H12, H14 : True H15 : _graduate _smith H11 : _university _smith ============================ False Toplevel input, characters 505-517: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (not (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 519-523: > Theorem t1: (exists x, (and (and (and (_university x) (_graduate x)) True) (exists z1, (and (and (and (and (_poor z1) (_stock_dash_market z1)) (_trader z1)) True) (_make x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_university z1) (_graduate z1)) True) (_smith = z1))))) -> (not (exists x, (and (and (x = _smith) True) (_will (exists z1, (and (and (and (and (and (_poor z1) (_stock z1)) (_market z1)) (_trader z1)) True) (_make _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_103_plurals multi Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1)) Toplevel input, characters 400-404: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1) No more goals. Toplevel input, characters 406-423: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1)) 1 goal H : forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1 H3 : True x0 : Entity H4 : _have _jones x0 H5 : True H2 : _company x0 H6 : _car x0 H8, H10 : True H11 : _manager _jones H7 : _apcom _jones ============================ False Toplevel input, characters 416-428: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 430-434: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1)) Toplevel input, characters 400-404: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1) No more goals. Toplevel input, characters 406-423: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1)) 1 goal H : forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1 H3 : True x0 : Entity H4 : _have _jones x0 H5 : True H2 : _company x0 H6 : _car x0 H8, H10 : True H11 : _manager _jones H7 : _apcom _jones ============================ False Toplevel input, characters 416-428: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 430-434: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1) No more goals. Toplevel input, characters 406-423: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _car is declared Coq < _company is declared Coq < _have is declared Coq < _jones is declared Coq < _manager is declared Coq < 1 goal ============================ (forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _manager z1) /\ True) /\ _jones = z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have _jones z1)) 1 goal H : forall x : Entity, _apcom x /\ _manager x -> True -> exists z1 : Entity, ((_company z1 /\ _car z1) /\ True) /\ _have x z1 H3 : True x0 : Entity H4 : _have _jones x0 H5 : True H2 : _company x0 H6 : _car x0 H8, H10 : True H11 : _manager _jones H7 : _apcom _jones ============================ False Toplevel input, characters 416-428: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 430-434: > Theorem t1: (forall x, ((and (_apcom x) (_manager x)) -> (True -> (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_apcom z1) (_manager z1)) True) (_jones = z1))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_company z1) (_car z1)) True) (_have _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_104_plurals multi unknown
fracas_105_plurals single Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) Toplevel input, characters 266-270: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) 1 goal x : Entity H0 : _accountant x H1 : True x0 : Entity H3 : _attend x x0 H2 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 282-294: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 296-300: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) Toplevel input, characters 266-270: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Toplevel input, characters 284-301: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) 1 goal x : Entity H0 : _accountant x H1 : True x0 : Entity H3 : _attend x x0 H2 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 282-294: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 296-300: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Toplevel input, characters 284-301: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) 1 goal x : Entity H0 : _accountant x H1 : True x0 : Entity H3 : _attend x x0 H2 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 282-294: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 296-300: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Toplevel input, characters 284-301: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! unknown
fracas_106_plurals single Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) Toplevel input, characters 266-270: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) 1 goal x : Entity H0 : _accountant x H1 : True x0 : Entity H3 : _attend x x0 H2 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 282-294: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 296-300: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) Toplevel input, characters 266-270: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Toplevel input, characters 284-301: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) 1 goal x : Entity H0 : _accountant x H1 : True x0 : Entity H3 : _attend x x0 H2 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 282-294: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 296-300: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Toplevel input, characters 284-301: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) 1 goal x : Entity H0 : _accountant x H1 : True x0 : Entity H3 : _attend x x0 H2 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 282-294: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 296-300: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (forall x : Entity, _accountant x -> True -> ~ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) No more goals. Toplevel input, characters 284-301: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (forall x, ((_accountant x) -> (True -> (not (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! unknown
fracas_107_plurals single Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_108_plurals single Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_109_plurals single Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_110_plurals single Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1) No more goals. Toplevel input, characters 274-291: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accountant is declared Coq < _attend is declared Coq < _just is declared Coq < _meeting is declared Coq < _one is declared Coq < 1 goal ============================ (exists x : Entity, (((_just x /\ _one x) /\ _accountant x) /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) -> ~ (exists x : Entity, (_accountant x /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend x z1)) 1 goal x : Entity H0 : _accountant x H2 : True x0 : Entity H3 : _attend x x0 H1 : _meeting x0 H4 : True x1 : Entity H6 : True H7 : _accountant x1 H : _just x1 H8 : _one x1 x2 : Entity H9 : _attend x1 x2 H5 : _meeting x2 H10 : True ============================ False Toplevel input, characters 284-296: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (and (and (_just x) (_one x)) (_accountant x)) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1))))) -> (not (exists x, (and (and (_accountant x) True) (exists z1, (and (and (_meeting z1) True) (_attend x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_111_plurals multi Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _one is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_one z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) Toplevel input, characters 500-504: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_one z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _one is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_one z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) -> ~ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1))) Toplevel input, characters 506-510: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_one z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _one is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_one z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) 3 goals H2 : True x0 : Entity H3 : _sign _jones x0 H1 : _contract x0 H4, H6 : True x2 : Entity H7 : _sign _smith x2 H8 : True H5 : _one x2 H9 : _contract x2 ============================ _two x2 goal 2 is: _two x2 goal 3 is: _sign _jones x2 Toplevel input, characters 516-528: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_one z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 530-534: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_one z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_112_plurals multi Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> ~ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1))) Toplevel input, characters 522-526: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) No more goals. Toplevel input, characters 528-545: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> ~ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1))) 1 goal H4 : True x0 : Entity H5 : _sign _jones x0 H6 : True H3 : _two x0 H7 : _contract x0 H9 : True x2 : Entity H10 : _sign _jones x2 H11 : True H8 : _two x2 H12 : _contract x2 H14 : True x4 : Entity H15 : _sign _smith x4 H16 : True H13 : _two x4 H17 : _contract x4 H19 : True x6 : Entity H20 : _sign _smith x6 H21 : True H18 : _two x6 H22 : _contract x6 ============================ False Toplevel input, characters 538-550: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 552-556: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> ~ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1))) Toplevel input, characters 522-526: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) No more goals. Toplevel input, characters 528-545: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> ~ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1))) 1 goal H4 : True x0 : Entity H5 : _sign _jones x0 H6 : True H3 : _two x0 H7 : _contract x0 H9 : True x2 : Entity H10 : _sign _jones x2 H11 : True H8 : _two x2 H12 : _contract x2 H14 : True x4 : Entity H15 : _sign _smith x4 H16 : True H13 : _two x4 H17 : _contract x4 H19 : True x6 : Entity H20 : _sign _smith x6 H21 : True H18 : _two x6 H22 : _contract x6 ============================ False Toplevel input, characters 538-550: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 552-556: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) No more goals. Toplevel input, characters 528-545: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) -> ~ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1))) 1 goal H4 : True x0 : Entity H5 : _sign _jones x0 H6 : True H3 : _two x0 H7 : _contract x0 H9 : True x2 : Entity H10 : _sign _jones x2 H11 : True H8 : _two x2 H12 : _contract x2 H14 : True x4 : Entity H15 : _sign _smith x4 H16 : True H13 : _two x4 H17 : _contract x4 H19 : True x6 : Entity H20 : _sign _smith x6 H21 : True H18 : _two x6 H22 : _contract x6 ============================ False Toplevel input, characters 538-550: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 552-556: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_113_plurals multi Welcome to Coq 8.15.0 Coq < Coq < _also is declared Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, ((x = _jones /\ True) /\ _also _jones) /\ (exists z1 : Entity, True /\ _sign _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) Toplevel input, characters 500-504: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (and (x = _jones) True) (_also _jones)) (exists z1, (and True (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _also is declared Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, ((x = _jones /\ True) /\ _also _jones) /\ (exists z1 : Entity, True /\ _sign _jones z1)) -> ~ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1))) Toplevel input, characters 506-510: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (and (x = _jones) True) (_also _jones)) (exists z1, (and True (_sign _jones z1))))) -> (not (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _also is declared Coq < _contract is declared Coq < _jones is declared Coq < _sign is declared Coq < _smith is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) -> (exists x : Entity, ((x = _jones /\ True) /\ _also _jones) /\ (exists z1 : Entity, True /\ _sign _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, ((_two z1 /\ _contract z1) /\ True) /\ _sign _jones z1)) 1 goal H2 : _also _jones H3 : True x0 : Entity H1 : True H4 : _sign _jones x0 H6 : True x2 : Entity H7 : _sign _smith x2 H8 : True H5 : _two x2 H9 : _contract x2 ============================ _sign _jones x2 Toplevel input, characters 516-528: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (and (x = _jones) True) (_also _jones)) (exists z1, (and True (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 530-534: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (and (x = _jones) True) (_also _jones)) (exists z1, (and True (_sign _jones z1))))) -> (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (and (_two z1) (_contract z1)) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_114_nominal_anaphora single Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 152-157: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 159-163: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 158-163: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 165-169: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 152-158: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 171-174: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 189-193: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 152-157: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 159-163: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 158-164: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 177-180: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 195-199: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 158-163: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 165-169: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 152-158: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 171-174: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 189-193: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 158-164: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 177-180: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 195-199: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 152-158: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 171-174: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 189-193: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _her is declared Coq < _mary is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-84: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 158-164: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 177-180: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 195-199: > Theorem t1: (fun x => (and (and (and (_mary x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (and (_mary x) (_'s x)) True) (_use x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_115_nominal_anaphora single Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 199-204: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 206-210: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 205-210: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 212-216: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 199-205: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 218-221: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 236-240: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 199-204: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 206-210: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 205-211: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 224-227: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 242-246: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 205-210: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 212-216: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 199-205: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 218-221: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 236-240: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 205-211: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 224-227: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 242-246: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 199-205: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 218-221: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 236-240: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 205-211: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 224-227: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 242-246: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_116_nominal_anaphora single Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 150-155: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 157-161: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 156-161: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 163-167: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 150-156: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 169-172: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 187-191: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 150-155: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 157-161: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 156-162: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 175-178: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 193-197: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 156-161: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 163-167: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 150-156: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 169-172: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 187-191: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 156-162: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 175-178: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 193-197: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 150-156: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 169-172: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 187-191: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (exists x, (and (and (x = _mary) True) (_female _mary))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _female is declared Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _use is declared Coq < _workstation is declared Coq < Toplevel input, characters 13-87: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => ((_mary_e2 x /\ _use x) /\ _her x) /\ _workstation x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 156-162: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 175-178: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 193-197: > Theorem t1: (fun x => (and (and (and (_mary_e2 x) (_use x)) (_her x)) (_workstation x))) -> (not (exists x, (and (and (x = _mary) True) (_female _mary)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_117_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 300-305: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 307-311: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 306-311: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 313-317: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 300-306: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 319-322: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 337-341: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 300-305: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 307-311: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 306-312: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 325-328: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 343-347: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 306-311: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 313-317: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 300-306: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 319-322: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 337-341: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 306-312: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 325-328: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 343-347: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 300-306: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 319-322: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 337-341: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _her is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _student is declared Coq < _use is declared Coq < _use_e2 is declared Coq < _use_e3 is declared Coq < _workstation is declared Coq < Toplevel input, characters 208-210: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 306-312: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 325-328: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 343-347: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use_e3 x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (fun x => (and (and (and (_mary_e2 x) (_use_e2 x)) (_her x)) (_workstation x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_118_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1) Toplevel input, characters 330-334: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1)) Toplevel input, characters 336-340: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1) 2 focused goals (shelved: 1) H : forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1 H2 : True H1 : _student _mary H4 : True ============================ _workstation ?z1 goal 2 is: _have _mary ?z1 Toplevel input, characters 346-358: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 360-364: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1) Toplevel input, characters 330-334: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1)) 1 goal H : forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1 H3 : True x0 : Entity H4 : _have _mary x0 H2 : _workstation x0 H5, H7 : True H6 : _student _mary H9 : True ============================ False Toplevel input, characters 352-364: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 366-370: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1)) Toplevel input, characters 336-340: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1) 2 focused goals (shelved: 1) H : forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1 H2 : True H1 : _student _mary H4 : True ============================ _workstation ?z1 goal 2 is: _have _mary ?z1 Toplevel input, characters 346-358: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 360-364: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1)) 1 goal H : forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1 H3 : True x0 : Entity H4 : _have _mary x0 H2 : _workstation x0 H5, H7 : True H6 : _student _mary H9 : True ============================ False Toplevel input, characters 352-364: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 366-370: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1) 2 focused goals (shelved: 1) H : forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1 H2 : True H1 : _student _mary H4 : True ============================ _workstation ?z1 goal 2 is: _have _mary ?z1 Toplevel input, characters 346-358: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 360-364: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _have _mary z1)) 1 goal H : forall x : Entity, _student x -> True -> exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1 H3 : True x0 : Entity H4 : _have _mary x0 H2 : _workstation x0 H5, H7 : True H6 : _student _mary H9 : True ============================ False Toplevel input, characters 352-364: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 366-370: > Theorem t1: (forall x, ((_student x) -> (True -> (exists z1, (and (and (_workstation z1) True) (_use x z1)))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_have _mary z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_119_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1) Toplevel input, characters 335-339: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1) 2 focused goals (shelved: 1) H : forall x : Entity, _student x -> True -> (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> False H2 : True H1 : _student _mary H4 : True ============================ _workstation ?z1 goal 2 is: _use _mary ?z1 Toplevel input, characters 351-363: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 365-369: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1) Toplevel input, characters 335-339: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1)) No more goals. Toplevel input, characters 353-370: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1) 2 focused goals (shelved: 1) H : forall x : Entity, _student x -> True -> (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> False H2 : True H1 : _student _mary H4 : True ============================ _workstation ?z1 goal 2 is: _use _mary ?z1 Toplevel input, characters 351-363: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 365-369: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1)) No more goals. Toplevel input, characters 353-370: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1) 2 focused goals (shelved: 1) H : forall x : Entity, _student x -> True -> (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1) -> False H2 : True H1 : _student _mary H4 : True ============================ _workstation ?z1 goal 2 is: _use _mary ?z1 Toplevel input, characters 351-363: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 365-369: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _mary is declared Coq < _student is declared Coq < _use is declared Coq < _workstation is declared Coq < 1 goal ============================ (forall x : Entity, _student x -> True -> ~ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use x z1)) -> (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_student z1 /\ True) /\ _mary = z1)) -> ~ (exists x : Entity, (x = _mary /\ True) /\ (exists z1 : Entity, (_workstation z1 /\ True) /\ _use _mary z1)) No more goals. Toplevel input, characters 353-370: > Theorem t1: (forall x, ((_student x) -> (True -> (not (exists z1, (and (and (_workstation z1) True) (_use x z1))))))) -> (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_student z1) True) (_mary = z1))))) -> (not (exists x, (and (and (x = _mary) True) (exists z1, (and (and (_workstation z1) True) (_use _mary z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! unknown
fracas_120_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _attend is declared Coq < _chair is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend _smith z1)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _chair x z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _chair _smith z1) Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_attend _smith z1))))) -> (exists x, (and True (exists z1, (and True (_chair x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_chair _smith z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _attend is declared Coq < _chair is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend _smith z1)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _chair x z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _chair _smith z1)) Toplevel input, characters 304-308: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_attend _smith z1))))) -> (exists x, (and True (exists z1, (and True (_chair x z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_chair _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _attend is declared Coq < _chair is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _attend _smith z1)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _chair x z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _chair _smith z1) 1 goal x : Entity H0 : True x0 : Entity H1 : True H2 : _chair x x0 H4 : True x2 : Entity H5 : _attend _smith x2 H3 : _meeting x2 H6 : True ============================ _chair _smith x2 Toplevel input, characters 314-326: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_attend _smith z1))))) -> (exists x, (and True (exists z1, (and True (_chair x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_chair _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 328-332: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_attend _smith z1))))) -> (exists x, (and True (exists z1, (and True (_chair x z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_chair _smith z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_121_nominal_anaphora multi unknown
fracas_122_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5 Toplevel input, characters 459-463: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> ~ (forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5) Toplevel input, characters 465-469: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (not (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5 5 focused goals (shelved: 1) H : forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1 x : Entity H1 : _committee x H2 : True x0 : Entity H0 : True x1 : Entity H4 : _appoint_e3 x0 x1 H3 : _member x1 H5 : True ============================ _chairman ?z5 goal 2 is: _of x1 x goal 3 is: _by ?z5 x1 goal 4 is: _appoint_e2 ?z5 goal 5 is: _have x ?z5 Toplevel input, characters 475-487: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 489-493: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5 Toplevel input, characters 459-463: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> ~ (forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5) 1 goal H : forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1 H1 : forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5 x : Entity H0 : True x0 : Entity H3 : _appoint_e3 x x0 H2 : _member x0 H4 : True ============================ False Toplevel input, characters 481-493: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (not (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 495-499: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (not (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> ~ (forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5) Toplevel input, characters 465-469: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (not (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5 5 focused goals (shelved: 1) H : forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1 x : Entity H1 : _committee x H2 : True x0 : Entity H0 : True x1 : Entity H4 : _appoint_e3 x0 x1 H3 : _member x1 H5 : True ============================ _chairman ?z5 goal 2 is: _of x1 x goal 3 is: _by ?z5 x1 goal 4 is: _appoint_e2 ?z5 goal 5 is: _have x ?z5 Toplevel input, characters 475-487: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 489-493: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> ~ (forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5) 1 goal H : forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1 H1 : forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5 x : Entity H0 : True x0 : Entity H3 : _appoint_e3 x x0 H2 : _member x0 H4 : True ============================ False Toplevel input, characters 481-493: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (not (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 495-499: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (not (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5 5 focused goals (shelved: 1) H : forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1 x : Entity H1 : _committee x H2 : True x0 : Entity H0 : True x1 : Entity H4 : _appoint_e3 x0 x1 H3 : _member x1 H5 : True ============================ _chairman ?z5 goal 2 is: _of x1 x goal 3 is: _by ?z5 x1 goal 4 is: _appoint_e2 ?z5 goal 5 is: _have x ?z5 Toplevel input, characters 475-487: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 489-493: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _appoint is declared Coq < _appoint_e2 is declared Coq < _appoint_e3 is declared Coq < _by is declared Coq < _chairman is declared Coq < _committee is declared Coq < _have is declared Coq < _member is declared Coq < _of is declared Coq < 1 goal ============================ (forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z1 : Entity, (_member z1 /\ True) /\ _appoint_e3 x z1)) -> ~ (forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5) 1 goal H : forall x : Entity, _committee x -> True -> exists z1 : Entity, (_chairman z1 /\ True) /\ _have x z1 H1 : forall x : Entity, _committee x -> True -> exists z5 : Entity, ((_chairman z5 /\ (exists z2 : Entity, (((_member z2 /\ (exists z1 : Entity, (_committee z1 /\ True) /\ _of z2 z1)) /\ True) /\ _by z5 z2) /\ _appoint_e2 z5)) /\ True) /\ _have x z5 x : Entity H0 : True x0 : Entity H3 : _appoint_e3 x x0 H2 : _member x0 H4 : True ============================ False Toplevel input, characters 481-493: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (not (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 495-499: > Theorem t1: (forall x, ((_committee x) -> (True -> (exists z1, (and (and (_chairman z1) True) (_have x z1)))))) -> (exists x, (and True (exists z1, (and (and (_member z1) True) (_appoint_e3 x z1))))) -> (not (forall x, ((_committee x) -> (True -> (exists z5, (and (and (and (_chairman z5) (exists z2, (and (and (and (and (_member z2) (exists z1, (and (and (_committee z1) True) (_of z2 z1)))) True) (_by z5 z2)) (_appoint_e2 z5)))) True) (_have x z5))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_123_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 581-586: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 588-592: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 587-592: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 594-598: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 581-587: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 600-603: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 618-622: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 581-586: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 588-592: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 587-593: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 606-609: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 624-628: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 587-592: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 594-598: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 581-587: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 600-603: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 618-622: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 587-593: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 606-609: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 624-628: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 581-587: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 600-603: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 618-622: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _desk is declared Coq < _from is declared Coq < _have is declared Coq < _itel is declared Coq < _most is declared Coq < _need is declared Coq < _of is declared Coq < _on is declared Coq < _report is declared Coq < _send is declared Coq < _smith is declared Coq < Toplevel input, characters 79-222: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 587-593: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 606-609: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 624-628: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (_most (fun z3 => (and (exists z2, (and (and (and (_report z2) (exists z1, (and (and (z1 = _smith) True) (_need _smith z2)))) True) (_of z3 z2))) True)) (fun y => (_send _itel y))))) -> (exists x, (and True (exists z1, (and (and (_desk z1) True) (_on x z1))))) -> (not (exists x z4, (and (and (and (and (_report z4) (exists z1, (and (and (z1 = _itel) True) (_from z4 _itel)))) (exists z3, (and (and (and (exists z2, (and (and (z2 = _smith) True) (Rel z3 _smith))) (_desk z3)) True) (_on z4 z3)))) True) (x = z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_124_nominal_anaphora multi unknown
fracas_125_nominal_anaphora multi unknown
fracas_126_nominal_anaphora multi unknown
fracas_127_nominal_anaphora multi unknown
fracas_128_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _colleague is declared Coq < _go is declared Coq < _hate is declared Coq < _john is declared Coq < _meeting is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to _john z1) /\ _go _john)) /\ (exists x : Entity, (_colleague x /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to x z1) /\ _go x)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _hate x z1)) -> exists x : Entity, (((exists z1 : Entity, (z1 = _john /\ True) /\ Rel x _john) /\ _colleague x) /\ True) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _hate x z2) Toplevel input, characters 487-491: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (exists x, (and (and (and (exists z1, (and (and (z1 = _john) True) (Rel x _john))) (_colleague x)) True) (exists z2, (and (and (_meeting z2) True) (_hate x z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _colleague is declared Coq < _go is declared Coq < _hate is declared Coq < _john is declared Coq < _meeting is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to _john z1) /\ _go _john)) /\ (exists x : Entity, (_colleague x /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to x z1) /\ _go x)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _hate x z1)) -> ~ (exists x : Entity, (((exists z1 : Entity, (z1 = _john /\ True) /\ Rel x _john) /\ _colleague x) /\ True) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _hate x z2)) Toplevel input, characters 493-497: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (not (exists x, (and (and (and (exists z1, (and (and (z1 = _john) True) (Rel x _john))) (_colleague x)) True) (exists z2, (and (and (_meeting z2) True) (_hate x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _colleague is declared Coq < _go is declared Coq < _hate is declared Coq < _john is declared Coq < _meeting is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to _john z1) /\ _go _john)) /\ (exists x : Entity, (_colleague x /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to x z1) /\ _go x)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _hate x z1)) -> exists x : Entity, (((exists z1 : Entity, (z1 = _john /\ True) /\ Rel x _john) /\ _colleague x) /\ True) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _hate x z2) 2 goals x : Entity H : _colleague x H3 : True x0 : Entity H4 : _go x H5 : _to x x0 H2 : _meeting x0 H6 : True x1 : Entity H0 : True x2 : Entity H7 : True H8 : _hate x1 x2 H10 : True x4 : Entity H11 : _go _john H12 : _to _john x4 H9 : _meeting x4 H13 : True ============================ Rel x _john goal 2 is: _hate x x4 Toplevel input, characters 503-515: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (exists x, (and (and (and (exists z1, (and (and (z1 = _john) True) (Rel x _john))) (_colleague x)) True) (exists z2, (and (and (_meeting z2) True) (_hate x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 517-521: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (exists x, (and (and (and (exists z1, (and (and (z1 = _john) True) (Rel x _john))) (_colleague x)) True) (exists z2, (and (and (_meeting z2) True) (_hate x z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_129_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _colleague is declared Coq < _go is declared Coq < _hate is declared Coq < _john is declared Coq < _meeting is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to _john z1) /\ _go _john)) /\ (exists x : Entity, (_colleague x /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to x z1) /\ _go x)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _hate x z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _hate _john z1) Toplevel input, characters 425-429: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_meeting z1) True) (_hate _john z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _colleague is declared Coq < _go is declared Coq < _hate is declared Coq < _john is declared Coq < _meeting is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to _john z1) /\ _go _john)) /\ (exists x : Entity, (_colleague x /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to x z1) /\ _go x)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _hate x z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _hate _john z1)) Toplevel input, characters 431-435: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_meeting z1) True) (_hate _john z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _colleague is declared Coq < _go is declared Coq < _hate is declared Coq < _john is declared Coq < _meeting is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to _john z1) /\ _go _john)) /\ (exists x : Entity, (_colleague x /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to x z1) /\ _go x)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _hate x z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _hate _john z1) 1 goal x : Entity H : _colleague x H3 : True x0 : Entity H4 : _go x H5 : _to x x0 H2 : _meeting x0 H6 : True x1 : Entity H0 : True x2 : Entity H7 : True H8 : _hate x1 x2 H10 : True x4 : Entity H11 : _go _john H12 : _to _john x4 H9 : _meeting x4 H13 : True ============================ _hate _john x4 Toplevel input, characters 441-453: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_meeting z1) True) (_hate _john z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 455-459: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_meeting z1) True) (_hate _john z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_130_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _colleague is declared Coq < _go is declared Coq < _hate is declared Coq < _john is declared Coq < _meeting is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to _john z1) /\ _go _john)) /\ (exists x : Entity, (_colleague x /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to x z1) /\ _go x)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _hate x z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _hate _john z1) Toplevel input, characters 425-429: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_meeting z1) True) (_hate _john z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _colleague is declared Coq < _go is declared Coq < _hate is declared Coq < _john is declared Coq < _meeting is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to _john z1) /\ _go _john)) /\ (exists x : Entity, (_colleague x /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to x z1) /\ _go x)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _hate x z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _hate _john z1)) Toplevel input, characters 431-435: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_meeting z1) True) (_hate _john z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _colleague is declared Coq < _go is declared Coq < _hate is declared Coq < _john is declared Coq < _meeting is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to _john z1) /\ _go _john)) /\ (exists x : Entity, (_colleague x /\ True) /\ (exists z1 : Entity, ((_meeting z1 /\ True) /\ _to x z1) /\ _go x)) -> (exists x : Entity, True /\ (exists z1 : Entity, True /\ _hate x z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _hate _john z1) 1 goal x : Entity H : _colleague x H3 : True x0 : Entity H4 : _go x H5 : _to x x0 H2 : _meeting x0 H6 : True x1 : Entity H0 : True x2 : Entity H7 : True H8 : _hate x1 x2 H10 : True x4 : Entity H11 : _go _john H12 : _to _john x4 H9 : _meeting x4 H13 : True ============================ _hate _john x4 Toplevel input, characters 441-453: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_meeting z1) True) (_hate _john z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 455-459: > Theorem t1: (and (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_meeting z1) True) (_to _john z1)) (_go _john))))) (exists x, (and (and (_colleague x) True) (exists z1, (and (and (and (_meeting z1) True) (_to x z1)) (_go x)))))) -> (exists x, (and True (exists z1, (and True (_hate x z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_meeting z1) True) (_hate _john z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_131_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _bt is declared Coq < _dedicated is declared Coq < _department is declared Coq < _from is declared Coq < _have is declared Coq < _line is declared Coq < _rend is declared Coq < _rent is declared Coq < 1 goal ============================ (forall x : Entity, _department x -> True -> exists z1 : Entity, ((_dedicated z1 /\ _line z1) /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z2 : Entity, ((z2 = _bt /\ True) /\ _from x _bt) /\ (exists z1 : Entity, True /\ _rend x z1))) -> forall x : Entity, _department x -> True -> exists z2 : Entity, ((_line z2 /\ (exists z1 : Entity, (z1 = _bt /\ True) /\ _from z2 _bt)) /\ True) /\ _rent x z2 Toplevel input, characters 425-429: > Theorem t1: (forall x, ((_department x) -> (True -> (exists z1, (and (and (and (_dedicated z1) (_line z1)) True) (_have x z1)))))) -> (exists x, (and True (exists z2, (and (and (and (z2 = _bt) True) (_from x _bt)) (exists z1, (and True (_rend x z1))))))) -> (forall x, ((_department x) -> (True -> (exists z2, (and (and (and (_line z2) (exists z1, (and (and (z1 = _bt) True) (_from z2 _bt)))) True) (_rent x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bt is declared Coq < _dedicated is declared Coq < _department is declared Coq < _from is declared Coq < _have is declared Coq < _line is declared Coq < _rend is declared Coq < _rent is declared Coq < 1 goal ============================ (forall x : Entity, _department x -> True -> exists z1 : Entity, ((_dedicated z1 /\ _line z1) /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z2 : Entity, ((z2 = _bt /\ True) /\ _from x _bt) /\ (exists z1 : Entity, True /\ _rend x z1))) -> ~ (forall x : Entity, _department x -> True -> exists z2 : Entity, ((_line z2 /\ (exists z1 : Entity, (z1 = _bt /\ True) /\ _from z2 _bt)) /\ True) /\ _rent x z2) Toplevel input, characters 431-435: > Theorem t1: (forall x, ((_department x) -> (True -> (exists z1, (and (and (and (_dedicated z1) (_line z1)) True) (_have x z1)))))) -> (exists x, (and True (exists z2, (and (and (and (z2 = _bt) True) (_from x _bt)) (exists z1, (and True (_rend x z1))))))) -> (not (forall x, ((_department x) -> (True -> (exists z2, (and (and (and (_line z2) (exists z1, (and (and (z1 = _bt) True) (_from z2 _bt)))) True) (_rent x z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bt is declared Coq < _dedicated is declared Coq < _department is declared Coq < _from is declared Coq < _have is declared Coq < _line is declared Coq < _rend is declared Coq < _rent is declared Coq < 1 goal ============================ (forall x : Entity, _department x -> True -> exists z1 : Entity, ((_dedicated z1 /\ _line z1) /\ True) /\ _have x z1) -> (exists x : Entity, True /\ (exists z2 : Entity, ((z2 = _bt /\ True) /\ _from x _bt) /\ (exists z1 : Entity, True /\ _rend x z1))) -> forall x : Entity, _department x -> True -> exists z2 : Entity, ((_line z2 /\ (exists z1 : Entity, (z1 = _bt /\ True) /\ _from z2 _bt)) /\ True) /\ _rent x z2 2 goals H : forall x : Entity, _department x -> True -> exists z1 : Entity, ((_dedicated z1 /\ _line z1) /\ True) /\ _have x z1 x : Entity H1 : _department x H2 : True x0 : Entity H0 : True H5 : _from x0 _bt H6 : True x2 : Entity H4 : True H7 : _rend x0 x2 ============================ _line x0 goal 2 is: _rent x x0 Toplevel input, characters 441-453: > Theorem t1: (forall x, ((_department x) -> (True -> (exists z1, (and (and (and (_dedicated z1) (_line z1)) True) (_have x z1)))))) -> (exists x, (and True (exists z2, (and (and (and (z2 = _bt) True) (_from x _bt)) (exists z1, (and True (_rend x z1))))))) -> (forall x, ((_department x) -> (True -> (exists z2, (and (and (and (_line z2) (exists z1, (and (and (z1 = _bt) True) (_from z2 _bt)))) True) (_rent x z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 455-459: > Theorem t1: (forall x, ((_department x) -> (True -> (exists z1, (and (and (and (_dedicated z1) (_line z1)) True) (_have x z1)))))) -> (exists x, (and True (exists z2, (and (and (and (z2 = _bt) True) (_from x _bt)) (exists z1, (and True (_rend x z1))))))) -> (forall x, ((_department x) -> (True -> (exists z2, (and (and (and (_line z2) (exists z1, (and (and (z1 = _bt) True) (_from z2 _bt)))) True) (_rent x z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_132_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _bt is declared Coq < _dedicated is declared Coq < _department is declared Coq < _from is declared Coq < _have is declared Coq < _line is declared Coq < _rent is declared Coq < _sale is declared Coq < 1 goal ============================ (forall x : Entity, _department x -> True -> exists z1 : Entity, ((_dedicated z1 /\ _line z1) /\ True) /\ _have x z1) -> (exists x : Entity, ((_sale x /\ _department x) /\ True) /\ (exists z2 : Entity, ((z2 = _bt /\ True) /\ _from x _bt) /\ (exists z1 : Entity, True /\ _rent x z1))) -> exists x : Entity, ((_sale x /\ _department x) /\ True) /\ (exists z2 : Entity, ((_line z2 /\ (exists z1 : Entity, (z1 = _bt /\ True) /\ _from z2 _bt)) /\ True) /\ _rent x z2) Toplevel input, characters 481-485: > Theorem t1: (forall x, ((_department x) -> (True -> (exists z1, (and (and (and (_dedicated z1) (_line z1)) True) (_have x z1)))))) -> (exists x, (and (and (and (_sale x) (_department x)) True) (exists z2, (and (and (and (z2 = _bt) True) (_from x _bt)) (exists z1, (and True (_rent x z1))))))) -> (exists x, (and (and (and (_sale x) (_department x)) True) (exists z2, (and (and (and (_line z2) (exists z1, (and (and (z1 = _bt) True) (_from z2 _bt)))) True) (_rent x z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bt is declared Coq < _dedicated is declared Coq < _department is declared Coq < _from is declared Coq < _have is declared Coq < _line is declared Coq < _rent is declared Coq < _sale is declared Coq < 1 goal ============================ (forall x : Entity, _department x -> True -> exists z1 : Entity, ((_dedicated z1 /\ _line z1) /\ True) /\ _have x z1) -> (exists x : Entity, ((_sale x /\ _department x) /\ True) /\ (exists z2 : Entity, ((z2 = _bt /\ True) /\ _from x _bt) /\ (exists z1 : Entity, True /\ _rent x z1))) -> ~ (exists x : Entity, ((_sale x /\ _department x) /\ True) /\ (exists z2 : Entity, ((_line z2 /\ (exists z1 : Entity, (z1 = _bt /\ True) /\ _from z2 _bt)) /\ True) /\ _rent x z2)) Toplevel input, characters 487-491: > Theorem t1: (forall x, ((_department x) -> (True -> (exists z1, (and (and (and (_dedicated z1) (_line z1)) True) (_have x z1)))))) -> (exists x, (and (and (and (_sale x) (_department x)) True) (exists z2, (and (and (and (z2 = _bt) True) (_from x _bt)) (exists z1, (and True (_rent x z1))))))) -> (not (exists x, (and (and (and (_sale x) (_department x)) True) (exists z2, (and (and (and (_line z2) (exists z1, (and (and (z1 = _bt) True) (_from z2 _bt)))) True) (_rent x z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bt is declared Coq < _dedicated is declared Coq < _department is declared Coq < _from is declared Coq < _have is declared Coq < _line is declared Coq < _rent is declared Coq < _sale is declared Coq < 1 goal ============================ (forall x : Entity, _department x -> True -> exists z1 : Entity, ((_dedicated z1 /\ _line z1) /\ True) /\ _have x z1) -> (exists x : Entity, ((_sale x /\ _department x) /\ True) /\ (exists z2 : Entity, ((z2 = _bt /\ True) /\ _from x _bt) /\ (exists z1 : Entity, True /\ _rent x z1))) -> exists x : Entity, ((_sale x /\ _department x) /\ True) /\ (exists z2 : Entity, ((_line z2 /\ (exists z1 : Entity, (z1 = _bt /\ True) /\ _from z2 _bt)) /\ True) /\ _rent x z2) 2 goals H : forall x : Entity, _department x -> True -> exists z1 : Entity, ((_dedicated z1 /\ _line z1) /\ True) /\ _have x z1 x : Entity H2 : True H0 : _sale x H3 : _department x H5 : _from x _bt H6 : True x1 : Entity H4 : True H7 : _rent x x1 ============================ _line x goal 2 is: _rent x x Toplevel input, characters 497-509: > Theorem t1: (forall x, ((_department x) -> (True -> (exists z1, (and (and (and (_dedicated z1) (_line z1)) True) (_have x z1)))))) -> (exists x, (and (and (and (_sale x) (_department x)) True) (exists z2, (and (and (and (z2 = _bt) True) (_from x _bt)) (exists z1, (and True (_rent x z1))))))) -> (exists x, (and (and (and (_sale x) (_department x)) True) (exists z2, (and (and (and (_line z2) (exists z1, (and (and (z1 = _bt) True) (_from z2 _bt)))) True) (_rent x z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 511-515: > Theorem t1: (forall x, ((_department x) -> (True -> (exists z1, (and (and (and (_dedicated z1) (_line z1)) True) (_have x z1)))))) -> (exists x, (and (and (and (_sale x) (_department x)) True) (exists z2, (and (and (and (z2 = _bt) True) (_from x _bt)) (exists z1, (and True (_rent x z1))))))) -> (exists x, (and (and (and (_sale x) (_department x)) True) (exists z2, (and (and (and (_line z2) (exists z1, (and (and (z1 = _bt) True) (_from z2 _bt)))) True) (_rent x z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_133_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3) Toplevel input, characters 441-445: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3)) Toplevel input, characters 447-451: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (not (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3) 1 goal H2 : True x0 : Entity H1 : True H3 : _maintain _itel x0 H5 : True x2 : Entity H6 : _own _gfi x2 H7 : True H4 : _several x2 H8 : _computer x2 x : Entity H0 : True H : _computer x H11 : True H12 : _own _gfi x H13 : True ============================ _maintain _itel x Toplevel input, characters 457-469: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 471-475: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3) Toplevel input, characters 441-445: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3)) 1 goal H2 : forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3 H3, H5 : True x1 : Entity H4 : True H6 : _maintain _itel x1 H8 : True x3 : Entity H9 : _own _gfi x3 H10 : True H7 : _several x3 H11 : _computer x3 ============================ False Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (not (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (not (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3)) Toplevel input, characters 447-451: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (not (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3) 1 goal H2 : True x0 : Entity H1 : True H3 : _maintain _itel x0 H5 : True x2 : Entity H6 : _own _gfi x2 H7 : True H4 : _several x2 H8 : _computer x2 x : Entity H0 : True H : _computer x H11 : True H12 : _own _gfi x H13 : True ============================ _maintain _itel x Toplevel input, characters 457-469: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 471-475: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3)) 1 goal H2 : forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3 H3, H5 : True x1 : Entity H4 : True H6 : _maintain _itel x1 H8 : True x3 : Entity H9 : _own _gfi x3 H10 : True H7 : _several x3 H11 : _computer x3 ============================ False Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (not (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (not (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3) 1 goal H2 : True x0 : Entity H1 : True H3 : _maintain _itel x0 H5 : True x2 : Entity H6 : _own _gfi x2 H7 : True H4 : _several x2 H8 : _computer x2 x : Entity H0 : True H : _computer x H11 : True H12 : _own _gfi x H13 : True ============================ _maintain _itel x Toplevel input, characters 457-469: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 471-475: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _gfi is declared Coq < _itel is declared Coq < _maintain is declared Coq < _own is declared Coq < _several is declared Coq < 1 goal ============================ (exists x : Entity, (x = _gfi /\ True) /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own _gfi z1)) -> (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, True /\ _maintain _itel z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3)) 1 goal H2 : forall z3 : Entity, (exists z1 : Entity, (((_computer z1 /\ True) /\ z3 = z1) /\ (exists z2 : Entity, (z2 = _gfi /\ True) /\ _own _gfi z1)) /\ True) -> _maintain _itel z3 H3, H5 : True x1 : Entity H4 : True H6 : _maintain _itel x1 H8 : True x3 : Entity H9 : _own _gfi x3 H10 : True H7 : _several x3 H11 : _computer x3 ============================ False Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (not (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (x = _gfi) True) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own _gfi z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and True (_maintain _itel z1))))) -> (not (exists x, (and (and (x = _itel) True) (forall z3, ((exists z1, (and (and (and (and (_computer z1) True) (z3 = z1)) (exists z2, (and (and (z2 = _gfi) True) (_own _gfi z1)))) True)) -> (_maintain _itel z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_134_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) Toplevel input, characters 672-676: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) Toplevel input, characters 678-682: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) 4 focused goals (shelved: 1) H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H2, H4 : True H6 : _exactly _mfi H1 : _customer _mfi x1 : Entity H7 : _own _mfi x1 H8 : True H5 : _one x1 H9 : _computer x1 ============================ _service ?z3 goal 2 is: _contract ?z3 goal 3 is: _for ?z3 x goal 4 is: _have _mfi ?z3 Toplevel input, characters 688-700: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 702-706: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) Toplevel input, characters 672-676: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) 1 goal H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H3 : True x0 : Entity H4 : _have _mfi x0 H5 : True H6 : forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for x0 z2 H2 : _service x0 H7 : _contract x0 H9, H11 : True H13 : _exactly _mfi H8 : _customer _mfi x3 : Entity H14 : _own _mfi x3 H15 : True H12 : _one x3 H16 : _computer x3 ============================ False Toplevel input, characters 694-706: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 708-712: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) Toplevel input, characters 678-682: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) 4 focused goals (shelved: 1) H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H2, H4 : True H6 : _exactly _mfi H1 : _customer _mfi x1 : Entity H7 : _own _mfi x1 H8 : True H5 : _one x1 H9 : _computer x1 ============================ _service ?z3 goal 2 is: _contract ?z3 goal 3 is: _for ?z3 x goal 4 is: _have _mfi ?z3 Toplevel input, characters 688-700: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 702-706: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) 1 goal H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H3 : True x0 : Entity H4 : _have _mfi x0 H5 : True H6 : forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for x0 z2 H2 : _service x0 H7 : _contract x0 H9, H11 : True H13 : _exactly _mfi H8 : _customer _mfi x3 : Entity H14 : _own _mfi x3 H15 : True H12 : _one x3 H16 : _computer x3 ============================ False Toplevel input, characters 694-706: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 708-712: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) 4 focused goals (shelved: 1) H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H2, H4 : True H6 : _exactly _mfi H1 : _customer _mfi x1 : Entity H7 : _own _mfi x1 H8 : True H5 : _one x1 H9 : _computer x1 ============================ _service ?z3 goal 2 is: _contract ?z3 goal 3 is: _for ?z3 x goal 4 is: _have _mfi ?z3 Toplevel input, characters 688-700: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 702-706: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _exactly is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _one is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z4 : Entity, (((_customer z4 /\ _exactly z4) /\ (exists z2 : Entity, ((_one z2 /\ _computer z2) /\ True) /\ _own z4 z2)) /\ True) /\ _mfi = z4)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) 1 goal H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H3 : True x0 : Entity H4 : _have _mfi x0 H5 : True H6 : forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for x0 z2 H2 : _service x0 H7 : _contract x0 H9, H11 : True H13 : _exactly _mfi H8 : _customer _mfi x3 : Entity H14 : _own _mfi x3 H15 : True H12 : _one x3 H16 : _computer x3 ============================ False Toplevel input, characters 694-706: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 708-712: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z4, (and (and (and (and (_customer z4) (_exactly z4)) (exists z2, (and (and (and (_one z2) (_computer z2)) True) (_own z4 z2)))) True) (_mfi = z4))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_135_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) Toplevel input, characters 656-660: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) Toplevel input, characters 662-666: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) 4 focused goals (shelved: 1) H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H2, H4 : True H1 : _customer _mfi x1 : Entity H6 : _own _mfi x1 H7 : True H5 : _several x1 H8 : _computer x1 ============================ _service ?z3 goal 2 is: _contract ?z3 goal 3 is: _for ?z3 x goal 4 is: _have _mfi ?z3 Toplevel input, characters 672-684: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 686-690: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) Toplevel input, characters 656-660: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) 1 goal H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H3 : True x0 : Entity H4 : _have _mfi x0 H5 : True H6 : forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for x0 z2 H2 : _service x0 H7 : _contract x0 H9, H11 : True H8 : _customer _mfi x3 : Entity H13 : _own _mfi x3 H14 : True H12 : _several x3 H15 : _computer x3 ============================ False Toplevel input, characters 678-690: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 692-696: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) Toplevel input, characters 662-666: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) 4 focused goals (shelved: 1) H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H2, H4 : True H1 : _customer _mfi x1 : Entity H6 : _own _mfi x1 H7 : True H5 : _several x1 H8 : _computer x1 ============================ _service ?z3 goal 2 is: _contract ?z3 goal 3 is: _for ?z3 x goal 4 is: _have _mfi ?z3 Toplevel input, characters 672-684: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 686-690: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) 1 goal H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H3 : True x0 : Entity H4 : _have _mfi x0 H5 : True H6 : forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for x0 z2 H2 : _service x0 H7 : _contract x0 H9, H11 : True H8 : _customer _mfi x3 : Entity H13 : _own _mfi x3 H14 : True H12 : _several x3 H15 : _computer x3 ============================ False Toplevel input, characters 678-690: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 692-696: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3) 4 focused goals (shelved: 1) H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H2, H4 : True H1 : _customer _mfi x1 : Entity H6 : _own _mfi x1 H7 : True H5 : _several x1 H8 : _computer x1 ============================ _service ?z3 goal 2 is: _contract ?z3 goal 3 is: _for ?z3 x goal 4 is: _have _mfi ?z3 Toplevel input, characters 672-684: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 686-690: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _contract is declared Coq < _customer is declared Coq < _for is declared Coq < _have is declared Coq < _mfi is declared Coq < _own is declared Coq < _service is declared Coq < _several is declared Coq < 1 goal ============================ (forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4) -> (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, ((_customer z3 /\ (exists z1 : Entity, ((_several z1 /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _mfi = z3)) -> ~ (exists x : Entity, (x = _mfi /\ True) /\ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for z3 z2)) /\ True) /\ _have _mfi z3)) 1 goal H : forall x : Entity, _customer x -> (exists z1 : Entity, (_computer z1 /\ True) /\ _own x z1) /\ True -> exists z4 : Entity, (((_service z4 /\ _contract z4) /\ (exists z3 : Entity, True /\ _for z4 z3)) /\ True) /\ _have x z4 H3 : True x0 : Entity H4 : _have _mfi x0 H5 : True H6 : forall z2 : Entity, (exists z1 : Entity, ((_computer z1 /\ True) /\ z2 = z1) /\ True) -> _for x0 z2 H2 : _service x0 H7 : _contract x0 H9, H11 : True H8 : _customer _mfi x3 : Entity H13 : _own _mfi x3 H14 : True H12 : _several x3 H15 : _computer x3 ============================ False Toplevel input, characters 678-690: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 692-696: > Theorem t1: (forall x, ((_customer x) -> ((and (exists z1, (and (and (_computer z1) True) (_own x z1))) True) -> (exists z4, (and (and (and (and (_service z4) (_contract z4)) (exists z3, (and True (_for z4 z3)))) True) (_have x z4)))))) -> (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (_customer z3) (exists z1, (and (and (and (_several z1) (_computer z1)) True) (_own z3 z1)))) True) (_mfi = z3))))) -> (not (exists x, (and (and (x = _mfi) True) (exists z3, (and (and (and (and (_service z3) (_contract z3)) (forall z2, ((exists z1, (and (and (and (_computer z1) True) (z2 = z1)) True)) -> (_for z3 z2)))) True) (_have _mfi z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_136_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _bring is declared Coq < _computer is declared Coq < _different is declared Coq < _executive is declared Coq < _five is declared Coq < _have is declared Coq < _laptop is declared Coq < _meeting is declared Coq < _note is declared Coq < _own is declared Coq < _smith is declared Coq < _take is declared Coq < _to is declared Coq < 1 goal ============================ (forall x : Entity, _executive x -> (exists z1 : Entity, ((_laptop z1 /\ _computer z1) /\ True) /\ _have x z1) /\ True -> _bring x (exists x0 : Entity, True /\ (exists z4 : Entity, ((_meeting z4 /\ True) /\ _at x0 z4) /\ (exists z3 : Entity, (_note z3 /\ True) /\ _take x0 z3)))) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_executive z3 /\ (exists z1 : Entity, ((((_five z1 /\ _different z1) /\ _laptop z1) /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _smith = z3)) -> exists x : Entity, ((x = _smith /\ True) /\ (exists z1 : Entity, (((_five z1 /\ _laptop z1) /\ _computer z1) /\ True) /\ _take _smith z1)) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _to _smith z2) Toplevel input, characters 731-735: > Theorem t1: (forall x, ((_executive x) -> ((and (exists z1, (and (and (and (_laptop z1) (_computer z1)) True) (_have x z1))) True) -> (_bring x (exists x, (and True (exists z4, (and (and (and (_meeting z4) True) (_at x z4)) (exists z3, (and (and (_note z3) True) (_take x z3))))))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_executive z3) (exists z1, (and (and (and (and (and (_five z1) (_different z1)) (_laptop z1)) (_computer z1)) True) (_own z3 z1)))) True) (_smith = z3))))) -> (exists x, (and (and (and (x = _smith) True) (exists z1, (and (and (and (and (_five z1) (_laptop z1)) (_computer z1)) True) (_take _smith z1)))) (exists z2, (and (and (_meeting z2) True) (_to _smith z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _bring is declared Coq < _computer is declared Coq < _different is declared Coq < _executive is declared Coq < _five is declared Coq < _have is declared Coq < _laptop is declared Coq < _meeting is declared Coq < _note is declared Coq < _own is declared Coq < _smith is declared Coq < _take is declared Coq < _to is declared Coq < 1 goal ============================ (forall x : Entity, _executive x -> (exists z1 : Entity, ((_laptop z1 /\ _computer z1) /\ True) /\ _have x z1) /\ True -> _bring x (exists x0 : Entity, True /\ (exists z4 : Entity, ((_meeting z4 /\ True) /\ _at x0 z4) /\ (exists z3 : Entity, (_note z3 /\ True) /\ _take x0 z3)))) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_executive z3 /\ (exists z1 : Entity, ((((_five z1 /\ _different z1) /\ _laptop z1) /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _smith = z3)) -> ~ (exists x : Entity, ((x = _smith /\ True) /\ (exists z1 : Entity, (((_five z1 /\ _laptop z1) /\ _computer z1) /\ True) /\ _take _smith z1)) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _to _smith z2)) Toplevel input, characters 737-741: > Theorem t1: (forall x, ((_executive x) -> ((and (exists z1, (and (and (and (_laptop z1) (_computer z1)) True) (_have x z1))) True) -> (_bring x (exists x, (and True (exists z4, (and (and (and (_meeting z4) True) (_at x z4)) (exists z3, (and (and (_note z3) True) (_take x z3))))))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_executive z3) (exists z1, (and (and (and (and (and (_five z1) (_different z1)) (_laptop z1)) (_computer z1)) True) (_own z3 z1)))) True) (_smith = z3))))) -> (not (exists x, (and (and (and (x = _smith) True) (exists z1, (and (and (and (and (_five z1) (_laptop z1)) (_computer z1)) True) (_take _smith z1)))) (exists z2, (and (and (_meeting z2) True) (_to _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _bring is declared Coq < _computer is declared Coq < _different is declared Coq < _executive is declared Coq < _five is declared Coq < _have is declared Coq < _laptop is declared Coq < _meeting is declared Coq < _note is declared Coq < _own is declared Coq < _smith is declared Coq < _take is declared Coq < _to is declared Coq < 1 goal ============================ (forall x : Entity, _executive x -> (exists z1 : Entity, ((_laptop z1 /\ _computer z1) /\ True) /\ _have x z1) /\ True -> _bring x (exists x0 : Entity, True /\ (exists z4 : Entity, ((_meeting z4 /\ True) /\ _at x0 z4) /\ (exists z3 : Entity, (_note z3 /\ True) /\ _take x0 z3)))) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_executive z3 /\ (exists z1 : Entity, ((((_five z1 /\ _different z1) /\ _laptop z1) /\ _computer z1) /\ True) /\ _own z3 z1)) /\ True) /\ _smith = z3)) -> exists x : Entity, ((x = _smith /\ True) /\ (exists z1 : Entity, (((_five z1 /\ _laptop z1) /\ _computer z1) /\ True) /\ _take _smith z1)) /\ (exists z2 : Entity, (_meeting z2 /\ True) /\ _to _smith z2) 3 focused goals (shelved: 1) H : forall x : Entity, _executive x -> (exists z1 : Entity, ((_laptop z1 /\ _computer z1) /\ True) /\ _have x z1) /\ True -> _bring x (exists x0 : Entity, True /\ (exists z4 : Entity, ((_meeting z4 /\ True) /\ _at x0 z4) /\ (exists z3 : Entity, (_note z3 /\ True) /\ _take x0 z3))) H2, H4 : True H1 : _executive _smith x1 : Entity H6 : _own _smith x1 H7 : True H8 : _computer x1 H9 : _laptop x1 H5 : _five x1 H10 : _different x1 ============================ _take _smith x1 goal 2 is: _meeting ?z2 goal 3 is: _to _smith ?z2 Toplevel input, characters 747-759: > Theorem t1: (forall x, ((_executive x) -> ((and (exists z1, (and (and (and (_laptop z1) (_computer z1)) True) (_have x z1))) True) -> (_bring x (exists x, (and True (exists z4, (and (and (and (_meeting z4) True) (_at x z4)) (exists z3, (and (and (_note z3) True) (_take x z3))))))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_executive z3) (exists z1, (and (and (and (and (and (_five z1) (_different z1)) (_laptop z1)) (_computer z1)) True) (_own z3 z1)))) True) (_smith = z3))))) -> (exists x, (and (and (and (x = _smith) True) (exists z1, (and (and (and (and (_five z1) (_laptop z1)) (_computer z1)) True) (_take _smith z1)))) (exists z2, (and (and (_meeting z2) True) (_to _smith z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 761-765: > Theorem t1: (forall x, ((_executive x) -> ((and (exists z1, (and (and (and (_laptop z1) (_computer z1)) True) (_have x z1))) True) -> (_bring x (exists x, (and True (exists z4, (and (and (and (_meeting z4) True) (_at x z4)) (exists z3, (and (and (_note z3) True) (_take x z3))))))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_executive z3) (exists z1, (and (and (and (and (and (_five z1) (_different z1)) (_laptop z1)) (_computer z1)) True) (_own z3 z1)))) True) (_smith = z3))))) -> (exists x, (and (and (and (x = _smith) True) (exists z1, (and (and (and (and (_five z1) (_laptop z1)) (_computer z1)) True) (_take _smith z1)))) (exists z2, (and (and (_meeting z2) True) (_to _smith z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_137_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) Toplevel input, characters 1132-1136: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> ~ most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) Toplevel input, characters 1138-1142: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (not (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) 1 goal H2 : forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3 x : Entity H3 : True x0 : Entity H5 : _have x x0 H6 : True H4 : _service x0 H8 : _contract x0 x1 : Entity H7 : True H9 : _for x0 x1 x2 : Entity H1 : True x4 : Entity H12 : True H : _100 x4 H13 : _company x4 H16 : True x6 : Entity H17 : _own _icm x6 H18 : True H15 : _150 x6 H19 : _computer x6 H21 : True H14 : _one _icm x8 : Entity H23 : _of _icm x8 H22 : _company x8 H24 : True H10 : forall x : Entity, (((_service x /\ _contract x) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for x z2)) /\ True) /\ _have x2 x -> False ============================ most x3; (_company x3 /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x3 z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x3 z11) Toplevel input, characters 1148-1160: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1162-1166: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) Toplevel input, characters 1132-1136: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> ~ most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) 1 goal H2 : forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3 H4 : most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) x : Entity H3 : True x0 : Entity H6 : _have x x0 H7 : True H5 : _service x0 H9 : _contract x0 x1 : Entity H8 : True H10 : _for x0 x1 x3 : Entity H12 : True H : _100 x3 H13 : _company x3 x4 : Entity H1, H17 : True x6 : Entity H18 : _own _icm x6 H19 : True H16 : _150 x6 H20 : _computer x6 H22 : True H15 : _one _icm x8 : Entity H24 : _of _icm x8 H23 : _company x8 H25 : True H14 : forall x : Entity, (((_service x /\ _contract x) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for x z2)) /\ True) /\ _have x4 x -> False ============================ False Toplevel input, characters 1154-1166: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (not (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1168-1172: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (not (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> ~ most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) Toplevel input, characters 1138-1142: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (not (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) 1 goal H2 : forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3 x : Entity H3 : True x0 : Entity H5 : _have x x0 H6 : True H4 : _service x0 H8 : _contract x0 x1 : Entity H7 : True H9 : _for x0 x1 x2 : Entity H1 : True x4 : Entity H12 : True H : _100 x4 H13 : _company x4 H16 : True x6 : Entity H17 : _own _icm x6 H18 : True H15 : _150 x6 H19 : _computer x6 H21 : True H14 : _one _icm x8 : Entity H23 : _of _icm x8 H22 : _company x8 H24 : True H10 : forall x : Entity, (((_service x /\ _contract x) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for x z2)) /\ True) /\ _have x2 x -> False ============================ most x3; (_company x3 /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x3 z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x3 z11) Toplevel input, characters 1148-1160: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1162-1166: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> ~ most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) 1 goal H2 : forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3 H4 : most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) x : Entity H3 : True x0 : Entity H6 : _have x x0 H7 : True H5 : _service x0 H9 : _contract x0 x1 : Entity H8 : True H10 : _for x0 x1 x3 : Entity H12 : True H : _100 x3 H13 : _company x3 x4 : Entity H1, H17 : True x6 : Entity H18 : _own _icm x6 H19 : True H16 : _150 x6 H20 : _computer x6 H22 : True H15 : _one _icm x8 : Entity H24 : _of _icm x8 H23 : _company x8 H25 : True H14 : forall x : Entity, (((_service x /\ _contract x) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for x z2)) /\ True) /\ _have x4 x -> False ============================ False Toplevel input, characters 1154-1166: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (not (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1168-1172: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (not (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) 1 goal H2 : forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3 x : Entity H3 : True x0 : Entity H5 : _have x x0 H6 : True H4 : _service x0 H8 : _contract x0 x1 : Entity H7 : True H9 : _for x0 x1 x2 : Entity H1 : True x4 : Entity H12 : True H : _100 x4 H13 : _company x4 H16 : True x6 : Entity H17 : _own _icm x6 H18 : True H15 : _150 x6 H19 : _computer x6 H21 : True H14 : _one _icm x8 : Entity H23 : _of _icm x8 H22 : _company x8 H24 : True H10 : forall x : Entity, (((_service x /\ _contract x) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for x z2)) /\ True) /\ _have x2 x -> False ============================ most x3; (_company x3 /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x3 z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x3 z11) Toplevel input, characters 1148-1160: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1162-1166: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _100 is declared Coq < _150 is declared Coq < _99 is declared Coq < _company is declared Coq < _computer is declared Coq < _contract is declared Coq < _for is declared Coq < _have is declared Coq < _icm is declared Coq < _of is declared Coq < _one is declared Coq < _other is declared Coq < _own is declared Coq < _service is declared Coq < 1 goal ============================ (exists x z1 : Entity, ((_100 z1 /\ _company z1) /\ True) /\ x = z1) -> (exists x : Entity, ((x = _icm /\ True) /\ (exists z3 : Entity, ((_150 z3 /\ _computer z3) /\ True) /\ _own _icm z3)) /\ (exists z2 : Entity, ((_one z2 /\ (exists z1 : Entity, (_company z1 /\ True) /\ _of z2 z1)) /\ True) /\ _icm = z2)) -> (exists x : Entity, True /\ ~ (exists z3 : Entity, (((_service z3 /\ _contract z3) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for z3 z2)) /\ True) /\ _have x z3)) -> (forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3) -> (exists x : Entity, True /\ (exists z7 : Entity, (((_service z7 /\ _contract z7) /\ (exists z6 : Entity, True /\ _for z7 z6)) /\ True) /\ _have x z7)) -> ~ most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) 1 goal H2 : forall x : Entity, (exists z2 : Entity, (((_other z2 /\ _99 z2) /\ _company z2) /\ True) /\ _of x z2) /\ True -> exists z3 : Entity, ((_one z3 /\ _computer z3) /\ True) /\ _own x z3 H4 : most x; (_company x /\ (exists z8 : Entity, (_computer z8 /\ True) /\ _own x z8)) /\ True, (exists z11 : Entity, (((_service z11 /\ _contract z11) /\ (exists z10 : Entity, True /\ _for z11 z10)) /\ True) /\ _have x z11) x : Entity H3 : True x0 : Entity H6 : _have x x0 H7 : True H5 : _service x0 H9 : _contract x0 x1 : Entity H8 : True H10 : _for x0 x1 x3 : Entity H12 : True H : _100 x3 H13 : _company x3 x4 : Entity H1, H17 : True x6 : Entity H18 : _own _icm x6 H19 : True H16 : _150 x6 H20 : _computer x6 H22 : True H15 : _one _icm x8 : Entity H24 : _of _icm x8 H23 : _company x8 H25 : True H14 : forall x : Entity, (((_service x /\ _contract x) /\ (exists z2 : Entity, ((exists z1 : Entity, (_computer z1 /\ True) /\ _of z2 z1) /\ True) /\ _for x z2)) /\ True) /\ _have x4 x -> False ============================ False Toplevel input, characters 1154-1166: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (not (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 1168-1172: > Theorem t1: (exists x z1, (and (and (and (_100 z1) (_company z1)) True) (x = z1))) -> (exists x, (and (and (and (x = _icm) True) (exists z3, (and (and (and (_150 z3) (_computer z3)) True) (_own _icm z3)))) (exists z2, (and (and (and (_one z2) (exists z1, (and (and (_company z1) True) (_of z2 z1)))) True) (_icm = z2))))) -> (exists x, (and True (not (exists z3, (and (and (and (and (_service z3) (_contract z3)) (exists z2, (and (and (exists z1, (and (and (_computer z1) True) (_of z2 z1))) True) (_for z3 z2)))) True) (_have x z3)))))) -> (forall x, ((and (exists z2, (and (and (and (and (_other z2) (_99 z2)) (_company z2)) True) (_of x z2))) True) -> (exists z3, (and (and (and (_one z3) (_computer z3)) True) (_own x z3))))) -> (exists x, (and True (exists z7, (and (and (and (and (_service z7) (_contract z7)) (exists z6, (and True (_for z7 z6)))) True) (_have x z7))))) -> (not (Most (fun x => (and (and (_company x) (exists z8, (and (and (_computer z8) True) (_own x z8)))) True)) (fun x => (exists z11, (and (and (and (and (_service z11) (_contract z11)) (exists z10, (and True (_for z11 z10)))) True) (_have x z11)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_138_nominal_anaphora multi Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 572-577: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 579-583: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 578-583: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 585-589: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 572-578: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 591-594: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 609-613: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 572-577: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 579-583: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 578-584: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 597-600: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 615-619: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 578-583: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 585-589: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 572-578: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 591-594: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 609-613: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 578-584: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 597-600: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 615-619: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 572-578: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 591-594: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 609-613: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _cover is declared Coq < _have is declared Coq < _of is declared Coq < _page is declared Coq < _r_dash_95_dash_103 is declared Coq < _r_dash_95_dash_103_e2 is declared Coq < _report is declared Coq < _sign is declared Coq < _smith is declared Coq < Toplevel input, characters 243-245: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). > ^^ Error: In environment x : Entity -> Prop z1 : Entity The term "z1" has type "Entity" while it is expected to have type "Entity -> Prop". Toplevel input, characters 578-584: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 597-600: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 615-619: > Theorem t1: (forall x, ((_report x) -> (True -> (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_have x z1)))))) -> (exists x, (and (and (x = _r_dash_95_dash_103) True) (exists z1, (and (and (_report z1) True) (_r_dash_95_dash_103 = z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_cover z1) (_page z1)) True) (_sign _smith z1))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_cover z3) (_page z3)) (exists z2, (and (and (_r_dash_95_dash_103_e2 z2) True) (_of z3 z2)))) True) (_sign _smith z3)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_139_nominal_anaphora single Welcome to Coq 8.15.0 Coq < Coq < _award is declared Coq < _award_e2 is declared Coq < _award_e3 is declared Coq < _award_e4 is declared Coq < _company is declared Coq < _director is declared Coq < _have is declared Coq < _large is declared Coq < _payrise is declared Coq < 1 goal ============================ (exists x : Entity, ((_company x /\ _director x) /\ True) /\ (exists z2 : Entity, ((_large z2 /\ _payrise z2) /\ True) /\ (exists z1 : Entity, True /\ _award_e4 x z2 z1))) -> exists x : Entity, ((((_company x /\ _director x) /\ True) /\ _have x) /\ (exists z1 : Entity, (_payrise z1 /\ True) /\ _award_e3 x z1)) /\ _award_e2 x Toplevel input, characters 350-354: > Theorem t1: (exists x, (and (and (and (_company x) (_director x)) True) (exists z2, (and (and (and (_large z2) (_payrise z2)) True) (exists z1, (and True (_award_e4 x z2 z1))))))) -> (exists x, (and (and (and (and (and (_company x) (_director x)) True) (_have x)) (exists z1, (and (and (_payrise z1) True) (_award_e3 x z1)))) (_award_e2 x))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _award is declared Coq < _award_e2 is declared Coq < _award_e3 is declared Coq < _award_e4 is declared Coq < _company is declared Coq < _director is declared Coq < _have is declared Coq < _large is declared Coq < _payrise is declared Coq < 1 goal ============================ (exists x : Entity, ((_company x /\ _director x) /\ True) /\ (exists z2 : Entity, ((_large z2 /\ _payrise z2) /\ True) /\ (exists z1 : Entity, True /\ _award_e4 x z2 z1))) -> ~ (exists x : Entity, ((((_company x /\ _director x) /\ True) /\ _have x) /\ (exists z1 : Entity, (_payrise z1 /\ True) /\ _award_e3 x z1)) /\ _award_e2 x) Toplevel input, characters 356-360: > Theorem t1: (exists x, (and (and (and (_company x) (_director x)) True) (exists z2, (and (and (and (_large z2) (_payrise z2)) True) (exists z1, (and True (_award_e4 x z2 z1))))))) -> (not (exists x, (and (and (and (and (and (_company x) (_director x)) True) (_have x)) (exists z1, (and (and (_payrise z1) True) (_award_e3 x z1)))) (_award_e2 x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _award is declared Coq < _award_e2 is declared Coq < _award_e3 is declared Coq < _award_e4 is declared Coq < _company is declared Coq < _director is declared Coq < _have is declared Coq < _large is declared Coq < _payrise is declared Coq < 1 goal ============================ (exists x : Entity, ((_company x /\ _director x) /\ True) /\ (exists z2 : Entity, ((_large z2 /\ _payrise z2) /\ True) /\ (exists z1 : Entity, True /\ _award_e4 x z2 z1))) -> exists x : Entity, ((((_company x /\ _director x) /\ True) /\ _have x) /\ (exists z1 : Entity, (_payrise z1 /\ True) /\ _award_e3 x z1)) /\ _award_e2 x 3 goals x : Entity H1 : True H : _company x H2 : _director x x0 : Entity H4 : True H0 : _large x0 H5 : _payrise x0 x1 : Entity H3 : True H6 : _award_e4 x x0 x1 ============================ _have x goal 2 is: _award_e3 x x0 goal 3 is: _award_e2 x Toplevel input, characters 366-378: > Theorem t1: (exists x, (and (and (and (_company x) (_director x)) True) (exists z2, (and (and (and (_large z2) (_payrise z2)) True) (exists z1, (and True (_award_e4 x z2 z1))))))) -> (exists x, (and (and (and (and (and (_company x) (_director x)) True) (_have x)) (exists z1, (and (and (_payrise z1) True) (_award_e3 x z1)))) (_award_e2 x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (exists x, (and (and (and (_company x) (_director x)) True) (exists z2, (and (and (and (_large z2) (_payrise z2)) True) (exists z1, (and True (_award_e4 x z2 z1))))))) -> (exists x, (and (and (and (and (and (_company x) (_director x)) True) (_have x)) (exists z1, (and (and (_payrise z1) True) (_award_e3 x z1)))) (_award_e2 x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_140_nominal_anaphora single Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) Toplevel input, characters 314-318: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> ~ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill)) Toplevel input, characters 320-324: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (not (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) 1 goal H0 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1)) H1 : True ============================ _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) Toplevel input, characters 330-342: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 344-348: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) Toplevel input, characters 314-318: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> ~ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill)) 1 goal H1 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) H2 : True H3 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1)) H4 : True ============================ False Toplevel input, characters 336-348: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (not (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 350-354: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (not (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> ~ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill)) Toplevel input, characters 320-324: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (not (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) 1 goal H0 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1)) H1 : True ============================ _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) Toplevel input, characters 330-342: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 344-348: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> ~ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill)) 1 goal H1 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) H2 : True H3 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1)) H4 : True ============================ False Toplevel input, characters 336-348: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (not (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 350-354: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (not (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) 1 goal H0 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1)) H1 : True ============================ _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) Toplevel input, characters 330-342: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 344-348: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> ~ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill)) 1 goal H1 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ _hurt_e2 _bill) H2 : True H3 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1)) H4 : True ============================ False Toplevel input, characters 336-348: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (not (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 350-354: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (not (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (_hurt_e2 _bill))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_141_nominal_anaphora single Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> exists x : Entity, True /\ _say x (exists x0 : Entity, ((x0 = _john /\ True) /\ _have _john) /\ _hurt_e2 _john) Toplevel input, characters 292-296: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and True (_say x (exists x, (and (and (and (x = _john) True) (_have _john)) (_hurt_e2 _john)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> ~ (exists x : Entity, True /\ _say x (exists x0 : Entity, ((x0 = _john /\ True) /\ _have _john) /\ _hurt_e2 _john)) Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (not (exists x, (and True (_say x (exists x, (and (and (and (x = _john) True) (_have _john)) (_hurt_e2 _john))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _have is declared Coq < _hurt is declared Coq < _hurt_e2 is declared Coq < _hurt_e3 is declared Coq < _john is declared Coq < _say is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ _say _john (exists x0 : Entity, ((x0 = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1))) -> exists x : Entity, True /\ _say x (exists x0 : Entity, ((x0 = _john /\ True) /\ _have _john) /\ _hurt_e2 _john) 1 focused goal (shelved: 1) H0 : _say _john (exists x : Entity, ((x = _bill /\ True) /\ _have _bill) /\ (exists z1 : Entity, True /\ _hurt_e3 _bill z1)) H1 : True ============================ _say ?x (exists x : Entity, ((x = _john /\ True) /\ _have _john) /\ _hurt_e2 _john) Toplevel input, characters 308-320: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and True (_say x (exists x, (and (and (and (x = _john) True) (_have _john)) (_hurt_e2 _john)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 322-326: > Theorem t1: (exists x, (and (and (x = _john) True) (_say _john (exists x, (and (and (and (x = _bill) True) (_have _bill)) (exists z1, (and True (_hurt_e3 _bill z1)))))))) -> (exists x, (and True (_say x (exists x, (and (and (and (x = _john) True) (_have _john)) (_hurt_e2 _john)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_142_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 376-381: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 383-387: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 382-387: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 389-393: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 376-382: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 395-398: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 413-417: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 376-381: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 383-387: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 382-388: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 401-404: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 419-423: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 382-387: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 389-393: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 376-382: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 395-398: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 413-417: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 382-388: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 401-404: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 419-423: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 376-382: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 395-398: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 413-417: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 382-388: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 401-404: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 419-423: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_143_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 692-697: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 699-703: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 698-703: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 705-709: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 692-698: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 711-714: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 729-733: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 692-697: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 699-703: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 698-704: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 717-720: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 735-739: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 698-703: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 705-709: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 692-698: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 711-714: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 729-733: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 698-704: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 717-720: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 735-739: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 692-698: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 711-714: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 729-733: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-247: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 698-704: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 717-720: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 735-739: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (and (and (and (_four z3) (_o z3)) (_'clock z3)) True) (_at _bill z3)) (_speak _bill)) (exists z2, (and (and (z2 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_144_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 566-571: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 573-577: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 572-577: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 579-583: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 566-572: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 585-588: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 603-607: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 566-571: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 573-577: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 572-578: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 591-594: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 609-613: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 572-577: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 579-583: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 566-572: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 585-588: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 603-607: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 572-578: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 591-594: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 609-613: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 566-572: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 585-588: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 603-607: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _do is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _so is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 234-342: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1))" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _so x /\ (exists z1 : Entity, (_bill_e2 z1 /\ True) /\ _do x z1)}" which should be Set, Prop or Type. Toplevel input, characters 572-578: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 591-594: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 609-613: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_so x) (exists z1, (and (and (_bill_e2 z1) True) (_do x z1))))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_145_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _do is declared Coq < _five is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _speak is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((((_four z2 /\ _o z2) /\ _'clock z2) /\ True) /\ _at _john z2) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _john _mary))) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((((_five z1 /\ _o z1) /\ _'clock z1) /\ True) /\ _at _bill z1) /\ _do _bill)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z2 : Entity, (((((_five z2 /\ _o z2) /\ _'clock z2) /\ True) /\ _at _bill z2) /\ _speak _bill) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _bill _mary)) Toplevel input, characters 610-614: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (and (_five z1) (_o z1)) (_'clock z1)) True) (_at _bill z1)) (_do _bill))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_five z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _do is declared Coq < _five is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _speak is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((((_four z2 /\ _o z2) /\ _'clock z2) /\ True) /\ _at _john z2) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _john _mary))) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((((_five z1 /\ _o z1) /\ _'clock z1) /\ True) /\ _at _bill z1) /\ _do _bill)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z2 : Entity, (((((_five z2 /\ _o z2) /\ _'clock z2) /\ True) /\ _at _bill z2) /\ _speak _bill) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _bill _mary))) Toplevel input, characters 616-620: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (and (_five z1) (_o z1)) (_'clock z1)) True) (_at _bill z1)) (_do _bill))))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_five z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'clock is declared Coq < _at is declared Coq < _bill is declared Coq < _do is declared Coq < _five is declared Coq < _four is declared Coq < _john is declared Coq < _mary is declared Coq < _o is declared Coq < _speak is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((((_four z2 /\ _o z2) /\ _'clock z2) /\ True) /\ _at _john z2) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _john _mary))) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((((_five z1 /\ _o z1) /\ _'clock z1) /\ True) /\ _at _bill z1) /\ _do _bill)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z2 : Entity, (((((_five z2 /\ _o z2) /\ _'clock z2) /\ True) /\ _at _bill z2) /\ _speak _bill) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _bill _mary)) 2 goals H2 : True x0 : Entity H3 : _do _bill H4 : _at _bill x0 H5 : True H6 : _'clock x0 H1 : _five x0 H7 : _o x0 H9 : True x2 : Entity H11 : _speak _john H12 : _at _john x2 H13 : True H14 : _'clock x2 H8 : _four x2 H15 : _o x2 H16 : _to _john _mary H17 : True ============================ _speak _bill goal 2 is: _to _bill _mary Toplevel input, characters 626-638: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (and (_five z1) (_o z1)) (_'clock z1)) True) (_at _bill z1)) (_do _bill))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_five z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 640-644: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (and (and (_four z2) (_o z2)) (_'clock z2)) True) (_at _john z2)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (and (_five z1) (_o z1)) (_'clock z1)) True) (_at _bill z1)) (_do _bill))))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (and (and (_five z2) (_o z2)) (_'clock z2)) True) (_at _bill z2)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_146_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) Toplevel input, characters 405-409: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))) Toplevel input, characters 411-415: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) 1 goal H1 : Prog (_go _bill) H2 : _to_e2 _bill H3 : _be _bill H4 : True H6 : _speak _john H7 : _have _john H8 : True H9 : _to_e3 _john _mary H10 : True ============================ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) Toplevel input, characters 421-433: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 435-439: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) Toplevel input, characters 405-409: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))) 1 goal H2 : _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) H3 : True H5 : _speak _john H6 : _have _john H7 : True H8 : _to_e3 _john _mary H9 : True H10 : Prog (_go _bill) H11 : _to_e2 _bill H12 : _be _bill H13 : True ============================ False Toplevel input, characters 427-439: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 441-445: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))) Toplevel input, characters 411-415: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) 1 goal H1 : Prog (_go _bill) H2 : _to_e2 _bill H3 : _be _bill H4 : True H6 : _speak _john H7 : _have _john H8 : True H9 : _to_e3 _john _mary H10 : True ============================ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) Toplevel input, characters 421-433: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 435-439: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))) 1 goal H2 : _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) H3 : True H5 : _speak _john H6 : _have _john H7 : True H8 : _to_e3 _john _mary H9 : True H10 : Prog (_go _bill) H11 : _to_e2 _bill H12 : _be _bill H13 : True ============================ False Toplevel input, characters 427-439: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 441-445: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) 1 goal H1 : Prog (_go _bill) H2 : _to_e2 _bill H3 : _be _bill H4 : True H6 : _speak _john H7 : _have _john H8 : True H9 : _to_e3 _john _mary H10 : True ============================ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) Toplevel input, characters 421-433: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 435-439: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _bill is declared Coq < _go is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < _to_e2 is declared Coq < _to_e3 is declared Coq < _will is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _john _mary)) -> (exists x : Entity, (((x = _bill /\ True) /\ _be _bill) /\ _to_e2 _bill) /\ Prog (_go _bill)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary))) 1 goal H2 : _will (_speak _bill /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to_e3 _bill _mary)) H3 : True H5 : _speak _john H6 : _have _john H7 : True H8 : _to_e3 _john _mary H9 : True H10 : Prog (_go _bill) H11 : _to_e2 _bill H12 : _be _bill H13 : True ============================ False Toplevel input, characters 427-439: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 441-445: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _john _mary))))) -> (exists x, (and (and (and (and (x = _bill) True) (_be _bill)) (_to_e2 _bill)) (Prog (_go _bill)))) -> (not (exists x, (and (and (x = _bill) True) (_will (and (_speak _bill) (exists z1, (and (and (z1 = _mary) True) (_to_e3 _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_147_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 461-466: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 468-472: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 467-472: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 474-478: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 461-467: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 480-483: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 498-502: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 461-466: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 468-472: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 467-473: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 486-489: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 504-508: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 467-472: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 474-478: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 461-467: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 480-483: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 498-502: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 467-473: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 486-489: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 504-508: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 461-467: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 480-483: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 498-502: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'t is declared Coq < _bill is declared Coq < _bill_e2 is declared Coq < _didn is declared Coq < _john is declared Coq < _mary is declared Coq < _monday is declared Coq < _on is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 210-261: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => (_bill_e2 x /\ _didn x) /\ _'t x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 467-473: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 486-489: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 504-508: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _john _monday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun x => (and (and (_bill_e2 x) (_didn x)) (_'t x))) -> (not (exists x, (and (and (x = _bill) True) (exists z2, (and (and (and (and (z2 = _monday) True) (_on _bill _monday)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_148_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _has is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (((_has x /\ _john x) /\ True) /\ _speak x) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to x _mary)) -> (exists x : Entity, (x = _bill /\ True) /\ _have _bill) -> exists x : Entity, (((x = _bill /\ True) /\ _have _bill) /\ _speak _bill) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _bill _mary) Toplevel input, characters 352-356: > Theorem t1: (exists x, (and (and (and (and (_has x) (_john x)) True) (_speak x)) (exists z1, (and (and (z1 = _mary) True) (_to x _mary))))) -> (exists x, (and (and (x = _bill) True) (_have _bill))) -> (exists x, (and (and (and (and (x = _bill) True) (_have _bill)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _has is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (((_has x /\ _john x) /\ True) /\ _speak x) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to x _mary)) -> (exists x : Entity, (x = _bill /\ True) /\ _have _bill) -> ~ (exists x : Entity, (((x = _bill /\ True) /\ _have _bill) /\ _speak _bill) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _bill _mary)) Toplevel input, characters 358-362: > Theorem t1: (exists x, (and (and (and (and (_has x) (_john x)) True) (_speak x)) (exists z1, (and (and (z1 = _mary) True) (_to x _mary))))) -> (exists x, (and (and (x = _bill) True) (_have _bill))) -> (not (exists x, (and (and (and (and (x = _bill) True) (_have _bill)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _has is declared Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, (((_has x /\ _john x) /\ True) /\ _speak x) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to x _mary)) -> (exists x : Entity, (x = _bill /\ True) /\ _have _bill) -> exists x : Entity, (((x = _bill /\ True) /\ _have _bill) /\ _speak _bill) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _bill _mary) 2 goals H1 : _have _bill H2 : True x0 : Entity H4 : _speak x0 H5 : True H : _has x0 H6 : _john x0 H7 : _to x0 _mary H8 : True ============================ _speak _bill goal 2 is: _to _bill _mary Toplevel input, characters 368-380: > Theorem t1: (exists x, (and (and (and (and (_has x) (_john x)) True) (_speak x)) (exists z1, (and (and (z1 = _mary) True) (_to x _mary))))) -> (exists x, (and (and (x = _bill) True) (_have _bill))) -> (exists x, (and (and (and (and (x = _bill) True) (_have _bill)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 382-386: > Theorem t1: (exists x, (and (and (and (and (_has x) (_john x)) True) (_speak x)) (exists z1, (and (and (z1 = _mary) True) (_to x _mary))))) -> (exists x, (and (and (x = _bill) True) (_have _bill))) -> (exists x, (and (and (and (and (x = _bill) True) (_have _bill)) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_149_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _student is declared Coq < _to is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _john _mary)) -> (exists x : Entity, ((_student x /\ True) /\ _too x) /\ _have x) -> exists x : Entity, (((_student x /\ True) /\ _have x) /\ _speak x) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to x _mary) Toplevel input, characters 368-372: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (_student x) True) (_too x)) (_have x))) -> (exists x, (and (and (and (and (_student x) True) (_have x)) (_speak x)) (exists z1, (and (and (z1 = _mary) True) (_to x _mary))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _student is declared Coq < _to is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _john _mary)) -> (exists x : Entity, ((_student x /\ True) /\ _too x) /\ _have x) -> ~ (exists x : Entity, (((_student x /\ True) /\ _have x) /\ _speak x) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to x _mary)) Toplevel input, characters 374-378: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (_student x) True) (_too x)) (_have x))) -> (not (exists x, (and (and (and (and (_student x) True) (_have x)) (_speak x)) (exists z1, (and (and (z1 = _mary) True) (_to x _mary)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _have is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _student is declared Coq < _to is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _john /\ True) /\ _have _john) /\ _speak _john) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to _john _mary)) -> (exists x : Entity, ((_student x /\ True) /\ _too x) /\ _have x) -> exists x : Entity, (((_student x /\ True) /\ _have x) /\ _speak x) /\ (exists z1 : Entity, (z1 = _mary /\ True) /\ _to x _mary) 2 goals x : Entity H1 : _have x H2 : _too x H0 : _student x H3 : True H5 : _speak _john H6 : _have _john H7 : True H8 : _to _john _mary H9 : True ============================ _speak x goal 2 is: _to x _mary Toplevel input, characters 384-396: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (_student x) True) (_too x)) (_have x))) -> (exists x, (and (and (and (and (_student x) True) (_have x)) (_speak x)) (exists z1, (and (and (z1 = _mary) True) (_to x _mary))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 398-402: > Theorem t1: (exists x, (and (and (and (and (x = _john) True) (_have _john)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (_student x) True) (_too x)) (_have x))) -> (exists x, (and (and (and (and (_student x) True) (_have x)) (_speak x)) (exists z1, (and (and (z1 = _mary) True) (_to x _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_150_ellipsis single unknown
fracas_151_ellipsis single unknown
fracas_152_ellipsis single unknown
fracas_153_ellipsis single unknown
fracas_154_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 523-528: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 530-534: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 529-534: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 536-540: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 523-529: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 542-545: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 560-564: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 523-528: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 530-534: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 529-535: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 548-551: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 566-570: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 529-534: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 536-540: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 523-529: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 542-545: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 560-564: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 529-535: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 548-551: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 566-570: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 523-529: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 542-545: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 560-564: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _by is declared Coq < _car is declared Coq < _go is declared Coq < _john is declared Coq < _paris is declared Coq < _to is declared Coq < _train is declared Coq < Toplevel input, characters 199-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((x = _bill /\ (exists z1 : Entity, (_train z1 /\ True) /\ _by _bill z1)) /\ F1 _bill) /\ F2 _bill" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 529-535: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 548-551: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 566-570: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z3, (and (and (and (_car z3) True) (_by _john z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _john _paris)) (_go _john))))))) -> (fun F1 F2 => (exists x, (and (and (and (x = _bill) (exists z1, (and (and (_train z1) True) (_by _bill z1)))) (F1 _bill)) (F2 _bill)))) -> (not (exists x, (and (and (x = _bill) True) (exists z3, (and (and (and (_train z3) True) (_by _bill z3)) (exists z1, (and (and (and (z1 = _paris) True) (_to _bill _paris)) (_go _bill)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_155_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> (exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _bill z1) Toplevel input, characters 336-340: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (_car z1) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> (exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _bill z1)) Toplevel input, characters 342-346: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (_car z1) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> (exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _bill z1) 1 goal H2 : _too _bill H3 : True x0 : Entity H4 : _own _bill x0 H1 : _one x0 H5, H7 : True x2 : Entity H8 : _own _john x2 H6 : _car x2 H9 : True ============================ _own _bill x2 Toplevel input, characters 352-364: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (_car z1) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 366-370: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (_car z1) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_156_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1) Toplevel input, characters 236-240: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> ~ (exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1)) Toplevel input, characters 242-246: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (not (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1) 3 focused goals (shelved: 1) H1 : True x0 : Entity H2 : _own _john x0 H0 : _car x0 H3 : True ============================ _too _bill goal 2 is: _one ?z1 goal 3 is: _own _bill ?z1 Toplevel input, characters 252-264: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 266-270: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1) Toplevel input, characters 236-240: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> ~ (exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1)) 1 goal H2 : _too _bill H3 : True x0 : Entity H4 : _own _bill x0 H1 : _one x0 H5, H7 : True x2 : Entity H8 : _own _john x2 H6 : _car x2 H9 : True ============================ False Toplevel input, characters 258-270: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (not (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 272-276: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (not (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> ~ (exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1)) Toplevel input, characters 242-246: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (not (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1) 3 focused goals (shelved: 1) H1 : True x0 : Entity H2 : _own _john x0 H0 : _car x0 H3 : True ============================ _too _bill goal 2 is: _one ?z1 goal 3 is: _own _bill ?z1 Toplevel input, characters 252-264: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 266-270: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> ~ (exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1)) 1 goal H2 : _too _bill H3 : True x0 : Entity H4 : _own _bill x0 H1 : _one x0 H5, H7 : True x2 : Entity H8 : _own _john x2 H6 : _car x2 H9 : True ============================ False Toplevel input, characters 258-270: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (not (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 272-276: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (not (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1) 3 focused goals (shelved: 1) H1 : True x0 : Entity H2 : _own _john x0 H0 : _car x0 H3 : True ============================ _too _bill goal 2 is: _one ?z1 goal 3 is: _own _bill ?z1 Toplevel input, characters 252-264: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 266-270: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _too is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_car z1 /\ True) /\ _own _john z1)) -> ~ (exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ (exists z1 : Entity, (_one z1 /\ True) /\ _own _bill z1)) 1 goal H2 : _too _bill H3 : True x0 : Entity H4 : _own _bill x0 H1 : _one x0 H5, H7 : True x2 : Entity H8 : _own _john x2 H6 : _car x2 H9 : True ============================ False Toplevel input, characters 258-270: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (not (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 272-276: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_car z1) True) (_own _john z1))))) -> (not (exists x, (and (and (and (x = _bill) True) (_too _bill)) (exists z1, (and (and (_one z1) True) (_own _bill z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_157_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _car z1) /\ True) /\ _own _bill z1) Toplevel input, characters 367-371: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_car z1)) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _car z1) /\ True) /\ _own _bill z1)) Toplevel input, characters 373-377: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_car z1)) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _car z1) /\ True) /\ _own _bill z1) 1 goal H2 : True x0 : Entity H3 : _own _bill x0 H4 : True H1 : _blue x0 H5 : _one x0 H7 : True x2 : Entity H8 : _own _john x2 H9 : True H6 : _red x2 H10 : _car x2 ============================ _car x0 Toplevel input, characters 383-395: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 397-401: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_158_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1) Toplevel input, characters 366-370: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1)) Toplevel input, characters 372-376: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1) 1 goal H2 : True x0 : Entity H3 : _own _bill x0 H4 : True H1 : _blue x0 H5 : _one x0 H7 : True x2 : Entity H8 : _own _john x2 H9 : True H6 : _red x2 H10 : _car x2 ============================ _own _bill x2 Toplevel input, characters 382-394: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 396-400: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1) Toplevel input, characters 366-370: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1)) 1 goal H3 : True x0 : Entity H4 : _own _bill x0 H5 : True H2 : _red x0 H6 : _car x0 H8 : True x2 : Entity H9 : _own _john x2 H10 : True H7 : _red x2 H11 : _car x2 H13 : True x4 : Entity H14 : _own _bill x4 H15 : True H12 : _blue x4 H16 : _one x4 ============================ False Toplevel input, characters 388-400: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1)) Toplevel input, characters 372-376: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1) 1 goal H2 : True x0 : Entity H3 : _own _bill x0 H4 : True H1 : _blue x0 H5 : _one x0 H7 : True x2 : Entity H8 : _own _john x2 H9 : True H6 : _red x2 H10 : _car x2 ============================ _own _bill x2 Toplevel input, characters 382-394: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 396-400: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1)) 1 goal H3 : True x0 : Entity H4 : _own _bill x0 H5 : True H2 : _red x0 H6 : _car x0 H8 : True x2 : Entity H9 : _own _john x2 H10 : True H7 : _red x2 H11 : _car x2 H13 : True x4 : Entity H14 : _own _bill x4 H15 : True H12 : _blue x4 H16 : _one x4 ============================ False Toplevel input, characters 388-400: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1) 1 goal H2 : True x0 : Entity H3 : _own _bill x0 H4 : True H1 : _blue x0 H5 : _one x0 H7 : True x2 : Entity H8 : _own _john x2 H9 : True H6 : _red x2 H10 : _car x2 ============================ _own _bill x2 Toplevel input, characters 382-394: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 396-400: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _blue is declared Coq < _car is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_blue z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _bill z1)) 1 goal H3 : True x0 : Entity H4 : _own _bill x0 H5 : True H2 : _red x0 H6 : _car x0 H8 : True x2 : Entity H9 : _own _john x2 H10 : True H7 : _red x2 H11 : _car x2 H13 : True x4 : Entity H14 : _own _bill x4 H15 : True H12 : _blue x4 H16 : _one x4 ============================ False Toplevel input, characters 388-400: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_blue z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _bill z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_159_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _car z1) /\ True) /\ _own _bill z1) Toplevel input, characters 367-371: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_car z1)) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _car z1) /\ True) /\ _own _bill z1)) Toplevel input, characters 373-377: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_car z1)) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _car z1) /\ True) /\ _own _bill z1) 1 goal H2 : True x0 : Entity H3 : _own _bill x0 H4 : True H1 : _fast x0 H5 : _one x0 H7 : True x2 : Entity H8 : _own _john x2 H9 : True H6 : _red x2 H10 : _car x2 ============================ _car x0 Toplevel input, characters 383-395: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 397-401: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_160_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (((_fast z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _bill z1) Toplevel input, characters 383-387: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (((_fast z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _bill z1)) Toplevel input, characters 389-393: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (((_fast z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _bill z1) 2 goals H2 : True x0 : Entity H3 : _own _bill x0 H4 : True H1 : _fast x0 H5 : _one x0 H7 : True x2 : Entity H8 : _own _john x2 H9 : True H6 : _red x2 H10 : _car x2 ============================ _red x0 goal 2 is: _car x0 Toplevel input, characters 399-411: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 413-417: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_161_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (((_fast z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _bill z1) Toplevel input, characters 383-387: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (((_fast z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _bill z1)) Toplevel input, characters 389-393: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_red z1 /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_fast z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (((_fast z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _bill z1) 2 goals H2 : True x0 : Entity H3 : _own _bill x0 H4 : True H1 : _fast x0 H5 : _one x0 H7 : True x2 : Entity H8 : _own _john x2 H9 : True H6 : _red x2 H10 : _car x2 ============================ _red x0 goal 2 is: _car x0 Toplevel input, characters 399-411: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 413-417: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_red z1) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_fast z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_162_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < _slow is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (((_fast z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_slow z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (((_slow z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _bill z1) Toplevel input, characters 400-404: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_slow z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_slow z1) (_red z1)) (_car z1)) True) (_own _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < _slow is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (((_fast z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_slow z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (((_slow z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _bill z1)) Toplevel input, characters 406-410: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_slow z1) (_one z1)) True) (_own _bill z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_slow z1) (_red z1)) (_car z1)) True) (_own _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _car is declared Coq < _fast is declared Coq < _john is declared Coq < _one is declared Coq < _own is declared Coq < _red is declared Coq < _slow is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (((_fast z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _john z1)) -> (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, ((_slow z1 /\ _one z1) /\ True) /\ _own _bill z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (((_slow z1 /\ _red z1) /\ _car z1) /\ True) /\ _own _bill z1) 2 goals H2 : True x0 : Entity H3 : _own _bill x0 H4 : True H1 : _slow x0 H5 : _one x0 H7 : True x2 : Entity H8 : _own _john x2 H9 : True H10 : _car x2 H6 : _fast x2 H11 : _red x2 ============================ _red x0 goal 2 is: _car x0 Toplevel input, characters 416-428: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_slow z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_slow z1) (_red z1)) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 430-434: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (and (_fast z1) (_red z1)) (_car z1)) True) (_own _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (_slow z1) (_one z1)) True) (_own _bill z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (and (and (_slow z1) (_red z1)) (_car z1)) True) (_own _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_163_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) Toplevel input, characters 316-320: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2))) Toplevel input, characters 322-326: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (not (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) 1 goal H1 : True x0 : Entity H2 : _have _john x0 H3 : True H0 : _paper x0 H4 : _accept x0 ============================ _know _bill (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) Toplevel input, characters 332-344: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 346-350: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) Toplevel input, characters 316-320: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2))) 1 goal H1 : _know _bill (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) H2, H4 : True x1 : Entity H5 : _have _john x1 H6 : True H3 : _paper x1 H7 : _accept x1 ============================ False Toplevel input, characters 338-350: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (not (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 352-356: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (not (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2))) Toplevel input, characters 322-326: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (not (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) 1 goal H1 : True x0 : Entity H2 : _have _john x0 H3 : True H0 : _paper x0 H4 : _accept x0 ============================ _know _bill (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) Toplevel input, characters 332-344: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 346-350: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2))) 1 goal H1 : _know _bill (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) H2, H4 : True x1 : Entity H5 : _have _john x1 H6 : True H3 : _paper x1 H7 : _accept x1 ============================ False Toplevel input, characters 338-350: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (not (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 352-356: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (not (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) 1 goal H1 : True x0 : Entity H2 : _have _john x0 H3 : True H0 : _paper x0 H4 : _accept x0 ============================ _know _bill (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) Toplevel input, characters 332-344: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 346-350: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _accept is declared Coq < _bill is declared Coq < _have is declared Coq < _john is declared Coq < _paper is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ _know _bill (exists x0 : Entity, (x0 = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2))) 1 goal H1 : _know _bill (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, ((_paper z2 /\ _accept z2) /\ True) /\ _have _john z2)) H2, H4 : True x1 : Entity H5 : _have _john x1 H6 : True H3 : _paper x1 H7 : _accept x1 ============================ False Toplevel input, characters 338-350: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (not (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 352-356: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))) -> (not (exists x, (and (and (x = _bill) True) (_know _bill (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (_paper z2) (_accept z2)) True) (_have _john z2))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_164_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 283-288: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 290-294: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 289-294: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 296-300: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 283-289: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 302-305: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 320-324: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 283-288: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 290-294: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 289-295: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 308-311: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 326-330: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 289-294: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 296-300: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 283-289: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 302-305: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 320-324: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 289-295: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 308-311: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 326-330: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 283-289: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 302-305: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 320-324: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _and is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _speak_e2 is declared Coq < _speak_e3 is declared Coq < _sue is declared Coq < _to is declared Coq < Toplevel input, characters 142-205: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun Q : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => Q (fun _ : ?T => True) (fun x : Entity => _and x /\ _sue x)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => _and x /\ _sue x}" which should be Set, Prop or Type. Toplevel input, characters 289-295: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 308-311: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 326-330: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak_e2 _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun Q => (Q (fun w => True) (fun x => (and (_and x) (_sue x))))) -> (not (exists x, (and (and (x = _john) True) (_speak_e3 _john (_sue _john))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_165_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 418-423: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 425-429: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 424-429: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 431-435: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 418-424: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 437-440: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 455-459: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 418-423: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 425-429: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 424-430: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 443-446: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 461-465: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 424-429: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 431-435: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 418-424: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 437-440: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 455-459: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 424-430: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 443-446: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 461-465: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 418-424: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 437-440: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 455-459: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 139-215: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun S : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) S /\ S" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 424-430: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 443-446: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 461-465: > Theorem t1: (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (fun S => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) S) S)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_166_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 499-504: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 506-510: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 505-510: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 512-516: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 499-505: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 518-521: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 536-540: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 499-504: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 506-510: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 505-511: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 524-527: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 542-546: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 505-510: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 512-516: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 499-505: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 518-521: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 536-540: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 505-511: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 524-527: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 542-546: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 499-505: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 518-521: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 536-540: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _friday is declared Coq < _friday_e2 is declared Coq < _john is declared Coq < _mary is declared Coq < _on is declared Coq < _on_e3 is declared Coq < _on_t3 is declared Coq < _speak is declared Coq < _thursday is declared Coq < _to is declared Coq < Toplevel input, characters 217-296: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : Prop => _on_t3 (exists x : Entity, (_friday_e2 x /\ True) /\ True) X0 /\ X0" has type "Prop -> Prop" which should be Set, Prop or Type. Toplevel input, characters 505-511: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 524-527: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 542-546: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _thursday) True) (_on_e3 _john _thursday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))))) -> (fun X0 => (and (_on_t3 (exists x, (and (and (_friday_e2 x) True) True)) X0) X0)) -> (not (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (z2 = _friday) True) (_on_e3 _john _friday)) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_167_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 164-338: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((((_two x /\ _woman x) /\ _work x) /\ (exists z1 : Entity, ((_sales z1 /\ _department z1) /\ True) /\ _in x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 341-346: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 348-352: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 169-343: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 347-352: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 354-358: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 164-338: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((((_two x /\ _woman x) /\ _work x) /\ (exists z1 : Entity, ((_sales z1 /\ _department z1) /\ True) /\ _in x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 341-347: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 360-363: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 378-382: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 164-338: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((((_two x /\ _woman x) /\ _work x) /\ (exists z1 : Entity, ((_sales z1 /\ _department z1) /\ True) /\ _in x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 341-346: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 348-352: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 169-343: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 347-353: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 366-369: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 384-388: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 169-343: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 347-352: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 354-358: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 164-338: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((((_two x /\ _woman x) /\ _work x) /\ (exists z1 : Entity, ((_sales z1 /\ _department z1) /\ True) /\ _in x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 341-347: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 360-363: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 378-382: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 169-343: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 347-353: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 366-369: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 384-388: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 164-338: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, ((((_two x /\ _woman x) /\ _work x) /\ (exists z1 : Entity, ((_sales z1 /\ _department z1) /\ True) /\ _in x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 341-347: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 360-363: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 378-382: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _department is declared Coq < _in is declared Coq < _man is declared Coq < _sales is declared Coq < _twenty is declared Coq < _two is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 169-343: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Prop. Toplevel input, characters 347-353: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 366-369: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 384-388: > Theorem t1: (exists x, (and (and (and (_twenty x) (_man x)) True) (exists z1, (and (and (and (and (_sales z1) (_department z1)) True) (_in x z1)) (_work x))))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_two x) (_woman x)) (_work x)) (exists z1, (and (and (and (_sales z1) (_department z1)) True) (_in x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_168_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 411-416: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 418-422: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 417-422: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 424-428: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 411-417: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 430-433: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 448-452: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 411-416: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 418-422: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 417-423: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-439: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 417-422: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 424-428: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 411-417: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 430-433: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 448-452: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 417-423: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-439: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 411-417: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 430-433: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 448-452: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _five is declared Coq < _forty is declared Coq < _forty_e2 is declared Coq < _forty_e3 is declared Coq < _man is declared Coq < _part is declared Coq < _time is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 141-258: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun X0 : forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0 => X0 (fun _ : ?T => True) (fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1)" has type "(forall (x : ?T -> Prop) (x0 : Entity -> Prop), ?T0) -> ?T0@{x:=fun _ : ?T => True; x0:=fun x : Entity => exists z1 : Entity, ((_five z1 /\ _woman z1) /\ True) /\ _forty_e3 x z1}" which should be Set, Prop or Type. Toplevel input, characters 417-423: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-439: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (exists x, (and (and (and (_five x) (_man x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1))))) -> (fun X0 => (X0 (fun w => True) (fun x => (exists z1, (and (and (and (_five z1) (_woman z1)) True) (_forty_e3 x z1)))))) -> (not (exists x, (and (and (and (and (_forty_e2 x) (_five x)) (_woman x)) True) (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work x z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_169_ellipsis single unknown
fracas_170_ellipsis single unknown
fracas_171_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 549-554: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 556-560: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 555-560: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 562-566: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 549-555: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 568-571: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 549-554: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 556-560: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 555-561: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 574-577: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 555-560: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 562-566: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 549-555: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 568-571: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 555-561: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 574-577: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 549-555: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 568-571: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _man is declared Coq < _many is declared Coq < _part is declared Coq < _time is declared Coq < _want is declared Coq < _woman is declared Coq < _work is declared Coq < Toplevel input, characters 84-97: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). > ^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 555-561: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 574-577: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (x = _john) True) (_want _john (_know _john (_man (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1))))))))))) -> (fun F1 F2 => (exists x, (and (and (_woman x) (F1 x)) (F2 x)))) -> (not (exists x, (and (and (x = _john) True) (_want _john (_know _john (_woman (fun w => True) (fun z2 => (_many z2)) (fun Q2 => (Q2 (fun w => True) (fun z2 => (exists z1, (and (and (and (_part z1) (_time z1)) True) (_work z2 z1)))))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_172_ellipsis single unknown
fracas_173_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-452: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-458: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-453: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-469: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 484-488: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-452: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-459: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 472-475: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 490-494: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-458: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-453: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-469: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 484-488: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-459: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 472-475: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 490-494: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-453: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-469: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 484-488: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-459: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 472-475: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 490-494: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))) -> (not (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_174_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-452: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-458: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-453: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-469: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 484-488: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-452: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-459: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 472-475: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 490-494: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-458: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-453: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-469: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 484-488: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-459: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 472-475: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 490-494: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 447-453: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 466-469: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 484-488: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _mary is declared Coq < _speak is declared Coq < _to is declared Coq < Toplevel input, characters 86-93: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 453-459: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 472-475: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 490-494: > Theorem t1: (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (forall z2, ((_people z2) -> ((and (exists z1, (and (and (z1 = _john) True) (_do _john z2))) True) -> (_to _bill z2)))))) -> (exists x, (and (and (and (x = _bill) True) (_speak _bill)) (exists z1, (and (and (z1 = _mary) True) (_to _bill _mary))))) -> (not (exists x, (and (and (and (x = _john) True) (_speak _john)) (exists z1, (and (and (z1 = _mary) True) (_to _john _mary)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_175_ellipsis single unknown
fracas_176_ellipsis single unknown
fracas_177_ellipsis single unknown
fracas_178_ellipsis single unknown
fracas_179_ellipsis multi Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _report is declared Coq < _too is declared Coq < _write is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _john z1)) -> exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ _do _bill) -> (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _john z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _bill z1) Toplevel input, characters 409-413: > Theorem t1: ((exists x, (and (and (x = _john) True) (exists z1, (and (and (_report z1) True) (_write _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (_do _bill)))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_report z1) True) (_write _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (_report z1) True) (_write _bill z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _report is declared Coq < _too is declared Coq < _write is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _john z1)) -> exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ _do _bill) -> (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _john z1)) -> ~ (exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _bill z1)) Toplevel input, characters 415-419: > Theorem t1: ((exists x, (and (and (x = _john) True) (exists z1, (and (and (_report z1) True) (_write _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (_do _bill)))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_report z1) True) (_write _john z1))))) -> (not (exists x, (and (and (x = _bill) True) (exists z1, (and (and (_report z1) True) (_write _bill z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _do is declared Coq < _john is declared Coq < _report is declared Coq < _too is declared Coq < _write is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _john z1)) -> exists x : Entity, ((x = _bill /\ True) /\ _too _bill) /\ _do _bill) -> (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _john z1)) -> exists x : Entity, (x = _bill /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _bill z1) 1 goal H1 : _do _bill H2 : _too _bill H3, H5 : True x1 : Entity H6 : _write _john x1 H4 : _report x1 H7 : True ============================ _write _bill x1 Toplevel input, characters 425-437: > Theorem t1: ((exists x, (and (and (x = _john) True) (exists z1, (and (and (_report z1) True) (_write _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (_do _bill)))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_report z1) True) (_write _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (_report z1) True) (_write _bill z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 439-443: > Theorem t1: ((exists x, (and (and (x = _john) True) (exists z1, (and (and (_report z1) True) (_write _john z1))))) -> (exists x, (and (and (and (x = _bill) True) (_too _bill)) (_do _bill)))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_report z1) True) (_write _john z1))))) -> (exists x, (and (and (x = _bill) True) (exists z1, (and (and (_report z1) True) (_write _bill z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_180_ellipsis single unknown
fracas_181_ellipsis single unknown
fracas_182_ellipsis single unknown
fracas_183_ellipsis single unknown
fracas_184_ellipsis single unknown
fracas_185_ellipsis single unknown
fracas_186_ellipsis single unknown
fracas_187_ellipsis single unknown
fracas_188_ellipsis single unknown
fracas_189_ellipsis multi unknown
fracas_190_ellipsis multi unknown
fracas_191_ellipsis single unknown
fracas_192_ellipsis single unknown
fracas_193_ellipsis single unknown
fracas_194_ellipsis single unknown
fracas_195_ellipsis single unknown
fracas_196_ellipsis multi unknown
fracas_197_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1)) Toplevel input, characters 253-257: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1) No more goals. Toplevel input, characters 259-276: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1)) 1 goal H2 : True x0 : Entity H3 : _have _john x0 H1 : _diamond x0 H4, H6 : True x2 : Entity H7 : _have _john x2 H8 : True H5 : _genuine x2 H9 : _diamond x2 ============================ False Toplevel input, characters 269-281: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 283-287: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1)) Toplevel input, characters 253-257: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1) No more goals. Toplevel input, characters 259-276: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1)) 1 goal H2 : True x0 : Entity H3 : _have _john x0 H1 : _diamond x0 H4, H6 : True x2 : Entity H7 : _have _john x2 H8 : True H5 : _genuine x2 H9 : _diamond x2 ============================ False Toplevel input, characters 269-281: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 283-287: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1) No more goals. Toplevel input, characters 259-276: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _diamond is declared Coq < _genuine is declared Coq < _have is declared Coq < _john is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_genuine z1 /\ _diamond z1) /\ True) /\ _have _john z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_diamond z1 /\ True) /\ _have _john z1)) 1 goal H2 : True x0 : Entity H3 : _have _john x0 H1 : _diamond x0 H4, H6 : True x2 : Entity H7 : _have _john x2 H8 : True H5 : _genuine x2 H9 : _diamond x2 ============================ False Toplevel input, characters 269-281: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 283-287: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_genuine z1) (_diamond z1)) True) (_have _john z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (_diamond z1) True) (_have _john z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_198_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) Toplevel input, characters 275-279: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) 2 goals H1 : True H0 : _former (_university _john /\ _student _john) H3 : True ============================ _university _john goal 2 is: _student _john Toplevel input, characters 291-303: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 305-309: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) Toplevel input, characters 275-279: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) 1 goal H2, H4 : True H5 : _student _john H1 : _university _john H7 : True H6 : _former (_university _john /\ _student _john) H9 : True ============================ False Toplevel input, characters 297-309: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 311-315: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) 2 goals H1 : True H0 : _former (_university _john /\ _student _john) H3 : True ============================ _university _john goal 2 is: _student _john Toplevel input, characters 291-303: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 305-309: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) 1 goal H2, H4 : True H5 : _student _john H1 : _university _john H7 : True H6 : _former (_university _john /\ _student _john) H9 : True ============================ False Toplevel input, characters 297-309: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 311-315: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) 2 goals H1 : True H0 : _former (_university _john /\ _student _john) H3 : True ============================ _university _john goal 2 is: _student _john Toplevel input, characters 291-303: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 305-309: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former (_university z1 /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) 1 goal H2, H4 : True H5 : _student _john H1 : _university _john H7 : True H6 : _former (_university _john /\ _student _john) H9 : True ============================ False Toplevel input, characters 297-309: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 311-315: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (_university z1) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_199_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) Toplevel input, characters 244-248: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john No more goals. Toplevel input, characters 250-267: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) 1 goal H1 : _successful _john H2, H4, H6 : True H7 : _former (_university _john /\ _student _john) H3 : _successful _john ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) Toplevel input, characters 244-248: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john No more goals. Toplevel input, characters 250-267: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) 1 goal H1 : _successful _john H2, H4, H6 : True H7 : _former (_university _john /\ _student _john) H3 : _successful _john ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john No more goals. Toplevel input, characters 250-267: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_successful z1 /\ _former (_university z1 /\ _student z1)) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) 1 goal H1 : _successful _john H2, H4, H6 : True H7 : _former (_university _john /\ _student _john) H3 : _successful _john ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_successful z1) (_former (and (_university z1) (_student z1)))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_200_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john Toplevel input, characters 238-242: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) Toplevel input, characters 244-248: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john 1 goal H1 : True H0 : _former ((_successful _john /\ _university _john) /\ _student _john) H3 : True ============================ _successful _john Toplevel input, characters 254-266: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john Toplevel input, characters 238-242: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) 1 goal H1 : _successful _john H2, H4 : True H3 : _former ((_successful _john /\ _university _john) /\ _student _john) H6 : True ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) Toplevel input, characters 244-248: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john 1 goal H1 : True H0 : _former ((_successful _john /\ _university _john) /\ _student _john) H3 : True ============================ _successful _john Toplevel input, characters 254-266: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) 1 goal H1 : _successful _john H2, H4 : True H3 : _former ((_successful _john /\ _university _john) /\ _student _john) H6 : True ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ _successful _john 1 goal H1 : True H0 : _former ((_successful _john /\ _university _john) /\ _student _john) H3 : True ============================ _successful _john Toplevel input, characters 254-266: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (_successful _john))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ _successful _john) 1 goal H1 : _successful _john H2, H4 : True H3 : _former ((_successful _john /\ _university _john) /\ _student _john) H6 : True ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (_successful _john)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_201_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) Toplevel input, characters 304-308: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) 2 goals H1 : True H0 : _former ((_successful _john /\ _university _john) /\ _student _john) H3 : True ============================ _university _john goal 2 is: _student _john Toplevel input, characters 314-326: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 328-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) Toplevel input, characters 298-302: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) 1 goal H2, H4 : True H5 : _student _john H1 : _university _john H7 : True H6 : _former ((_successful _john /\ _university _john) /\ _student _john) H9 : True ============================ False Toplevel input, characters 320-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 334-338: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) Toplevel input, characters 304-308: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) 2 goals H1 : True H0 : _former ((_successful _john /\ _university _john) /\ _student _john) H3 : True ============================ _university _john goal 2 is: _student _john Toplevel input, characters 314-326: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 328-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) 1 goal H2, H4 : True H5 : _student _john H1 : _university _john H7 : True H6 : _former ((_successful _john /\ _university _john) /\ _student _john) H9 : True ============================ False Toplevel input, characters 320-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 334-338: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1) 2 goals H1 : True H0 : _former ((_successful _john /\ _university _john) /\ _student _john) H3 : True ============================ _university _john goal 2 is: _student _john Toplevel input, characters 314-326: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 328-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _john is declared Coq < _student is declared Coq < _successful is declared Coq < _university is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, (_former ((_successful z1 /\ _university z1) /\ _student z1) /\ True) /\ _john = z1)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((_university z1 /\ _student z1) /\ True) /\ _john = z1)) 1 goal H2, H4 : True H5 : _student _john H1 : _university _john H7 : True H6 : _former ((_successful _john /\ _university _john) /\ _student _john) H9 : True ============================ False Toplevel input, characters 320-332: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 334-338: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z1, (and (and (_former (and (and (_successful z1) (_university z1)) (_student z1))) True) (_john = z1))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (_university z1) (_student z1)) True) (_john = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_202_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _four_dash_legged is declared Coq < _mammal is declared Coq < 1 goal ============================ (forall x : Entity, _mammal x -> True -> exists z1 : Entity, (_animal z1 /\ True) /\ x = z1) -> forall x : Entity, _four_dash_legged x /\ _mammal x -> True -> exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ x = z1 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _four_dash_legged is declared Coq < _mammal is declared Coq < 1 goal ============================ (forall x : Entity, _mammal x -> True -> exists z1 : Entity, (_animal z1 /\ True) /\ x = z1) -> ~ (forall x : Entity, _four_dash_legged x /\ _mammal x -> True -> exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ x = z1) Toplevel input, characters 268-272: > Theorem t1: (forall x, ((_mammal x) -> (True -> (exists z1, (and (and (_animal z1) True) (x = z1)))))) -> (not (forall x, ((and (_four_dash_legged x) (_mammal x)) -> (True -> (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (x = z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _four_dash_legged is declared Coq < _mammal is declared Coq < 1 goal ============================ (forall x : Entity, _mammal x -> True -> exists z1 : Entity, (_animal z1 /\ True) /\ x = z1) -> forall x : Entity, _four_dash_legged x /\ _mammal x -> True -> exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ x = z1 1 goal H : forall x : Entity, _mammal x -> True -> exists z1 : Entity, (_animal z1 /\ True) /\ x = z1 x : Entity H1 : True H2 : _four_dash_legged x H3 : _mammal x ============================ _animal x Toplevel input, characters 278-290: > Theorem t1: (forall x, ((_mammal x) -> (True -> (exists z1, (and (and (_animal z1) True) (x = z1)))))) -> (forall x, ((and (_four_dash_legged x) (_mammal x)) -> (True -> (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (x = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 292-296: > Theorem t1: (forall x, ((_mammal x) -> (True -> (exists z1, (and (and (_animal z1) True) (x = z1)))))) -> (forall x, ((and (_four_dash_legged x) (_mammal x)) -> (True -> (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (x = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_203_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> ~ (exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo) Toplevel input, characters 226-230: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo No more goals. Toplevel input, characters 232-249: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> ~ (exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo) 1 goal H1 : _four_dash_legged _dumbo H2, H4, H6 : True H7 : _animal _dumbo H3 : _four_dash_legged _dumbo ============================ False Toplevel input, characters 242-254: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 256-260: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> ~ (exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo) Toplevel input, characters 226-230: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo No more goals. Toplevel input, characters 232-249: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> ~ (exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo) 1 goal H1 : _four_dash_legged _dumbo H2, H4, H6 : True H7 : _animal _dumbo H3 : _four_dash_legged _dumbo ============================ False Toplevel input, characters 242-254: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 256-260: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo No more goals. Toplevel input, characters 232-249: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _four_dash_legged is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_four_dash_legged z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> ~ (exists x : Entity, (x = _dumbo /\ True) /\ _four_dash_legged _dumbo) 1 goal H1 : _four_dash_legged _dumbo H2, H4, H6 : True H7 : _animal _dumbo H3 : _four_dash_legged _dumbo ============================ False Toplevel input, characters 242-254: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 256-260: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_four_dash_legged z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (_four_dash_legged _dumbo)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_204_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _large is declared Coq < _mickey is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _mickey = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _mickey = z1) Toplevel input, characters 261-265: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_mickey = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _large is declared Coq < _mickey is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _mickey = z1)) -> ~ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _mickey = z1)) Toplevel input, characters 267-271: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (not (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_mickey = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _large is declared Coq < _mickey is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _mickey = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _mickey = z1) 1 goal H1, H3 : True H4 : _animal _mickey H0 : _small _mickey ============================ _large _mickey Toplevel input, characters 277-289: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_mickey = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 291-295: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_mickey = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_205_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _dumbo = z1) Toplevel input, characters 257-261: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_dumbo = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> ~ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) Toplevel input, characters 263-267: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_dumbo = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _dumbo = z1) 1 goal H1, H3 : True H4 : _animal _dumbo H0 : _large _dumbo ============================ _small _dumbo Toplevel input, characters 273-285: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_dumbo = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 287-291: > Theorem t1: (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_dumbo = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_206_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1) Toplevel input, characters 259-263: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1)) Toplevel input, characters 265-269: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1) 2 goals H1 : True H0 : forall x : Entity, ((_small x /\ _animal x) /\ True) /\ _fido = x -> False ============================ _large _fido goal 2 is: _animal _fido Toplevel input, characters 275-287: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1) Toplevel input, characters 259-263: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1)) 1 goal H2, H4 : True H5 : _animal _fido H1 : _large _fido H7 : True H6 : forall x : Entity, ((_small x /\ _animal x) /\ True) /\ _fido = x -> False ============================ False Toplevel input, characters 281-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 295-299: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1)) Toplevel input, characters 265-269: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1) 2 goals H1 : True H0 : forall x : Entity, ((_small x /\ _animal x) /\ True) /\ _fido = x -> False ============================ _large _fido goal 2 is: _animal _fido Toplevel input, characters 275-287: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1)) 1 goal H2, H4 : True H5 : _animal _fido H1 : _large _fido H7 : True H6 : forall x : Entity, ((_small x /\ _animal x) /\ True) /\ _fido = x -> False ============================ False Toplevel input, characters 281-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 295-299: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1) 2 goals H1 : True H0 : forall x : Entity, ((_small x /\ _animal x) /\ True) /\ _fido = x -> False ============================ _large _fido goal 2 is: _animal _fido Toplevel input, characters 275-287: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_small z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _fido = z1)) 1 goal H2, H4 : True H5 : _animal _fido H1 : _large _fido H7 : True H6 : forall x : Entity, ((_small x /\ _animal x) /\ True) /\ _fido = x -> False ============================ False Toplevel input, characters 281-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 295-299: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_small z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_207_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1) Toplevel input, characters 259-263: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1)) Toplevel input, characters 265-269: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1) 2 goals H1 : True H0 : forall x : Entity, ((_large x /\ _animal x) /\ True) /\ _fido = x -> False ============================ _small _fido goal 2 is: _animal _fido Toplevel input, characters 275-287: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1) Toplevel input, characters 259-263: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1)) 1 goal H2, H4 : True H5 : _animal _fido H1 : _small _fido H7 : True H6 : forall x : Entity, ((_large x /\ _animal x) /\ True) /\ _fido = x -> False ============================ False Toplevel input, characters 281-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 295-299: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1)) Toplevel input, characters 265-269: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1) 2 goals H1 : True H0 : forall x : Entity, ((_large x /\ _animal x) /\ True) /\ _fido = x -> False ============================ _small _fido goal 2 is: _animal _fido Toplevel input, characters 275-287: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1)) 1 goal H2, H4 : True H5 : _animal _fido H1 : _small _fido H7 : True H6 : forall x : Entity, ((_large x /\ _animal x) /\ True) /\ _fido = x -> False ============================ False Toplevel input, characters 281-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 295-299: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1) 2 goals H1 : True H0 : forall x : Entity, ((_large x /\ _animal x) /\ True) /\ _fido = x -> False ============================ _small _fido goal 2 is: _animal _fido Toplevel input, characters 275-287: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _fido is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (exists x : Entity, (x = _fido /\ True) /\ ~ (exists z2 : Entity, ((_large z2 /\ _animal z2) /\ True) /\ _fido = z2)) -> ~ (exists x : Entity, (x = _fido /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _fido = z1)) 1 goal H2, H4 : True H5 : _animal _fido H1 : _small _fido H7 : True H6 : forall x : Entity, ((_large x /\ _animal x) /\ True) /\ _fido = x -> False ============================ False Toplevel input, characters 281-293: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 295-299: > Theorem t1: (exists x, (and (and (x = _fido) True) (not (exists z2, (and (and (and (_large z2) (_animal z2)) True) (_fido = z2)))))) -> (not (exists x, (and (and (x = _fido) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_fido = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_208_adjectives multi Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _large is declared Coq < _mickey is declared Coq < _small is declared Coq < _smaller is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _mickey = z1)) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((z1 = _dumbo /\ True) /\ _than _mickey _dumbo) /\ _smaller _mickey) Toplevel input, characters 397-401: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (z1 = _dumbo) True) (_than _mickey _dumbo)) (_smaller _mickey))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _large is declared Coq < _mickey is declared Coq < _small is declared Coq < _smaller is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _mickey = z1)) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> ~ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((z1 = _dumbo /\ True) /\ _than _mickey _dumbo) /\ _smaller _mickey)) Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (z1 = _dumbo) True) (_than _mickey _dumbo)) (_smaller _mickey)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _large is declared Coq < _mickey is declared Coq < _small is declared Coq < _smaller is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _mickey = z1)) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((z1 = _dumbo /\ True) /\ _than _mickey _dumbo) /\ _smaller _mickey) 2 goals H2, H4 : True H5 : _animal _dumbo H1 : _large _dumbo H7, H9 : True H10 : _animal _mickey H6 : _small _mickey ============================ _than _mickey _dumbo goal 2 is: _smaller _mickey Toplevel input, characters 413-425: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (z1 = _dumbo) True) (_than _mickey _dumbo)) (_smaller _mickey))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 427-431: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (z1 = _dumbo) True) (_than _mickey _dumbo)) (_smaller _mickey))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_209_adjectives multi Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _large is declared Coq < _larger is declared Coq < _mickey is declared Coq < _small is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _mickey = z1)) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((z1 = _dumbo /\ True) /\ _than _mickey _dumbo) /\ _larger _mickey) Toplevel input, characters 396-400: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (z1 = _dumbo) True) (_than _mickey _dumbo)) (_larger _mickey))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _large is declared Coq < _larger is declared Coq < _mickey is declared Coq < _small is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _mickey = z1)) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> ~ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((z1 = _dumbo /\ True) /\ _than _mickey _dumbo) /\ _larger _mickey)) Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (z1 = _dumbo) True) (_than _mickey _dumbo)) (_larger _mickey)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _large is declared Coq < _larger is declared Coq < _mickey is declared Coq < _small is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _mickey = z1)) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((z1 = _dumbo /\ True) /\ _than _mickey _dumbo) /\ _larger _mickey) 2 goals H2, H4 : True H5 : _animal _dumbo H1 : _large _dumbo H7, H9 : True H10 : _animal _mickey H6 : _small _mickey ============================ _than _mickey _dumbo goal 2 is: _larger _mickey Toplevel input, characters 412-424: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (z1 = _dumbo) True) (_than _mickey _dumbo)) (_larger _mickey))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 426-430: > Theorem t1: (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (z1 = _dumbo) True) (_than _mickey _dumbo)) (_larger _mickey))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_210_adjectives multi Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _large is declared Coq < _mickey is declared Coq < _mouse is declared Coq < _small is declared Coq < 1 goal ============================ (forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _mouse z1) /\ True) /\ _mickey = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _mickey = z1) Toplevel input, characters 371-375: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_mickey = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _large is declared Coq < _mickey is declared Coq < _mouse is declared Coq < _small is declared Coq < 1 goal ============================ (forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _mouse z1) /\ True) /\ _mickey = z1)) -> ~ (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _mickey = z1)) Toplevel input, characters 377-381: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (not (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_mickey = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _large is declared Coq < _mickey is declared Coq < _mouse is declared Coq < _small is declared Coq < 1 goal ============================ (forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _mouse z1) /\ True) /\ _mickey = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ _mickey = z1) 1 goal H : forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1 H2, H4 : True H5 : _mouse _mickey H1 : _large _mickey ============================ _animal _mickey Toplevel input, characters 387-399: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_mickey = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 401-405: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_animal z1)) True) (_mickey = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_211_adjectives multi Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _elephant is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (forall x : Entity, _elephant x -> True -> exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _elephant z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _dumbo = z1) Toplevel input, characters 373-377: > Theorem t1: (forall x, ((_elephant x) -> (True -> (exists z1, (and (and (and (_large z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_elephant z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_dumbo = z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _elephant is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (forall x : Entity, _elephant x -> True -> exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _elephant z1) /\ True) /\ _dumbo = z1)) -> ~ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _dumbo = z1)) Toplevel input, characters 379-383: > Theorem t1: (forall x, ((_elephant x) -> (True -> (exists z1, (and (and (and (_large z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_elephant z1)) True) (_dumbo = z1))))) -> (not (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_dumbo = z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _elephant is declared Coq < _large is declared Coq < _small is declared Coq < 1 goal ============================ (forall x : Entity, _elephant x -> True -> exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _elephant z1) /\ True) /\ _dumbo = z1)) -> exists x : Entity, (x = _dumbo /\ True) /\ (exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ _dumbo = z1) 1 goal H : forall x : Entity, _elephant x -> True -> exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ x = z1 H2, H4 : True H5 : _elephant _dumbo H1 : _small _dumbo ============================ _animal _dumbo Toplevel input, characters 389-401: > Theorem t1: (forall x, ((_elephant x) -> (True -> (exists z1, (and (and (and (_large z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_elephant z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_dumbo = z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 403-407: > Theorem t1: (forall x, ((_elephant x) -> (True -> (exists z1, (and (and (and (_large z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_elephant z1)) True) (_dumbo = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z1, (and (and (and (_small z1) (_animal z1)) True) (_dumbo = z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_212_adjectives multi Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _elephant is declared Coq < _large is declared Coq < _larger is declared Coq < _mickey is declared Coq < _mouse is declared Coq < _small is declared Coq < _than is declared Coq < 1 goal ============================ (forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1) -> (forall x : Entity, _elephant x -> True -> exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _mouse z1) /\ True) /\ _mickey = z1)) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z2 : Entity, ((_small z2 /\ _elephant z2) /\ True) /\ _dumbo = z2)) -> exists x : Entity, (x = _dumbo /\ True) /\ (exists z3 : Entity, ((z3 = _mickey /\ True) /\ _than _dumbo _mickey) /\ _larger _dumbo) Toplevel input, characters 621-625: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (forall x, ((_elephant x) -> (True -> (exists z1, (and (and (and (_large z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z2, (and (and (and (_small z2) (_elephant z2)) True) (_dumbo = z2))))) -> (exists x, (and (and (x = _dumbo) True) (exists z3, (and (and (and (z3 = _mickey) True) (_than _dumbo _mickey)) (_larger _dumbo))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _elephant is declared Coq < _large is declared Coq < _larger is declared Coq < _mickey is declared Coq < _mouse is declared Coq < _small is declared Coq < _than is declared Coq < 1 goal ============================ (forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1) -> (forall x : Entity, _elephant x -> True -> exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _mouse z1) /\ True) /\ _mickey = z1)) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z2 : Entity, ((_small z2 /\ _elephant z2) /\ True) /\ _dumbo = z2)) -> ~ (exists x : Entity, (x = _dumbo /\ True) /\ (exists z3 : Entity, ((z3 = _mickey /\ True) /\ _than _dumbo _mickey) /\ _larger _dumbo)) Toplevel input, characters 627-631: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (forall x, ((_elephant x) -> (True -> (exists z1, (and (and (and (_large z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z2, (and (and (and (_small z2) (_elephant z2)) True) (_dumbo = z2))))) -> (not (exists x, (and (and (x = _dumbo) True) (exists z3, (and (and (and (z3 = _mickey) True) (_than _dumbo _mickey)) (_larger _dumbo)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _dumbo is declared Coq < _elephant is declared Coq < _large is declared Coq < _larger is declared Coq < _mickey is declared Coq < _mouse is declared Coq < _small is declared Coq < _than is declared Coq < 1 goal ============================ (forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1) -> (forall x : Entity, _elephant x -> True -> exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _mouse z1) /\ True) /\ _mickey = z1)) -> (exists x : Entity, (x = _dumbo /\ True) /\ (exists z2 : Entity, ((_small z2 /\ _elephant z2) /\ True) /\ _dumbo = z2)) -> exists x : Entity, (x = _dumbo /\ True) /\ (exists z3 : Entity, ((z3 = _mickey /\ True) /\ _than _dumbo _mickey) /\ _larger _dumbo) 2 goals H : forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1 H0 : forall x : Entity, _elephant x -> True -> exists z1 : Entity, ((_large z1 /\ _animal z1) /\ True) /\ x = z1 H4, H6 : True H7 : _elephant _dumbo H3 : _small _dumbo H9, H11 : True H12 : _mouse _mickey H8 : _large _mickey ============================ _than _dumbo _mickey goal 2 is: _larger _dumbo Toplevel input, characters 637-649: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (forall x, ((_elephant x) -> (True -> (exists z1, (and (and (and (_large z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z2, (and (and (and (_small z2) (_elephant z2)) True) (_dumbo = z2))))) -> (exists x, (and (and (x = _dumbo) True) (exists z3, (and (and (and (z3 = _mickey) True) (_than _dumbo _mickey)) (_larger _dumbo))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 651-655: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (forall x, ((_elephant x) -> (True -> (exists z1, (and (and (and (_large z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _dumbo) True) (exists z2, (and (and (and (_small z2) (_elephant z2)) True) (_dumbo = z2))))) -> (exists x, (and (and (x = _dumbo) True) (exists z3, (and (and (and (z3 = _mickey) True) (_than _dumbo _mickey)) (_larger _dumbo))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_213_adjectives multi Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _large is declared Coq < _mickey is declared Coq < _mouse is declared Coq < _small is declared Coq < 1 goal ============================ (forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _mouse z1) /\ True) /\ _mickey = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ _small _mickey Toplevel input, characters 312-316: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _mickey) True) (_small _mickey))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _large is declared Coq < _mickey is declared Coq < _mouse is declared Coq < _small is declared Coq < 1 goal ============================ (forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _mouse z1) /\ True) /\ _mickey = z1)) -> ~ (exists x : Entity, (x = _mickey /\ True) /\ _small _mickey) Toplevel input, characters 318-322: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (not (exists x, (and (and (x = _mickey) True) (_small _mickey)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _animal is declared Coq < _large is declared Coq < _mickey is declared Coq < _mouse is declared Coq < _small is declared Coq < 1 goal ============================ (forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1) -> (exists x : Entity, (x = _mickey /\ True) /\ (exists z1 : Entity, ((_large z1 /\ _mouse z1) /\ True) /\ _mickey = z1)) -> exists x : Entity, (x = _mickey /\ True) /\ _small _mickey 1 goal H : forall x : Entity, _mouse x -> True -> exists z1 : Entity, ((_small z1 /\ _animal z1) /\ True) /\ x = z1 H2, H4 : True H5 : _mouse _mickey H1 : _large _mickey ============================ _small _mickey Toplevel input, characters 328-340: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _mickey) True) (_small _mickey))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 342-346: > Theorem t1: (forall x, ((_mouse x) -> (True -> (exists z1, (and (and (and (_small z1) (_animal z1)) True) (x = z1)))))) -> (exists x, (and (and (x = _mickey) True) (exists z1, (and (and (and (_large z1) (_mouse z1)) True) (_mickey = z1))))) -> (exists x, (and (and (x = _mickey) True) (_small _mickey))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_214_adjectives multi Welcome to Coq 8.15.0 Coq < Coq < _authority is declared Coq < _fat is declared Coq < _law is declared Coq < _lecturer is declared Coq < _legal is declared Coq < 1 goal ============================ (forall x : Entity, _legal x /\ _authority x -> True -> exists z1 : Entity, ((_law z1 /\ _lecturer z1) /\ True) /\ x = z1) -> (forall x : Entity, _law x /\ _lecturer x -> True -> exists z1 : Entity, ((_legal z1 /\ _authority z1) /\ True) /\ x = z1) -> forall x : Entity, (_fat x /\ _legal x) /\ _authority x -> True -> exists z1 : Entity, (((_fat z1 /\ _law z1) /\ _lecturer z1) /\ True) /\ x = z1 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _authority is declared Coq < _fat is declared Coq < _law is declared Coq < _lecturer is declared Coq < _legal is declared Coq < 1 goal ============================ (forall x : Entity, _legal x /\ _authority x -> True -> exists z1 : Entity, ((_law z1 /\ _lecturer z1) /\ True) /\ x = z1) -> (forall x : Entity, _law x /\ _lecturer x -> True -> exists z1 : Entity, ((_legal z1 /\ _authority z1) /\ True) /\ x = z1) -> ~ (forall x : Entity, (_fat x /\ _legal x) /\ _authority x -> True -> exists z1 : Entity, (((_fat z1 /\ _law z1) /\ _lecturer z1) /\ True) /\ x = z1) Toplevel input, characters 450-454: > Theorem t1: (forall x, ((and (_legal x) (_authority x)) -> (True -> (exists z1, (and (and (and (_law z1) (_lecturer z1)) True) (x = z1)))))) -> (forall x, ((and (_law x) (_lecturer x)) -> (True -> (exists z1, (and (and (and (_legal z1) (_authority z1)) True) (x = z1)))))) -> (not (forall x, ((and (and (_fat x) (_legal x)) (_authority x)) -> (True -> (exists z1, (and (and (and (and (_fat z1) (_law z1)) (_lecturer z1)) True) (x = z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _authority is declared Coq < _fat is declared Coq < _law is declared Coq < _lecturer is declared Coq < _legal is declared Coq < 1 goal ============================ (forall x : Entity, _legal x /\ _authority x -> True -> exists z1 : Entity, ((_law z1 /\ _lecturer z1) /\ True) /\ x = z1) -> (forall x : Entity, _law x /\ _lecturer x -> True -> exists z1 : Entity, ((_legal z1 /\ _authority z1) /\ True) /\ x = z1) -> forall x : Entity, (_fat x /\ _legal x) /\ _authority x -> True -> exists z1 : Entity, (((_fat z1 /\ _law z1) /\ _lecturer z1) /\ True) /\ x = z1 2 goals H : forall x : Entity, _legal x /\ _authority x -> True -> exists z1 : Entity, ((_law z1 /\ _lecturer z1) /\ True) /\ x = z1 H0 : forall x : Entity, _law x /\ _lecturer x -> True -> exists z1 : Entity, ((_legal z1 /\ _authority z1) /\ True) /\ x = z1 x : Entity H2 : True H4 : _authority x H1 : _fat x H5 : _legal x ============================ _law x goal 2 is: _lecturer x Toplevel input, characters 460-472: > Theorem t1: (forall x, ((and (_legal x) (_authority x)) -> (True -> (exists z1, (and (and (and (_law z1) (_lecturer z1)) True) (x = z1)))))) -> (forall x, ((and (_law x) (_lecturer x)) -> (True -> (exists z1, (and (and (and (_legal z1) (_authority z1)) True) (x = z1)))))) -> (forall x, ((and (and (_fat x) (_legal x)) (_authority x)) -> (True -> (exists z1, (and (and (and (and (_fat z1) (_law z1)) (_lecturer z1)) True) (x = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 474-478: > Theorem t1: (forall x, ((and (_legal x) (_authority x)) -> (True -> (exists z1, (and (and (and (_law z1) (_lecturer z1)) True) (x = z1)))))) -> (forall x, ((and (_law x) (_lecturer x)) -> (True -> (exists z1, (and (and (and (_legal z1) (_authority z1)) True) (x = z1)))))) -> (forall x, ((and (and (_fat x) (_legal x)) (_authority x)) -> (True -> (exists z1, (and (and (and (and (_fat z1) (_law z1)) (_lecturer z1)) True) (x = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_215_adjectives multi Welcome to Coq 8.15.0 Coq < Coq < _authority is declared Coq < _competent is declared Coq < _law is declared Coq < _lecturer is declared Coq < _legal is declared Coq < 1 goal ============================ (forall x : Entity, _legal x /\ _authority x -> True -> exists z1 : Entity, ((_law z1 /\ _lecturer z1) /\ True) /\ x = z1) -> (forall x : Entity, _law x /\ _lecturer x -> True -> exists z1 : Entity, ((_legal z1 /\ _authority z1) /\ True) /\ x = z1) -> forall x : Entity, (_competent x /\ _legal x) /\ _authority x -> True -> exists z1 : Entity, (((_competent z1 /\ _law z1) /\ _lecturer z1) /\ True) /\ x = z1 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _authority is declared Coq < _competent is declared Coq < _law is declared Coq < _lecturer is declared Coq < _legal is declared Coq < 1 goal ============================ (forall x : Entity, _legal x /\ _authority x -> True -> exists z1 : Entity, ((_law z1 /\ _lecturer z1) /\ True) /\ x = z1) -> (forall x : Entity, _law x /\ _lecturer x -> True -> exists z1 : Entity, ((_legal z1 /\ _authority z1) /\ True) /\ x = z1) -> ~ (forall x : Entity, (_competent x /\ _legal x) /\ _authority x -> True -> exists z1 : Entity, (((_competent z1 /\ _law z1) /\ _lecturer z1) /\ True) /\ x = z1) Toplevel input, characters 462-466: > Theorem t1: (forall x, ((and (_legal x) (_authority x)) -> (True -> (exists z1, (and (and (and (_law z1) (_lecturer z1)) True) (x = z1)))))) -> (forall x, ((and (_law x) (_lecturer x)) -> (True -> (exists z1, (and (and (and (_legal z1) (_authority z1)) True) (x = z1)))))) -> (not (forall x, ((and (and (_competent x) (_legal x)) (_authority x)) -> (True -> (exists z1, (and (and (and (and (_competent z1) (_law z1)) (_lecturer z1)) True) (x = z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _authority is declared Coq < _competent is declared Coq < _law is declared Coq < _lecturer is declared Coq < _legal is declared Coq < 1 goal ============================ (forall x : Entity, _legal x /\ _authority x -> True -> exists z1 : Entity, ((_law z1 /\ _lecturer z1) /\ True) /\ x = z1) -> (forall x : Entity, _law x /\ _lecturer x -> True -> exists z1 : Entity, ((_legal z1 /\ _authority z1) /\ True) /\ x = z1) -> forall x : Entity, (_competent x /\ _legal x) /\ _authority x -> True -> exists z1 : Entity, (((_competent z1 /\ _law z1) /\ _lecturer z1) /\ True) /\ x = z1 2 goals H : forall x : Entity, _legal x /\ _authority x -> True -> exists z1 : Entity, ((_law z1 /\ _lecturer z1) /\ True) /\ x = z1 H0 : forall x : Entity, _law x /\ _lecturer x -> True -> exists z1 : Entity, ((_legal z1 /\ _authority z1) /\ True) /\ x = z1 x : Entity H2 : True H4 : _authority x H1 : _competent x H5 : _legal x ============================ _law x goal 2 is: _lecturer x Toplevel input, characters 472-484: > Theorem t1: (forall x, ((and (_legal x) (_authority x)) -> (True -> (exists z1, (and (and (and (_law z1) (_lecturer z1)) True) (x = z1)))))) -> (forall x, ((and (_law x) (_lecturer x)) -> (True -> (exists z1, (and (and (and (_legal z1) (_authority z1)) True) (x = z1)))))) -> (forall x, ((and (and (_competent x) (_legal x)) (_authority x)) -> (True -> (exists z1, (and (and (and (and (_competent z1) (_law z1)) (_lecturer z1)) True) (x = z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 486-490: > Theorem t1: (forall x, ((and (_legal x) (_authority x)) -> (True -> (exists z1, (and (and (and (_law z1) (_lecturer z1)) True) (x = z1)))))) -> (forall x, ((and (_law x) (_lecturer x)) -> (True -> (exists z1, (and (and (and (_legal z1) (_authority z1)) True) (x = z1)))))) -> (forall x, ((and (and (_competent x) (_legal x)) (_authority x)) -> (True -> (exists z1, (and (and (and (and (_competent z1) (_law z1)) (_lecturer z1)) True) (x = z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_216_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john)) Toplevel input, characters 341-345: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john) No more goals. Toplevel input, characters 347-364: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john)) 1 goal H2 : True H3 : _fatter _john H4 : _than _john _bill H5, H7, H9 : True H11 : _politician _john H6 : _fatter _john H12 : _than _john _bill H13 : True ============================ False Toplevel input, characters 357-369: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 371-375: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john)) Toplevel input, characters 341-345: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john) No more goals. Toplevel input, characters 347-364: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john)) 1 goal H2 : True H3 : _fatter _john H4 : _than _john _bill H5, H7, H9 : True H11 : _politician _john H6 : _fatter _john H12 : _than _john _bill H13 : True ============================ False Toplevel input, characters 357-369: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 371-375: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john) No more goals. Toplevel input, characters 347-364: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _fatter is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_fatter z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _fatter _john)) 1 goal H2 : True H3 : _fatter _john H4 : _than _john _bill H5, H7, H9 : True H11 : _politician _john H6 : _fatter _john H12 : _than _john _bill H13 : True ============================ False Toplevel input, characters 357-369: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 371-375: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_fatter z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_fatter _john)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_217_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john)) Toplevel input, characters 345-349: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john) No more goals. Toplevel input, characters 351-368: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john)) 1 goal H2 : True H3 : _cleverer _john H4 : _than _john _bill H5, H7, H9 : True H11 : _politician _john H6 : _cleverer _john H12 : _than _john _bill H13 : True ============================ False Toplevel input, characters 361-373: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 375-379: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john)) Toplevel input, characters 345-349: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john) No more goals. Toplevel input, characters 351-368: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john)) 1 goal H2 : True H3 : _cleverer _john H4 : _than _john _bill H5, H7, H9 : True H11 : _politician _john H6 : _cleverer _john H12 : _than _john _bill H13 : True ============================ False Toplevel input, characters 361-373: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 375-379: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john) No more goals. Toplevel input, characters 351-368: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _bill is declared Coq < _cleverer is declared Coq < _john is declared Coq < _politician is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _john /\ True) /\ (exists z2 : Entity, (((_cleverer z2 /\ _politician z2) /\ (exists z1 : Entity, (z1 = _bill /\ True) /\ _than z2 _bill)) /\ True) /\ _john = z2)) -> ~ (exists x : Entity, (x = _john /\ True) /\ (exists z1 : Entity, ((z1 = _bill /\ True) /\ _than _john _bill) /\ _cleverer _john)) 1 goal H2 : True H3 : _cleverer _john H4 : _than _john _bill H5, H7, H9 : True H11 : _politician _john H6 : _cleverer _john H12 : _than _john _bill H13 : True ============================ False Toplevel input, characters 361-373: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 375-379: > Theorem t1: (exists x, (and (and (x = _john) True) (exists z2, (and (and (and (and (_cleverer z2) (_politician z2)) (exists z1, (and (and (z1 = _bill) True) (_than z2 _bill)))) True) (_john = z2))))) -> (not (exists x, (and (and (x = _john) True) (exists z1, (and (and (and (z1 = _bill) True) (_than _john _bill)) (_cleverer _john)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_218_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) Toplevel input, characters 198-202: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Toplevel input, characters 204-221: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (exists x, (and (and (x = _kim) True) (_clever _kim))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) 1 goal H1 : _clever _kim H2, H4, H6 : True H7 : _person _kim H3 : _clever _kim ============================ False Toplevel input, characters 214-226: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 228-232: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) Toplevel input, characters 198-202: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Toplevel input, characters 204-221: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (exists x, (and (and (x = _kim) True) (_clever _kim))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) 1 goal H1 : _clever _kim H2, H4, H6 : True H7 : _person _kim H3 : _clever _kim ============================ False Toplevel input, characters 214-226: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 228-232: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Toplevel input, characters 204-221: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (exists x, (and (and (x = _kim) True) (_clever _kim))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _person is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _person z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) 1 goal H1 : _clever _kim H2, H4, H6 : True H7 : _person _kim H3 : _clever _kim ============================ False Toplevel input, characters 214-226: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 228-232: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_person z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_219_adjectives single Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) Toplevel input, characters 202-206: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Toplevel input, characters 208-225: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (exists x, (and (and (x = _kim) True) (_clever _kim))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) 1 goal H1 : _clever _kim H2, H4, H6 : True H7 : _politician _kim H3 : _clever _kim ============================ False Toplevel input, characters 218-230: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 232-236: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) Toplevel input, characters 202-206: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Toplevel input, characters 208-225: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (exists x, (and (and (x = _kim) True) (_clever _kim))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) 1 goal H1 : _clever _kim H2, H4, H6 : True H7 : _politician _kim H3 : _clever _kim ============================ False Toplevel input, characters 218-230: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 232-236: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> exists x : Entity, (x = _kim /\ True) /\ _clever _kim No more goals. Toplevel input, characters 208-225: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (exists x, (and (and (x = _kim) True) (_clever _kim))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clever is declared Coq < _kim is declared Coq < _politician is declared Coq < 1 goal ============================ (exists x : Entity, (x = _kim /\ True) /\ (exists z1 : Entity, ((_clever z1 /\ _politician z1) /\ True) /\ _kim = z1)) -> ~ (exists x : Entity, (x = _kim /\ True) /\ _clever _kim) 1 goal H1 : _clever _kim H2, H4, H6 : True H7 : _politician _kim H3 : _clever _kim ============================ False Toplevel input, characters 218-230: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 232-236: > Theorem t1: (exists x, (and (and (x = _kim) True) (exists z1, (and (and (and (_clever z1) (_politician z1)) True) (_kim = z1))))) -> (not (exists x, (and (and (x = _kim) True) (_clever _kim)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_220_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x Toplevel input, characters 267-271: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) Toplevel input, characters 273-277: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x 1 goal x : Entity H1 : _fast x H0 : _itel_dash_xz x H2 : True x0 : Entity H : _pc_dash_6082 x0 H4 : True x1 : Entity H5 : _faster x0 H6 : _than x0 x1 H3 : _itel_dash_xz x1 H7 : True ============================ _fast x0 Toplevel input, characters 283-295: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 297-301: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_221_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x Toplevel input, characters 207-211: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) Toplevel input, characters 213-217: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x 1 goal x : Entity H : _pc_dash_6082 x H1 : True x0 : Entity H2 : _faster x H3 : _than x x0 H0 : _itel_dash_xz x0 H4 : True ============================ _fast x Toplevel input, characters 223-235: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 237-241: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_222_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) -> exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x Toplevel input, characters 267-271: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) -> ~ (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) Toplevel input, characters 273-277: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))) -> (not (exists x, (and (and (_itel_dash_xz x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) -> exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x 1 goal x : Entity H1 : _fast x H0 : _pc_dash_6082 x H2 : True x0 : Entity H : _pc_dash_6082 x0 H4 : True x1 : Entity H5 : _faster x0 H6 : _than x0 x1 H3 : _itel_dash_xz x1 H7 : True ============================ _fast x1 Toplevel input, characters 283-295: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 297-301: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_223_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _slow is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _slow x) -> exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x Toplevel input, characters 267-271: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_slow x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _slow is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _slow x) -> ~ (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) Toplevel input, characters 273-277: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_slow x))) -> (not (exists x, (and (and (_itel_dash_xz x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _slow is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _slow x) -> exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x 1 goal x : Entity H1 : _slow x H0 : _pc_dash_6082 x H2 : True x0 : Entity H : _pc_dash_6082 x0 H4 : True x1 : Entity H5 : _faster x0 H6 : _than x0 x1 H3 : _itel_dash_xz x1 H7 : True ============================ _fast x1 Toplevel input, characters 283-295: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_slow x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 297-301: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_slow x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_224_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Toplevel input, characters 295-312: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) 1 goal x : Entity H2 : _fast x H1 : _pc_dash_6082 x H3 : True x0 : Entity H4 : _as_e2 x0 H6 : _fast x0 H : _pc_dash_6082 x0 H7 : True x1 : Entity H8 : _as_e3 x0 x1 H5 : _itel_dash_xz x1 H9 : True x2 : Entity H10 : _fast x2 H0 : _itel_dash_xz x2 H11 : True ============================ False Toplevel input, characters 305-317: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Toplevel input, characters 295-312: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) 1 goal x : Entity H2 : _fast x H1 : _pc_dash_6082 x H3 : True x0 : Entity H4 : _as_e2 x0 H6 : _fast x0 H : _pc_dash_6082 x0 H7 : True x1 : Entity H8 : _as_e3 x0 x1 H5 : _itel_dash_xz x1 H9 : True x2 : Entity H10 : _fast x2 H0 : _itel_dash_xz x2 H11 : True ============================ False Toplevel input, characters 305-317: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Toplevel input, characters 295-312: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) 1 goal x : Entity H2 : _fast x H1 : _pc_dash_6082 x H3 : True x0 : Entity H4 : _as_e2 x0 H6 : _fast x0 H : _pc_dash_6082 x0 H7 : True x1 : Entity H8 : _as_e3 x0 x1 H5 : _itel_dash_xz x1 H9 : True x2 : Entity H10 : _fast x2 H0 : _itel_dash_xz x2 H11 : True ============================ False Toplevel input, characters 305-317: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 319-323: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_225_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) Toplevel input, characters 229-233: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Toplevel input, characters 235-252: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) 1 goal x : Entity H1 : _fast x H0 : _pc_dash_6082 x H2 : True x0 : Entity H3 : _as_e2 x0 H5 : _fast x0 H : _pc_dash_6082 x0 H6 : True x1 : Entity H7 : _as_e3 x0 x1 H4 : _itel_dash_xz x1 H8 : True ============================ False Toplevel input, characters 245-257: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 259-263: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) Toplevel input, characters 229-233: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Toplevel input, characters 235-252: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) 1 goal x : Entity H1 : _fast x H0 : _pc_dash_6082 x H2 : True x0 : Entity H3 : _as_e2 x0 H5 : _fast x0 H : _pc_dash_6082 x0 H6 : True x1 : Entity H7 : _as_e3 x0 x1 H4 : _itel_dash_xz x1 H8 : True ============================ False Toplevel input, characters 245-257: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 259-263: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x No more goals. Toplevel input, characters 235-252: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) 1 goal x : Entity H1 : _fast x H0 : _pc_dash_6082 x H2 : True x0 : Entity H3 : _as_e2 x0 H5 : _fast x0 H : _pc_dash_6082 x0 H6 : True x1 : Entity H7 : _as_e3 x0 x1 H4 : _itel_dash_xz x1 H8 : True ============================ False Toplevel input, characters 245-257: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 259-263: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (_fast x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_226_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) -> exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x Toplevel input, characters 283-287: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) -> ~ (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))) -> (not (exists x, (and (and (_itel_dash_xz x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _fast x) -> exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x 1 goal x : Entity H1 : _fast x H0 : _pc_dash_6082 x H2 : True x0 : Entity H3 : _as_e2 x0 H5 : _fast x0 H : _pc_dash_6082 x0 H6 : True x1 : Entity H7 : _as_e3 x0 x1 H4 : _itel_dash_xz x1 H8 : True ============================ _fast x1 Toplevel input, characters 299-311: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 313-317: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_fast x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_227_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _slow is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _slow x) -> exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x Toplevel input, characters 283-287: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_slow x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _slow is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _slow x) -> ~ (exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x) Toplevel input, characters 289-293: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_slow x))) -> (not (exists x, (and (and (_itel_dash_xz x) True) (_fast x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _slow is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> (exists x : Entity, (_pc_dash_6082 x /\ True) /\ _slow x) -> exists x : Entity, (_itel_dash_xz x /\ True) /\ _fast x 1 goal x : Entity H1 : _slow x H0 : _pc_dash_6082 x H2 : True x0 : Entity H3 : _as_e2 x0 H5 : _fast x0 H : _pc_dash_6082 x0 H6 : True x1 : Entity H7 : _as_e3 x0 x1 H4 : _itel_dash_xz x1 H8 : True ============================ _fast x1 Toplevel input, characters 299-311: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_slow x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 313-317: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (_slow x))) -> (exists x, (and (and (_itel_dash_xz x) True) (_fast x))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_228_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x) Toplevel input, characters 293-297: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 299-303: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _faster is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _faster x) 2 goals x : Entity H0 : _as_e2 x H2 : _fast x H : _pc_dash_6082 x H3 : True x0 : Entity H4 : _as_e3 x x0 H1 : _itel_dash_xz x0 H5 : True ============================ _than x x0 goal 2 is: _faster x Toplevel input, characters 309-321: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 323-327: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_229_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _slower is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _slower x) Toplevel input, characters 293-297: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_slower x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _slower is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _slower x)) Toplevel input, characters 299-303: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_slower x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _fast is declared Coq < _itel_dash_xz is declared Coq < _pc_dash_6082 is declared Coq < _slower is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (((_pc_dash_6082 x /\ True) /\ _fast x) /\ (exists z2 : Entity, (_itel_dash_xz z2 /\ True) /\ _as_e3 x z2)) /\ _as_e2 x) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_xz z1 /\ True) /\ _than x z1) /\ _slower x) 2 goals x : Entity H0 : _as_e2 x H2 : _fast x H : _pc_dash_6082 x H3 : True x0 : Entity H4 : _as_e3 x x0 H1 : _itel_dash_xz x0 H5 : True ============================ _than x x0 goal 2 is: _slower x Toplevel input, characters 309-321: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_slower x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 323-327: > Theorem t1: (exists x, (and (and (and (and (_pc_dash_6082 x) True) (_fast x)) (exists z2, (and (and (_itel_dash_xz z2) True) (_as_e3 x z2)))) (_as_e2 x))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_xz z1) True) (_than x z1)) (_slower x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_230_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 307-311: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Toplevel input, characters 313-330: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H1 : _order x0 H4, H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H10 : _order x2 H11 : _do _apcom H12 : True ============================ False Toplevel input, characters 323-335: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 337-341: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 307-311: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Toplevel input, characters 313-330: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H1 : _order x0 H4, H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H10 : _order x2 H11 : _do _apcom H12 : True ============================ False Toplevel input, characters 323-335: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 337-341: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Toplevel input, characters 313-330: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H1 : _order x0 H4, H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H10 : _order x2 H11 : _do _apcom H12 : True ============================ False Toplevel input, characters 323-335: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 337-341: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_231_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1) Toplevel input, characters 303-307: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1)) Toplevel input, characters 309-313: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _do is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H4 : True H1 : _more x0 H5 : _order x0 H6 : _do _apcom H7 : True ============================ _win _apcom x0 Toplevel input, characters 319-331: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 333-337: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_232_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _at is declared Coq < _do is declared Coq < _eleven is declared Coq < _itel is declared Coq < _least is declared Coq < _more is declared Coq < _order is declared Coq < _ten is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win_e3 _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _win_e3 _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((((_least z1 /\ _eleven z1) /\ _order z1) /\ True) /\ _at _itel z1) /\ _win_e2 _itel) Toplevel input, characters 485-489: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win_e3 _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _at is declared Coq < _do is declared Coq < _eleven is declared Coq < _itel is declared Coq < _least is declared Coq < _more is declared Coq < _order is declared Coq < _ten is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win_e3 _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _win_e3 _apcom z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((((_least z1 /\ _eleven z1) /\ _order z1) /\ True) /\ _at _itel z1) /\ _win_e2 _itel)) Toplevel input, characters 491-495: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win_e3 _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _at is declared Coq < _do is declared Coq < _eleven is declared Coq < _itel is declared Coq < _least is declared Coq < _more is declared Coq < _order is declared Coq < _ten is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win_e3 _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _do _apcom)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _win_e3 _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((((_least z1 /\ _eleven z1) /\ _order z1) /\ True) /\ _at _itel z1) /\ _win_e2 _itel) 4 goals H2 : True x0 : Entity H3 : _win_e3 _apcom x0 H4 : True H1 : _ten x0 H5 : _order x0 H8 : True x2 : Entity H9 : _win_e3 _itel x2 H10 : True H7 : _more x2 H11 : _order x2 H12 : _do _apcom H13 : True ============================ _least x2 goal 2 is: _eleven x2 goal 3 is: _at _itel x2 goal 4 is: _win_e2 _itel Toplevel input, characters 501-513: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win_e3 _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win_e3 _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_do _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_233_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 312-316: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Toplevel input, characters 318-335: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H1 : _order x0 H4, H6 : True x2 : Entity H7 : _win _itel x2 H8 : True H5 : _more x2 H10 : _order x2 H11 : _than x2 _apcom H12 : True ============================ False Toplevel input, characters 328-340: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 342-346: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 312-316: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Toplevel input, characters 318-335: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H1 : _order x0 H4, H6 : True x2 : Entity H7 : _win _itel x2 H8 : True H5 : _more x2 H10 : _order x2 H11 : _than x2 _apcom H12 : True ============================ False Toplevel input, characters 328-340: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 342-346: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Toplevel input, characters 318-335: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H1 : _order x0 H4, H6 : True x2 : Entity H7 : _win _itel x2 H8 : True H5 : _more x2 H10 : _order x2 H11 : _than x2 _apcom H12 : True ============================ False Toplevel input, characters 328-340: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 342-346: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_234_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1) Toplevel input, characters 308-312: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1)) Toplevel input, characters 314-318: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1) 1 goal H1 : True x0 : Entity H2 : _win _itel x0 H3 : True H0 : _more x0 H5 : _order x0 H6 : _than x0 _apcom H7 : True ============================ _win _apcom x0 Toplevel input, characters 324-336: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 338-342: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1) Toplevel input, characters 308-312: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1)) 1 goal H2 : True x0 : Entity H3 : _win _apcom x0 H1 : _order x0 H4, H6 : True x2 : Entity H7 : _win _itel x2 H8 : True H5 : _more x2 H10 : _order x2 H11 : _than x2 _apcom H12 : True ============================ False Toplevel input, characters 330-342: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 344-348: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1)) Toplevel input, characters 314-318: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1) 1 goal H1 : True x0 : Entity H2 : _win _itel x0 H3 : True H0 : _more x0 H5 : _order x0 H6 : _than x0 _apcom H7 : True ============================ _win _apcom x0 Toplevel input, characters 324-336: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 338-342: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1)) 1 goal H2 : True x0 : Entity H3 : _win _apcom x0 H1 : _order x0 H4, H6 : True x2 : Entity H7 : _win _itel x2 H8 : True H5 : _more x2 H10 : _order x2 H11 : _than x2 _apcom H12 : True ============================ False Toplevel input, characters 330-342: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 344-348: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1) 1 goal H1 : True x0 : Entity H2 : _win _itel x0 H3 : True H0 : _more x0 H5 : _order x0 H6 : _than x0 _apcom H7 : True ============================ _win _apcom x0 Toplevel input, characters 324-336: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 338-342: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _apcom z1)) 1 goal H2 : True x0 : Entity H3 : _win _apcom x0 H1 : _order x0 H4, H6 : True x2 : Entity H7 : _win _itel x2 H8 : True H5 : _more x2 H10 : _order x2 H11 : _than x2 _apcom H12 : True ============================ False Toplevel input, characters 330-342: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 344-348: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_win _apcom z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_235_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _at is declared Coq < _eleven is declared Coq < _itel is declared Coq < _least is declared Coq < _more is declared Coq < _order is declared Coq < _ten is declared Coq < _than is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win_e3 _itel z2)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _win_e3 _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((((_least z1 /\ _eleven z1) /\ _order z1) /\ True) /\ _at _itel z1) /\ _win_e2 _itel) Toplevel input, characters 490-494: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win_e3 _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _at is declared Coq < _eleven is declared Coq < _itel is declared Coq < _least is declared Coq < _more is declared Coq < _order is declared Coq < _ten is declared Coq < _than is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win_e3 _itel z2)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _win_e3 _apcom z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((((_least z1 /\ _eleven z1) /\ _order z1) /\ True) /\ _at _itel z1) /\ _win_e2 _itel)) Toplevel input, characters 496-500: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win_e3 _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _at is declared Coq < _eleven is declared Coq < _itel is declared Coq < _least is declared Coq < _more is declared Coq < _order is declared Coq < _ten is declared Coq < _than is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _win_e3 _itel z2)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _win_e3 _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((((_least z1 /\ _eleven z1) /\ _order z1) /\ True) /\ _at _itel z1) /\ _win_e2 _itel) 4 goals H2 : True x0 : Entity H3 : _win_e3 _apcom x0 H4 : True H1 : _ten x0 H5 : _order x0 H7 : True x2 : Entity H8 : _win_e3 _itel x2 H9 : True H6 : _more x2 H11 : _order x2 H12 : _than x2 _apcom H13 : True ============================ _least x2 goal 2 is: _eleven x2 goal 3 is: _at _itel x2 goal 4 is: _win_e2 _itel Toplevel input, characters 506-518: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win_e3 _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 520-524: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_win_e3 _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_236_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1) Toplevel input, characters 342-346: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1)) Toplevel input, characters 348-352: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1) 1 goal H1 : True x0 : Entity H2 : _win _itel x0 H3 : True H0 : _more x0 H5 : _order x0 x1 : Entity H6 : _than x0 x1 H7 : True H4 : _apcom x1 H8 : _contract x1 ============================ _win _itel x1 Toplevel input, characters 358-370: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 372-376: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1) Toplevel input, characters 342-346: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H4 : True H1 : _apcom x0 H5 : _contract x0 H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H11 : _order x2 x3 : Entity H12 : _than x2 x3 H13 : True H10 : _apcom x3 H14 : _contract x3 ============================ False Toplevel input, characters 364-376: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 378-382: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1)) Toplevel input, characters 348-352: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1) 1 goal H1 : True x0 : Entity H2 : _win _itel x0 H3 : True H0 : _more x0 H5 : _order x0 x1 : Entity H6 : _than x0 x1 H7 : True H4 : _apcom x1 H8 : _contract x1 ============================ _win _itel x1 Toplevel input, characters 358-370: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 372-376: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H4 : True H1 : _apcom x0 H5 : _contract x0 H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H11 : _order x2 x3 : Entity H12 : _than x2 x3 H13 : True H10 : _apcom x3 H14 : _contract x3 ============================ False Toplevel input, characters 364-376: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 378-382: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1) 1 goal H1 : True x0 : Entity H2 : _win _itel x0 H3 : True H0 : _more x0 H5 : _order x0 x1 : Entity H6 : _than x0 x1 H7 : True H4 : _apcom x1 H8 : _contract x1 ============================ _win _itel x1 Toplevel input, characters 358-370: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 372-376: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _contract is declared Coq < _itel is declared Coq < _more is declared Coq < _order is declared Coq < _than is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, (((_more z2 /\ _order z2) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _than z2 z1)) /\ True) /\ _win _itel z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_apcom z1 /\ _contract z1) /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H4 : True H1 : _apcom x0 H5 : _contract x0 H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H11 : _order x2 x3 : Entity H12 : _than x2 x3 H13 : True H10 : _apcom x3 H14 : _contract x3 ============================ False Toplevel input, characters 364-376: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 378-382: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_more z2) (_order z2)) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_than z2 z1)))) True) (_win _itel z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_apcom z1) (_contract z1)) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_237_comparatives single unknown
fracas_238_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _as is declared Coq < _itel is declared Coq < _many is declared Coq < _order is declared Coq < _ten is declared Coq < _than is declared Coq < _twenty is declared Coq < _twice is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((((_many z3 /\ _order z3) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _than z3 _apcom)) /\ True) /\ _as _itel z3) /\ _twice _itel) /\ _win_e2 _itel)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _win_e3 _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_twenty z1 /\ _order z1) /\ True) /\ _win_e3 _itel z1) Toplevel input, characters 493-497: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (and (and (_many z3) (_order z3)) (exists z2, (and (and (z2 = _apcom) True) (_than z3 _apcom)))) True) (_as _itel z3)) (_twice _itel)) (_win_e2 _itel))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_twenty z1) (_order z1)) True) (_win_e3 _itel z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _as is declared Coq < _itel is declared Coq < _many is declared Coq < _order is declared Coq < _ten is declared Coq < _than is declared Coq < _twenty is declared Coq < _twice is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((((_many z3 /\ _order z3) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _than z3 _apcom)) /\ True) /\ _as _itel z3) /\ _twice _itel) /\ _win_e2 _itel)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _win_e3 _apcom z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_twenty z1 /\ _order z1) /\ True) /\ _win_e3 _itel z1)) Toplevel input, characters 499-503: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (and (and (_many z3) (_order z3)) (exists z2, (and (and (z2 = _apcom) True) (_than z3 _apcom)))) True) (_as _itel z3)) (_twice _itel)) (_win_e2 _itel))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_twenty z1) (_order z1)) True) (_win_e3 _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _as is declared Coq < _itel is declared Coq < _many is declared Coq < _order is declared Coq < _ten is declared Coq < _than is declared Coq < _twenty is declared Coq < _twice is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((((_many z3 /\ _order z3) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _than z3 _apcom)) /\ True) /\ _as _itel z3) /\ _twice _itel) /\ _win_e2 _itel)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _win_e3 _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_twenty z1 /\ _order z1) /\ True) /\ _win_e3 _itel z1) 2 goals H2 : True x0 : Entity H3 : _win_e3 _apcom x0 H4 : True H1 : _ten x0 H5 : _order x0 H7 : True x2 : Entity H8 : _win_e2 _itel H9 : _twice _itel H10 : _as _itel x2 H11 : True H6 : _many x2 H13 : _order x2 H14 : _than x2 _apcom H15 : True ============================ _twenty x2 goal 2 is: _win_e3 _itel x2 Toplevel input, characters 509-521: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (and (and (_many z3) (_order z3)) (exists z2, (and (and (z2 = _apcom) True) (_than z3 _apcom)))) True) (_as _itel z3)) (_twice _itel)) (_win_e2 _itel))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_twenty z1) (_order z1)) True) (_win_e3 _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 523-527: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (and (and (_many z3) (_order z3)) (exists z2, (and (and (z2 = _apcom) True) (_than z3 _apcom)))) True) (_as _itel z3)) (_twice _itel)) (_win_e2 _itel))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_win_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_twenty z1) (_order z1)) True) (_win_e3 _itel z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_239_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 309-313: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Toplevel input, characters 315-332: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H1 : _order x0 H4, H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H10 : _order x2 H11 : _lose _apcom H12 : True ============================ False Toplevel input, characters 325-337: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 339-343: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 309-313: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Toplevel input, characters 315-332: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H1 : _order x0 H4, H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H10 : _order x2 H11 : _lose _apcom H12 : True ============================ False Toplevel input, characters 325-337: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 339-343: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1) No more goals. Toplevel input, characters 315-332: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose _apcom)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _win _itel z1)) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H1 : _order x0 H4, H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H10 : _order x2 H11 : _lose _apcom H12 : True ============================ False Toplevel input, characters 325-337: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 339-343: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose _apcom))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_order z1) True) (_win _itel z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_240_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1) Toplevel input, characters 312-316: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1)) Toplevel input, characters 318-322: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H4 : True H1 : _more x0 H5 : _order x0 H6 : _lose_e2 _apcom H7 : True ============================ _lose_e3 _apcom x0 Toplevel input, characters 328-340: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 342-346: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1) Toplevel input, characters 312-316: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1)) 1 goal H2 : True x0 : Entity H3 : _lose_e3 _apcom x0 H1 : _order x0 H4, H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H10 : _order x2 H11 : _lose_e2 _apcom H12 : True ============================ False Toplevel input, characters 334-346: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 348-352: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1)) Toplevel input, characters 318-322: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H4 : True H1 : _more x0 H5 : _order x0 H6 : _lose_e2 _apcom H7 : True ============================ _lose_e3 _apcom x0 Toplevel input, characters 328-340: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 342-346: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1)) 1 goal H2 : True x0 : Entity H3 : _lose_e3 _apcom x0 H1 : _order x0 H4, H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H10 : _order x2 H11 : _lose_e2 _apcom H12 : True ============================ False Toplevel input, characters 334-346: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 348-352: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1) 1 goal H2 : True x0 : Entity H3 : _win _itel x0 H4 : True H1 : _more x0 H5 : _order x0 H6 : _lose_e2 _apcom H7 : True ============================ _lose_e3 _apcom x0 Toplevel input, characters 328-340: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 342-346: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _itel is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> ~ (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (_order z1 /\ True) /\ _lose_e3 _apcom z1)) 1 goal H2 : True x0 : Entity H3 : _lose_e3 _apcom x0 H1 : _order x0 H4, H7 : True x2 : Entity H8 : _win _itel x2 H9 : True H6 : _more x2 H10 : _order x2 H11 : _lose_e2 _apcom H12 : True ============================ False Toplevel input, characters 334-346: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 348-352: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (not (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (_order z1) True) (_lose_e3 _apcom z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_241_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _at is declared Coq < _eleven is declared Coq < _itel is declared Coq < _least is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _ten is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win_e3 _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _lose_e3 _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((((_least z1 /\ _eleven z1) /\ _order z1) /\ True) /\ _at _itel z1) /\ _win_e2 _itel) Toplevel input, characters 491-495: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win_e3 _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_lose_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _at is declared Coq < _eleven is declared Coq < _itel is declared Coq < _least is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _ten is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win_e3 _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _lose_e3 _apcom z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((((_least z1 /\ _eleven z1) /\ _order z1) /\ True) /\ _at _itel z1) /\ _win_e2 _itel)) Toplevel input, characters 497-501: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win_e3 _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_lose_e3 _apcom z1))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _at is declared Coq < _eleven is declared Coq < _itel is declared Coq < _least is declared Coq < _lose is declared Coq < _lose_e2 is declared Coq < _lose_e3 is declared Coq < _more is declared Coq < _order is declared Coq < _ten is declared Coq < _win is declared Coq < _win_e2 is declared Coq < _win_e3 is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ (exists z1 : Entity, ((_more z1 /\ _order z1) /\ True) /\ _win_e3 _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _lose_e2 _apcom)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, ((_ten z1 /\ _order z1) /\ True) /\ _lose_e3 _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((((_least z1 /\ _eleven z1) /\ _order z1) /\ True) /\ _at _itel z1) /\ _win_e2 _itel) 4 goals H2 : True x0 : Entity H3 : _lose_e3 _apcom x0 H4 : True H1 : _ten x0 H5 : _order x0 H8 : True x2 : Entity H9 : _win_e3 _itel x2 H10 : True H7 : _more x2 H11 : _order x2 H12 : _lose_e2 _apcom H13 : True ============================ _least x2 goal 2 is: _eleven x2 goal 3 is: _at _itel x2 goal 4 is: _win_e2 _itel Toplevel input, characters 507-519: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win_e3 _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_lose_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 521-525: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (exists z1, (and (and (and (_more z1) (_order z1)) True) (_win_e3 _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_lose_e2 _apcom))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (_ten z1) (_order z1)) True) (_lose_e3 _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (and (and (_least z1) (_eleven z1)) (_order z1)) True) (_at _itel z1)) (_win_e2 _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_242_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _500 is declared Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _mips is declared Coq < _pc_dash_6082 is declared Coq < _slower is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, (((_500 z1 /\ _mips z1) /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, (((_500 z1 /\ _mips z1) /\ True) /\ _than x z1) /\ _slower x)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (and (_500 z1) (_mips z1)) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (and (_500 z1) (_mips z1)) True) (_than x z1)) (_slower x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _500 is declared Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _mips is declared Coq < _pc_dash_6082 is declared Coq < _slower is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, (((_500 z1 /\ _mips z1) /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, (((_500 z1 /\ _mips z1) /\ True) /\ _than x z1) /\ _slower x)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 429-433: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (and (_500 z1) (_mips z1)) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (and (_500 z1) (_mips z1)) True) (_than x z1)) (_slower x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _500 is declared Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _mips is declared Coq < _pc_dash_6082 is declared Coq < _slower is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, (((_500 z1 /\ _mips z1) /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, (((_500 z1 /\ _mips z1) /\ True) /\ _than x z1) /\ _slower x)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) 1 goal x : Entity H0 : _itel_dash_zx x H2 : True x0 : Entity H3 : _slower x H4 : _than x x0 H5 : True H1 : _500 x0 H6 : _mips x0 x1 : Entity H : _pc_dash_6082 x1 H8 : True x2 : Entity H9 : _faster x1 H10 : _than x1 x2 H11 : True H7 : _500 x2 H12 : _mips x2 ============================ _than x1 x Toplevel input, characters 439-451: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (and (_500 z1) (_mips z1)) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (and (_500 z1) (_mips z1)) True) (_than x z1)) (_slower x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 453-457: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (and (_500 z1) (_mips z1)) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (and (_500 z1) (_mips z1)) True) (_than x z1)) (_slower x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_243_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _2500 is declared Coq < _3000 is declared Coq < _5500 is declared Coq < _apcom is declared Coq < _computer is declared Coq < _exactly is declared Coq < _itel is declared Coq < _more is declared Coq < _sell is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((((_3000 z2 /\ _more z2) /\ _computer z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _sell _itel z2)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (((_exactly z1 /\ _2500 z1) /\ _computer z1) /\ True) /\ _sell _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_5500 z1 /\ _computer z1) /\ True) /\ _sell _itel z1) Toplevel input, characters 493-497: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (and (_3000 z2) (_more z2)) (_computer z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_sell _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_exactly z1) (_2500 z1)) (_computer z1)) True) (_sell _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_5500 z1) (_computer z1)) True) (_sell _itel z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _2500 is declared Coq < _3000 is declared Coq < _5500 is declared Coq < _apcom is declared Coq < _computer is declared Coq < _exactly is declared Coq < _itel is declared Coq < _more is declared Coq < _sell is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((((_3000 z2 /\ _more z2) /\ _computer z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _sell _itel z2)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (((_exactly z1 /\ _2500 z1) /\ _computer z1) /\ True) /\ _sell _apcom z1)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_5500 z1 /\ _computer z1) /\ True) /\ _sell _itel z1)) Toplevel input, characters 499-503: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (and (_3000 z2) (_more z2)) (_computer z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_sell _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_exactly z1) (_2500 z1)) (_computer z1)) True) (_sell _apcom z1))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_5500 z1) (_computer z1)) True) (_sell _itel z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _2500 is declared Coq < _3000 is declared Coq < _5500 is declared Coq < _apcom is declared Coq < _computer is declared Coq < _exactly is declared Coq < _itel is declared Coq < _more is declared Coq < _sell is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((((_3000 z2 /\ _more z2) /\ _computer z2) /\ (exists z1 : Entity, (z1 = _apcom /\ True) /\ _than z2 _apcom)) /\ True) /\ _sell _itel z2)) -> (exists x : Entity, (x = _apcom /\ True) /\ (exists z1 : Entity, (((_exactly z1 /\ _2500 z1) /\ _computer z1) /\ True) /\ _sell _apcom z1)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_5500 z1 /\ _computer z1) /\ True) /\ _sell _itel z1) 1 goal H2 : True x0 : Entity H3 : _sell _apcom x0 H4 : True H5 : _computer x0 H1 : _exactly x0 H6 : _2500 x0 H8 : True x2 : Entity H9 : _sell _itel x2 H10 : True H12 : _computer x2 H7 : _3000 x2 H13 : _more x2 H14 : _than x2 _apcom H15 : True ============================ _5500 x2 Toplevel input, characters 509-521: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (and (_3000 z2) (_more z2)) (_computer z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_sell _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_exactly z1) (_2500 z1)) (_computer z1)) True) (_sell _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_5500 z1) (_computer z1)) True) (_sell _itel z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 523-527: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (and (_3000 z2) (_more z2)) (_computer z2)) (exists z1, (and (and (z1 = _apcom) True) (_than z2 _apcom)))) True) (_sell _itel z2))))) -> (exists x, (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_exactly z1) (_2500 z1)) (_computer z1)) True) (_sell _apcom z1))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_5500 z1) (_computer z1)) True) (_sell _itel z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_244_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel) Toplevel input, characters 438-442: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel)) Toplevel input, characters 444-448: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel) 1 goal H1 : True x0 : Entity H2 : _have _apcom x0 H3 : True H5 : _customer x0 H0 : _more x0 H6 : _important x0 H7 : _than x0 _itel H8 : True ============================ _be _itel Toplevel input, characters 454-466: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 468-472: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel) Toplevel input, characters 438-442: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel)) 1 goal H3 : True x0 : Entity H4 : _have _apcom x0 H5 : True H6 : _customer x0 H2 : _more x0 H7 : _important x0 H8 : _be _itel H9, H11 : True x3 : Entity H12 : _have _apcom x3 H13 : True H15 : _customer x3 H10 : _more x3 H16 : _important x3 H17 : _than x3 _itel H18 : True ============================ False Toplevel input, characters 460-472: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 474-478: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel)) Toplevel input, characters 444-448: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel) 1 goal H1 : True x0 : Entity H2 : _have _apcom x0 H3 : True H5 : _customer x0 H0 : _more x0 H6 : _important x0 H7 : _than x0 _itel H8 : True ============================ _be _itel Toplevel input, characters 454-466: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 468-472: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel)) 1 goal H3 : True x0 : Entity H4 : _have _apcom x0 H5 : True H6 : _customer x0 H2 : _more x0 H7 : _important x0 H8 : _be _itel H9, H11 : True x3 : Entity H12 : _have _apcom x3 H13 : True H15 : _customer x3 H10 : _more x3 H16 : _important x3 H17 : _than x3 _itel H18 : True ============================ False Toplevel input, characters 460-472: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 474-478: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel) 1 goal H1 : True x0 : Entity H2 : _have _apcom x0 H3 : True H5 : _customer x0 H0 : _more x0 H6 : _important x0 H7 : _than x0 _itel H8 : True ============================ _be _itel Toplevel input, characters 454-466: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 468-472: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _be is declared Coq < _customer is declared Coq < _have is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _be _itel)) 1 goal H3 : True x0 : Entity H4 : _have _apcom x0 H5 : True H6 : _customer x0 H2 : _more x0 H7 : _important x0 H8 : _be _itel H9, H11 : True x3 : Entity H12 : _have _apcom x3 H13 : True H15 : _customer x3 H10 : _more x3 H16 : _important x3 H17 : _than x3 _itel H18 : True ============================ False Toplevel input, characters 460-472: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 474-478: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_be _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_245_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel) Toplevel input, characters 449-453: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel)) Toplevel input, characters 455-459: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel) 1 goal H1 : True x0 : Entity H2 : _have_e3 _apcom x0 H3 : True H5 : _customer x0 H0 : _more x0 H6 : _important x0 H7 : _than x0 _itel H8 : True ============================ _have_e2 _itel Toplevel input, characters 465-477: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 479-483: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel) Toplevel input, characters 449-453: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel)) 1 goal H3 : True x0 : Entity H4 : _have_e3 _apcom x0 H5 : True H6 : _customer x0 H2 : _more x0 H7 : _important x0 H8 : _have_e2 _itel H9, H11 : True x3 : Entity H12 : _have_e3 _apcom x3 H13 : True H15 : _customer x3 H10 : _more x3 H16 : _important x3 H17 : _than x3 _itel H18 : True ============================ False Toplevel input, characters 471-483: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 485-489: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel)) Toplevel input, characters 455-459: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel) 1 goal H1 : True x0 : Entity H2 : _have_e3 _apcom x0 H3 : True H5 : _customer x0 H0 : _more x0 H6 : _important x0 H7 : _than x0 _itel H8 : True ============================ _have_e2 _itel Toplevel input, characters 465-477: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 479-483: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel)) 1 goal H3 : True x0 : Entity H4 : _have_e3 _apcom x0 H5 : True H6 : _customer x0 H2 : _more x0 H7 : _important x0 H8 : _have_e2 _itel H9, H11 : True x3 : Entity H12 : _have_e3 _apcom x3 H13 : True H15 : _customer x3 H10 : _more x3 H16 : _important x3 H17 : _than x3 _itel H18 : True ============================ False Toplevel input, characters 471-483: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 485-489: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel) 1 goal H1 : True x0 : Entity H2 : _have_e3 _apcom x0 H3 : True H5 : _customer x0 H0 : _more x0 H6 : _important x0 H7 : _than x0 _itel H8 : True ============================ _have_e2 _itel Toplevel input, characters 465-477: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 479-483: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _apcom is declared Coq < _customer is declared Coq < _have is declared Coq < _have_e2 is declared Coq < _have_e3 is declared Coq < _important is declared Coq < _itel is declared Coq < _more is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (x = _apcom /\ True) /\ (exists z2 : Entity, ((((_more z2 /\ _important z2) /\ _customer z2) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _than z2 _itel)) /\ True) /\ _have_e3 _apcom z2)) -> ~ (exists x : Entity, ((x = _apcom /\ True) /\ (exists z1 : Entity, (((_more z1 /\ _important z1) /\ _customer z1) /\ True) /\ _have_e3 _apcom z1)) /\ (exists z2 : Entity, (z2 = _itel /\ True) /\ _have_e2 _itel)) 1 goal H3 : True x0 : Entity H4 : _have_e3 _apcom x0 H5 : True H6 : _customer x0 H2 : _more x0 H7 : _important x0 H8 : _have_e2 _itel H9, H11 : True x3 : Entity H12 : _have_e3 _apcom x3 H13 : True H15 : _customer x3 H10 : _more x3 H16 : _important x3 H17 : _than x3 _itel H18 : True ============================ False Toplevel input, characters 471-483: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 485-489: > Theorem t1: (exists x, (and (and (x = _apcom) True) (exists z2, (and (and (and (and (and (_more z2) (_important z2)) (_customer z2)) (exists z1, (and (and (z1 = _itel) True) (_than z2 _itel)))) True) (_have_e3 _apcom z2))))) -> (not (exists x, (and (and (and (x = _apcom) True) (exists z1, (and (and (and (and (_more z1) (_important z1)) (_customer z1)) True) (_have_e3 _apcom z1)))) (exists z2, (and (and (z2 = _itel) True) (_have_e2 _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_246_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 415-419: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Toplevel input, characters 421-438: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) 1 goal x : Entity H1 : _pc_dash_6082 x H3 : True x0 : Entity H4 : _faster x H5 : _than x x0 H2 : _itel_dash_zx x0 H6 : True x1 : Entity H7 : forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x1 z1 /\ _faster x1 H : _pc_dash_6082 x1 H8 : True x3 : Entity H0 : _itel_dash_zx x3 H10, H12 : True H9 : _itel x3 H13 : _computer x3 ============================ False Toplevel input, characters 431-443: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 445-449: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 415-419: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Toplevel input, characters 421-438: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) 1 goal x : Entity H1 : _pc_dash_6082 x H3 : True x0 : Entity H4 : _faster x H5 : _than x x0 H2 : _itel_dash_zx x0 H6 : True x1 : Entity H7 : forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x1 z1 /\ _faster x1 H : _pc_dash_6082 x1 H8 : True x3 : Entity H0 : _itel_dash_zx x3 H10, H12 : True H9 : _itel x3 H13 : _computer x3 ============================ False Toplevel input, characters 431-443: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 445-449: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Toplevel input, characters 421-438: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) 1 goal x : Entity H1 : _pc_dash_6082 x H3 : True x0 : Entity H4 : _faster x H5 : _than x x0 H2 : _itel_dash_zx x0 H6 : True x1 : Entity H7 : forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x1 z1 /\ _faster x1 H : _pc_dash_6082 x1 H8 : True x3 : Entity H0 : _itel_dash_zx x3 H10, H12 : True H9 : _itel x3 H13 : _computer x3 ============================ False Toplevel input, characters 431-443: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 445-449: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_247_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, (((_itel z1 /\ _computer z1) /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) Toplevel input, characters 411-415: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (and (_itel z1) (_computer z1)) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, (((_itel z1 /\ _computer z1) /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 417-421: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (and (_itel z1) (_computer z1)) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, (((_itel z1 /\ _computer z1) /\ True) /\ _than x z1) /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) 1 goal x0 : Entity H0 : _itel_dash_zx x0 H2, H4 : True H1 : _itel x0 H5 : _computer x0 x1 : Entity H : _pc_dash_6082 x1 H7 : True x2 : Entity H8 : _faster x1 H9 : _than x1 x2 H10 : True H6 : _itel x2 H11 : _computer x2 ============================ _than x1 x0 Toplevel input, characters 427-439: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (and (_itel z1) (_computer z1)) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 441-445: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (and (_itel z1) (_computer z1)) True) (_than x z1)) (_faster x))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_248_comparatives multi Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 415-419: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Toplevel input, characters 421-438: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) 1 goal x : Entity H1 : _pc_dash_6082 x H3 : True x0 : Entity H4 : _faster x H5 : _than x x0 H2 : _itel_dash_zx x0 H6 : True x1 : Entity H7 : forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x1 z1 /\ _faster x1 H : _pc_dash_6082 x1 H8 : True x3 : Entity H0 : _itel_dash_zx x3 H10, H12 : True H9 : _itel x3 H13 : _computer x3 ============================ False Toplevel input, characters 431-443: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 445-449: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 415-419: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Toplevel input, characters 421-438: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) 1 goal x : Entity H1 : _pc_dash_6082 x H3 : True x0 : Entity H4 : _faster x H5 : _than x x0 H2 : _itel_dash_zx x0 H6 : True x1 : Entity H7 : forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x1 z1 /\ _faster x1 H : _pc_dash_6082 x1 H8 : True x3 : Entity H0 : _itel_dash_zx x3 H10, H12 : True H9 : _itel x3 H13 : _computer x3 ============================ False Toplevel input, characters 431-443: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 445-449: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Toplevel input, characters 421-438: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _computer is declared Coq < _faster is declared Coq < _itel is declared Coq < _itel_dash_zx is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x z1 /\ _faster x)) -> (exists x : Entity, (_itel_dash_zx x /\ True) /\ (exists z1 : Entity, ((_itel z1 /\ _computer z1) /\ True) /\ x = z1)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) 1 goal x : Entity H1 : _pc_dash_6082 x H3 : True x0 : Entity H4 : _faster x H5 : _than x x0 H2 : _itel_dash_zx x0 H6 : True x1 : Entity H7 : forall z1 : Entity, _itel z1 /\ _computer z1 -> True -> _than x1 z1 /\ _faster x1 H : _pc_dash_6082 x1 H8 : True x3 : Entity H0 : _itel_dash_zx x3 H10, H12 : True H9 : _itel x3 H13 : _computer x3 ============================ False Toplevel input, characters 431-443: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 445-449: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (forall z1, ((and (_itel z1) (_computer z1)) -> (True -> (and (_than x z1) (_faster x))))))) -> (exists x, (and (and (_itel_dash_zx x) True) (exists z1, (and (and (and (_itel z1) (_computer z1)) True) (x = z1))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_249_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 369-373: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Toplevel input, characters 375-392: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) 1 goal x : Entity H0 : _pc_dash_6082 x H2 : True x0 : Entity H3 : _faster x H4 : _than x x0 H1 : _itel_dash_zx x0 H5 : True x1 : Entity H : _pc_dash_6082 x1 H8 : True x2 : Entity H9 : _faster x1 H10 : _than x1 x2 H7 : _itel_dash_zx x2 H11 : True x3 : Entity H12 : _faster x1 H13 : _than x1 x3 H6 : _itel_dash_zy x3 H14 : True ============================ False Toplevel input, characters 385-397: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 399-403: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 369-373: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Toplevel input, characters 375-392: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) 1 goal x : Entity H0 : _pc_dash_6082 x H2 : True x0 : Entity H3 : _faster x H4 : _than x x0 H1 : _itel_dash_zx x0 H5 : True x1 : Entity H : _pc_dash_6082 x1 H8 : True x2 : Entity H9 : _faster x1 H10 : _than x1 x2 H7 : _itel_dash_zx x2 H11 : True x3 : Entity H12 : _faster x1 H13 : _than x1 x3 H6 : _itel_dash_zy x3 H14 : True ============================ False Toplevel input, characters 385-397: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 399-403: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) No more goals. Toplevel input, characters 375-392: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, ((_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) /\ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x)) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) 1 goal x : Entity H0 : _pc_dash_6082 x H2 : True x0 : Entity H3 : _faster x H4 : _than x x0 H1 : _itel_dash_zx x0 H5 : True x1 : Entity H : _pc_dash_6082 x1 H8 : True x2 : Entity H9 : _faster x1 H10 : _than x1 x2 H7 : _itel_dash_zx x2 H11 : True x3 : Entity H12 : _faster x1 H13 : _than x1 x3 H6 : _itel_dash_zy x3 H14 : True ============================ False Toplevel input, characters 385-397: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 399-403: > Theorem t1: (exists x, (and (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_250_comparatives single Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ ((exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) \/ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x))) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) Toplevel input, characters 362-366: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (or (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x)))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ ((exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) \/ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x))) -> ~ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x)) Toplevel input, characters 368-372: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (or (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x)))))) -> (not (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _faster is declared Coq < _itel_dash_zx is declared Coq < _itel_dash_zy is declared Coq < _pc_dash_6082 is declared Coq < _than is declared Coq < 1 goal ============================ (exists x : Entity, (_pc_dash_6082 x /\ True) /\ ((exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) \/ (exists z2 : Entity, ((_itel_dash_zy z2 /\ True) /\ _than x z2) /\ _faster x))) -> exists x : Entity, (_pc_dash_6082 x /\ True) /\ (exists z1 : Entity, ((_itel_dash_zx z1 /\ True) /\ _than x z1) /\ _faster x) 1 goal x : Entity H : _pc_dash_6082 x H1 : True x0 : Entity H2 : _faster x H3 : _than x x0 H0 : _itel_dash_zy x0 H4 : True ============================ _itel_dash_zx x0 Toplevel input, characters 378-390: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (or (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x)))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 392-396: > Theorem t1: (exists x, (and (and (_pc_dash_6082 x) True) (or (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))) (exists z2, (and (and (and (_itel_dash_zy z2) True) (_than x z2)) (_faster x)))))) -> (exists x, (and (and (_pc_dash_6082 x) True) (exists z1, (and (and (and (_itel_dash_zx z1) True) (_than x z1)) (_faster x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_251_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _currently is declared Coq < _factory is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_factory z2 /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in z2 _birmingham)) /\ True) /\ _have _itel z2)) -> exists x : Entity, ((x = _itel /\ True) /\ _currently _itel) /\ (exists z2 : Entity, ((_factory z2 /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in z2 _birmingham)) /\ True) /\ _have _itel z2) Toplevel input, characters 404-408: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_factory z2) (exists z1, (and (and (z1 = _birmingham) True) (_in z2 _birmingham)))) True) (_have _itel z2))))) -> (exists x, (and (and (and (x = _itel) True) (_currently _itel)) (exists z2, (and (and (and (_factory z2) (exists z1, (and (and (z1 = _birmingham) True) (_in z2 _birmingham)))) True) (_have _itel z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _currently is declared Coq < _factory is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_factory z2 /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in z2 _birmingham)) /\ True) /\ _have _itel z2)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ _currently _itel) /\ (exists z2 : Entity, ((_factory z2 /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in z2 _birmingham)) /\ True) /\ _have _itel z2)) Toplevel input, characters 410-414: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_factory z2) (exists z1, (and (and (z1 = _birmingham) True) (_in z2 _birmingham)))) True) (_have _itel z2))))) -> (not (exists x, (and (and (and (x = _itel) True) (_currently _itel)) (exists z2, (and (and (and (_factory z2) (exists z1, (and (and (z1 = _birmingham) True) (_in z2 _birmingham)))) True) (_have _itel z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _currently is declared Coq < _factory is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_factory z2 /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in z2 _birmingham)) /\ True) /\ _have _itel z2)) -> exists x : Entity, ((x = _itel /\ True) /\ _currently _itel) /\ (exists z2 : Entity, ((_factory z2 /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in z2 _birmingham)) /\ True) /\ _have _itel z2) 1 goal H1 : True x0 : Entity H2 : _have _itel x0 H3 : True H0 : _factory x0 H5 : _in x0 _birmingham H6 : True ============================ _currently _itel Toplevel input, characters 420-432: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_factory z2) (exists z1, (and (and (z1 = _birmingham) True) (_in z2 _birmingham)))) True) (_have _itel z2))))) -> (exists x, (and (and (and (x = _itel) True) (_currently _itel)) (exists z2, (and (and (and (_factory z2) (exists z1, (and (and (z1 = _birmingham) True) (_in z2 _birmingham)))) True) (_have _itel z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 434-438: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_factory z2) (exists z1, (and (and (z1 = _birmingham) True) (_in z2 _birmingham)))) True) (_have _itel z2))))) -> (exists x, (and (and (and (x = _itel) True) (_currently _itel)) (exists z2, (and (and (and (_factory z2) (exists z1, (and (and (z1 = _birmingham) True) (_in z2 _birmingham)))) True) (_have _itel z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_252_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) Toplevel input, characters 653-657: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham))) Toplevel input, characters 659-663: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) 1 goal H1 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) H3 : _be _itel H4 : _have _itel H5 : True H6 : _in _itel _birmingham H7, H0 : True x2 : Entity H9 : _now x2 H8 : _1996 x2 H11 : True ============================ _1993 _birmingham Toplevel input, characters 669-681: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 683-687: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) Toplevel input, characters 653-657: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham))) 1 goal H2 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) H4 : _be _itel H5 : _have _itel H6 : True H7 : _in _itel _birmingham H8, H0 : True x2 : Entity H10 : _now x2 H9 : _1996 x2 H12, H14 : True x4 : Entity H16 : _in _itel x4 H13 : _1993 x4 H17 : True H18 : _in _itel _birmingham H19 : True ============================ False Toplevel input, characters 675-687: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 689-693: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham))) Toplevel input, characters 659-663: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) 1 goal H1 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) H3 : _be _itel H4 : _have _itel H5 : True H6 : _in _itel _birmingham H7, H0 : True x2 : Entity H9 : _now x2 H8 : _1996 x2 H11 : True ============================ _1993 _birmingham Toplevel input, characters 669-681: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 683-687: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham))) 1 goal H2 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) H4 : _be _itel H5 : _have _itel H6 : True H7 : _in _itel _birmingham H8, H0 : True x2 : Entity H10 : _now x2 H9 : _1996 x2 H12, H14 : True x4 : Entity H16 : _in _itel x4 H13 : _1993 x4 H17 : True H18 : _in _itel _birmingham H19 : True ============================ False Toplevel input, characters 675-687: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 689-693: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) 1 goal H1 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) H3 : _be _itel H4 : _have _itel H5 : True H6 : _in _itel _birmingham H7, H0 : True x2 : Entity H9 : _now x2 H8 : _1996 x2 H11 : True ============================ _1993 _birmingham Toplevel input, characters 669-681: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 683-687: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _be is declared Coq < _birmingham is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) /\ (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham))) 1 goal H2 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, (((x = _itel /\ True) /\ _have _itel) /\ _be _itel) /\ (exists z1 : Entity, (z1 = _birmingham /\ True) /\ _in _itel _birmingham)) H4 : _be _itel H5 : _have _itel H6 : True H7 : _in _itel _birmingham H8, H0 : True x2 : Entity H10 : _now x2 H9 : _1996 x2 H12, H14 : True x4 : Entity H16 : _in _itel x4 H13 : _1993 x4 H17 : True H18 : _in _itel _birmingham H19 : True ============================ False Toplevel input, characters 675-687: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 689-693: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) (exists x, (and (and (and (and (x = _itel) True) (_have _itel)) (_be _itel)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _birmingham) True) (_in _itel _birmingham)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_253_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1)) Toplevel input, characters 498-502: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1))) Toplevel input, characters 504-508: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1)) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H8 : _develop _itel x2 H9 : True H5 : _new x2 H11 : _editor x2 x3 : Entity H12 : _since x2 x3 H10 : _1992 x3 H13 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 514-526: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 528-532: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1)) Toplevel input, characters 498-502: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1))) 1 goal H3 : True x0 : Entity H5 : _in _itel x0 H2 : _1993 x0 H6 : True x1 : Entity H7 : _develop _itel x1 H8 : True H4 : _new x1 H9 : _editor x1 H11 : _have _itel H12 : True x3 : Entity H13 : _develop _itel x3 H14 : True H10 : _new x3 H16 : _editor x3 x4 : Entity H17 : _since x3 x4 H15 : _1992 x4 H18, H0 : True x6 : Entity H20 : _now x6 H19 : _1996 x6 H22 : True ============================ False Toplevel input, characters 520-532: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 534-538: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1))) Toplevel input, characters 504-508: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1)) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H8 : _develop _itel x2 H9 : True H5 : _new x2 H11 : _editor x2 x3 : Entity H12 : _since x2 x3 H10 : _1992 x3 H13 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 514-526: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 528-532: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1))) 1 goal H3 : True x0 : Entity H5 : _in _itel x0 H2 : _1993 x0 H6 : True x1 : Entity H7 : _develop _itel x1 H8 : True H4 : _new x1 H9 : _editor x1 H11 : _have _itel H12 : True x3 : Entity H13 : _develop _itel x3 H14 : True H10 : _new x3 H16 : _editor x3 x4 : Entity H17 : _since x3 x4 H15 : _1992 x4 H18, H0 : True x6 : Entity H20 : _now x6 H19 : _1996 x6 H22 : True ============================ False Toplevel input, characters 520-532: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 534-538: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1)) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H8 : _develop _itel x2 H9 : True H5 : _new x2 H11 : _editor x2 x3 : Entity H12 : _since x2 x3 H10 : _1992 x3 H13 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 514-526: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 528-532: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _develop is declared Coq < _editor is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _new is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, (((_new z2 /\ _editor z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _since z2 z1)) /\ True) /\ _develop _itel z2)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, ((_new z1 /\ _editor z1) /\ True) /\ _develop _itel z1))) 1 goal H3 : True x0 : Entity H5 : _in _itel x0 H2 : _1993 x0 H6 : True x1 : Entity H7 : _develop _itel x1 H8 : True H4 : _new x1 H9 : _editor x1 H11 : _have _itel H12 : True x3 : Entity H13 : _develop _itel x3 H14 : True H10 : _new x3 H16 : _editor x3 x4 : Entity H17 : _since x3 x4 H15 : _1992 x4 H18, H0 : True x6 : Entity H20 : _now x6 H19 : _1996 x6 H22 : True ============================ False Toplevel input, characters 520-532: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 534-538: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (and (_new z2) (_editor z2)) (exists z1, (and (and (_1992 z1) True) (_since z2 z1)))) True) (_develop _itel z2))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (and (_new z1) (_editor z1)) True) (_develop _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_254_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel) Toplevel input, characters 375-379: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel)) Toplevel input, characters 381-385: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H8 : _expand _itel H9 : _since _itel x2 H5 : _1992 x2 H10 : True ============================ _1993 ?z1 goal 2 is: _in _itel ?z1 Toplevel input, characters 391-403: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 405-409: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel) Toplevel input, characters 375-379: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel)) 1 goal H3 : True x0 : Entity H4 : _expand _itel H5 : _in _itel x0 H2 : _1993 x0 H6 : True H8 : _have _itel H9 : True x2 : Entity H10 : _expand _itel H11 : _since _itel x2 H7 : _1992 x2 H12, H0 : True x4 : Entity H14 : _now x4 H13 : _1996 x4 H16 : True ============================ False Toplevel input, characters 397-409: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 411-415: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel)) Toplevel input, characters 381-385: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H8 : _expand _itel H9 : _since _itel x2 H5 : _1992 x2 H10 : True ============================ _1993 ?z1 goal 2 is: _in _itel ?z1 Toplevel input, characters 391-403: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 405-409: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel)) 1 goal H3 : True x0 : Entity H4 : _expand _itel H5 : _in _itel x0 H2 : _1993 x0 H6 : True H8 : _have _itel H9 : True x2 : Entity H10 : _expand _itel H11 : _since _itel x2 H7 : _1992 x2 H12, H0 : True x4 : Entity H14 : _now x4 H13 : _1996 x4 H16 : True ============================ False Toplevel input, characters 397-409: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 411-415: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H8 : _expand _itel H9 : _since _itel x2 H5 : _1992 x2 H10 : True ============================ _1993 ?z1 goal 2 is: _in _itel ?z1 Toplevel input, characters 391-403: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 405-409: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _expand is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _since _itel z1) /\ _expand _itel)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1993 z1 /\ True) /\ _in _itel z1) /\ _expand _itel)) 1 goal H3 : True x0 : Entity H4 : _expand _itel H5 : _in _itel x0 H2 : _1993 x0 H6 : True H8 : _have _itel H9 : True x2 : Entity H10 : _expand _itel H11 : _since _itel x2 H7 : _1992 x2 H12, H0 : True x4 : Entity H14 : _now x4 H13 : _1996 x4 H16 : True ============================ False Toplevel input, characters 397-409: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 411-415: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (and (_1992 z1) True) (_since _itel z1)) (_expand _itel))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1993 z1) True) (_in _itel z1)) (_expand _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_255_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) Toplevel input, characters 572-576: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) Toplevel input, characters 578-582: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) 2 focused goals (shelved: 1) H1 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) H3 : _have _itel H4 : True x0 : Entity H5 : _make _itel x0 H2 : _loss x0 H6, H0 : True x2 : Entity H8 : _now x2 H7 : _1996 x2 H10 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 588-600: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 602-606: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) Toplevel input, characters 572-576: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) 1 goal H2 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) H4 : _have _itel H5 : True x0 : Entity H6 : _make _itel x0 H3 : _loss x0 H7, H0 : True x2 : Entity H9 : _now x2 H8 : _1996 x2 H11, H13 : True x4 : Entity H15 : _in _itel x4 H12 : _1993 x4 H16 : True x5 : Entity H17 : _make _itel x5 H14 : _loss x5 H18 : True ============================ False Toplevel input, characters 594-606: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 608-612: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) Toplevel input, characters 578-582: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) 2 focused goals (shelved: 1) H1 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) H3 : _have _itel H4 : True x0 : Entity H5 : _make _itel x0 H2 : _loss x0 H6, H0 : True x2 : Entity H8 : _now x2 H7 : _1996 x2 H10 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 588-600: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 602-606: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) 1 goal H2 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) H4 : _have _itel H5 : True x0 : Entity H6 : _make _itel x0 H3 : _loss x0 H7, H0 : True x2 : Entity H9 : _now x2 H8 : _1996 x2 H11, H13 : True x4 : Entity H15 : _in _itel x4 H12 : _1993 x4 H16 : True x5 : Entity H17 : _make _itel x5 H14 : _loss x5 H18 : True ============================ False Toplevel input, characters 594-606: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 608-612: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) 2 focused goals (shelved: 1) H1 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) H3 : _have _itel H4 : True x0 : Entity H5 : _make _itel x0 H2 : _loss x0 H6, H0 : True x2 : Entity H8 : _now x2 H7 : _1996 x2 H10 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 588-600: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 602-606: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) /\ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) 1 goal H2 : _since (exists x : Entity, (_1992 x /\ True) /\ True) (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) H4 : _have _itel H5 : True x0 : Entity H6 : _make _itel x0 H3 : _loss x0 H7, H0 : True x2 : Entity H9 : _now x2 H8 : _1996 x2 H11, H13 : True x4 : Entity H15 : _in _itel x4 H12 : _1993 x4 H16 : True x5 : Entity H17 : _make _itel x5 H14 : _loss x5 H18 : True ============================ False Toplevel input, characters 594-606: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 608-612: > Theorem t1: (and (_since (exists x, (and (and (_1992 x) True) True)) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_256_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) Toplevel input, characters 459-463: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) Toplevel input, characters 465-469: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H9 : _since _itel x2 H5 : _1992 x2 H10 : True x3 : Entity H11 : _make _itel x3 H8 : _loss x3 H12 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 475-487: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 489-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) Toplevel input, characters 459-463: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) 1 goal H3 : True x0 : Entity H5 : _in _itel x0 H2 : _1993 x0 H6 : True x1 : Entity H7 : _make _itel x1 H4 : _loss x1 H8 : True H10 : _have _itel H11 : True x3 : Entity H13 : _since _itel x3 H9 : _1992 x3 H14 : True x4 : Entity H15 : _make _itel x4 H12 : _loss x4 H16, H0 : True x6 : Entity H18 : _now x6 H17 : _1996 x6 H20 : True ============================ False Toplevel input, characters 481-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 495-499: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) Toplevel input, characters 465-469: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H9 : _since _itel x2 H5 : _1992 x2 H10 : True x3 : Entity H11 : _make _itel x3 H8 : _loss x3 H12 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 475-487: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 489-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) 1 goal H3 : True x0 : Entity H5 : _in _itel x0 H2 : _1993 x0 H6 : True x1 : Entity H7 : _make _itel x1 H4 : _loss x1 H8 : True H10 : _have _itel H11 : True x3 : Entity H13 : _since _itel x3 H9 : _1992 x3 H14 : True x4 : Entity H15 : _make _itel x4 H12 : _loss x4 H16, H0 : True x6 : Entity H18 : _now x6 H17 : _1996 x6 H20 : True ============================ False Toplevel input, characters 481-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 495-499: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H9 : _since _itel x2 H5 : _1992 x2 H10 : True x3 : Entity H11 : _make _itel x3 H8 : _loss x3 H12 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 475-487: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 489-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) 1 goal H3 : True x0 : Entity H5 : _in _itel x0 H2 : _1993 x0 H6 : True x1 : Entity H7 : _make _itel x1 H4 : _loss x1 H8 : True H10 : _have _itel H11 : True x3 : Entity H13 : _since _itel x3 H9 : _1992 x3 H14 : True x4 : Entity H15 : _make _itel x4 H12 : _loss x4 H16, H0 : True x6 : Entity H18 : _now x6 H17 : _1996 x6 H20 : True ============================ False Toplevel input, characters 481-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 495-499: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_257_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) Toplevel input, characters 459-463: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) Toplevel input, characters 465-469: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H9 : _since _itel x2 H5 : _1992 x2 H10 : True x3 : Entity H11 : _make _itel x3 H8 : _loss x3 H12 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 475-487: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 489-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) Toplevel input, characters 459-463: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) 1 goal H3 : True x0 : Entity H5 : _in _itel x0 H2 : _1993 x0 H6 : True x1 : Entity H7 : _make _itel x1 H4 : _loss x1 H8 : True H10 : _have _itel H11 : True x3 : Entity H13 : _since _itel x3 H9 : _1992 x3 H14 : True x4 : Entity H15 : _make _itel x4 H12 : _loss x4 H16, H0 : True x6 : Entity H18 : _now x6 H17 : _1996 x6 H20 : True ============================ False Toplevel input, characters 481-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 495-499: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) Toplevel input, characters 465-469: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H9 : _since _itel x2 H5 : _1992 x2 H10 : True x3 : Entity H11 : _make _itel x3 H8 : _loss x3 H12 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 475-487: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 489-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) 1 goal H3 : True x0 : Entity H5 : _in _itel x0 H2 : _1993 x0 H6 : True x1 : Entity H7 : _make _itel x1 H4 : _loss x1 H8 : True H10 : _have _itel H11 : True x3 : Entity H13 : _since _itel x3 H9 : _1992 x3 H14 : True x4 : Entity H15 : _make _itel x4 H12 : _loss x4 H16, H0 : True x6 : Entity H18 : _now x6 H17 : _1996 x6 H20 : True ============================ False Toplevel input, characters 481-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 495-499: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1)) 2 focused goals (shelved: 1) H0 : True x0 : Entity H2 : _now x0 H1 : _1996 x0 H4 : True H6 : _have _itel H7 : True x2 : Entity H9 : _since _itel x2 H5 : _1992 x2 H10 : True x3 : Entity H11 : _make _itel x3 H8 : _loss x3 H12 : True ============================ _1993 ?z2 goal 2 is: _in _itel ?z2 Toplevel input, characters 475-487: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 489-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _1996 is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _loss is declared Coq < _make is declared Coq < _now is declared Coq < _since is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _since _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) -> (exists x : Entity, (True /\ _now x) /\ (exists z2 : Entity, (_1996 z2 /\ True) /\ x = z2)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_loss z1 /\ True) /\ _make _itel z1))) 1 goal H3 : True x0 : Entity H5 : _in _itel x0 H2 : _1993 x0 H6 : True x1 : Entity H7 : _make _itel x1 H4 : _loss x1 H8 : True H10 : _have _itel H11 : True x3 : Entity H13 : _since _itel x3 H9 : _1992 x3 H14 : True x4 : Entity H15 : _make _itel x4 H12 : _loss x4 H16, H0 : True x6 : Entity H18 : _now x6 H17 : _1996 x6 H20 : True ============================ False Toplevel input, characters 481-493: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 495-499: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_1992 z2) True) (_since _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1))))))) -> (exists x, (and (and True (_now x)) (exists z2, (and (and (_1996 z2) True) (x = z2))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_loss z1) True) (_make _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_258_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel) Toplevel input, characters 438-442: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel)) Toplevel input, characters 444-448: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel) 3 focused goals (shelved: 1) H0 : _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) x : Entity H2 : True H : _1993 x H3 : _apcom x H4 : _found x _itel H5 : True ============================ _1992 ?z1 goal 2 is: _in_e3 _itel ?z1 goal 3 is: _exist _itel Toplevel input, characters 454-466: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 468-472: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel) Toplevel input, characters 438-442: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel)) 1 goal H1 : _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) x : Entity H3 : True H : _1993 x H4 : _apcom x H5 : _found x _itel H6, H8 : True x2 : Entity H9 : _exist _itel H10 : _in_e3 _itel x2 H7 : _1992 x2 H11 : True ============================ False Toplevel input, characters 460-472: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 474-478: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel)) Toplevel input, characters 444-448: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel) 3 focused goals (shelved: 1) H0 : _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) x : Entity H2 : True H : _1993 x H3 : _apcom x H4 : _found x _itel H5 : True ============================ _1992 ?z1 goal 2 is: _in_e3 _itel ?z1 goal 3 is: _exist _itel Toplevel input, characters 454-466: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 468-472: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel)) 1 goal H1 : _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) x : Entity H3 : True H : _1993 x H4 : _apcom x H5 : _found x _itel H6, H8 : True x2 : Entity H9 : _exist _itel H10 : _in_e3 _itel x2 H7 : _1992 x2 H11 : True ============================ False Toplevel input, characters 460-472: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 474-478: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel) 3 focused goals (shelved: 1) H0 : _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) x : Entity H2 : True H : _1993 x H3 : _apcom x H4 : _found x _itel H5 : True ============================ _1992 ?z1 goal 2 is: _in_e3 _itel ?z1 goal 3 is: _exist _itel Toplevel input, characters 454-466: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 468-472: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _1993 is declared Coq < _apcom is declared Coq < _exist is declared Coq < _found is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _march is declared Coq < 1 goal ============================ _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) /\ (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, ((_1992 z1 /\ True) /\ _in_e3 _itel z1) /\ _exist _itel)) 1 goal H1 : _in_t3 (exists x : Entity, (x = _march /\ True) /\ True) (exists x : Entity, ((_1993 x /\ _apcom x) /\ True) /\ (exists z1 : Entity, (z1 = _itel /\ True) /\ _found x _itel)) x : Entity H3 : True H : _1993 x H4 : _apcom x H5 : _found x _itel H6, H8 : True x2 : Entity H9 : _exist _itel H10 : _in_e3 _itel x2 H7 : _1992 x2 H11 : True ============================ False Toplevel input, characters 460-472: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 474-478: > Theorem t1: (and (_in_t3 (exists x, (and (and (x = _march) True) True)) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) (exists x, (and (and (and (_1993 x) (_apcom x)) True) (exists z1, (and (and (z1 = _itel) True) (_found x _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z1, (and (and (and (_1992 z1) True) (_in_e3 _itel z1)) (_exist _itel)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_259_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _2 is declared Coq < _4th is declared Coq < _8th is declared Coq < _conference is declared Coq < _day is declared Coq < _july is declared Coq < _last is declared Coq < _on is declared Coq < _over is declared Coq < _start is declared Coq < 1 goal ============================ (exists x : Entity, (_conference x /\ True) /\ (exists z1 : Entity, ((((_1994 z1 /\ _july z1) /\ _4th z1) /\ True) /\ _on x z1) /\ _start x)) -> (exists x : Entity, True /\ (exists z1 : Entity, ((_2 z1 /\ _day z1) /\ True) /\ _last x z1)) -> exists x : Entity, (_conference x /\ True) /\ (exists z1 : Entity, ((((_1994 z1 /\ _july z1) /\ _8th z1) /\ True) /\ _on x z1) /\ _over x) Toplevel input, characters 409-413: > Theorem t1: (exists x, (and (and (_conference x) True) (exists z1, (and (and (and (and (and (_1994 z1) (_july z1)) (_4th z1)) True) (_on x z1)) (_start x))))) -> (exists x, (and True (exists z1, (and (and (and (_2 z1) (_day z1)) True) (_last x z1))))) -> (exists x, (and (and (_conference x) True) (exists z1, (and (and (and (and (and (_1994 z1) (_july z1)) (_8th z1)) True) (_on x z1)) (_over x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _2 is declared Coq < _4th is declared Coq < _8th is declared Coq < _conference is declared Coq < _day is declared Coq < _july is declared Coq < _last is declared Coq < _on is declared Coq < _over is declared Coq < _start is declared Coq < 1 goal ============================ (exists x : Entity, (_conference x /\ True) /\ (exists z1 : Entity, ((((_1994 z1 /\ _july z1) /\ _4th z1) /\ True) /\ _on x z1) /\ _start x)) -> (exists x : Entity, True /\ (exists z1 : Entity, ((_2 z1 /\ _day z1) /\ True) /\ _last x z1)) -> ~ (exists x : Entity, (_conference x /\ True) /\ (exists z1 : Entity, ((((_1994 z1 /\ _july z1) /\ _8th z1) /\ True) /\ _on x z1) /\ _over x)) Toplevel input, characters 415-419: > Theorem t1: (exists x, (and (and (_conference x) True) (exists z1, (and (and (and (and (and (_1994 z1) (_july z1)) (_4th z1)) True) (_on x z1)) (_start x))))) -> (exists x, (and True (exists z1, (and (and (and (_2 z1) (_day z1)) True) (_last x z1))))) -> (not (exists x, (and (and (_conference x) True) (exists z1, (and (and (and (and (and (_1994 z1) (_july z1)) (_8th z1)) True) (_on x z1)) (_over x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _2 is declared Coq < _4th is declared Coq < _8th is declared Coq < _conference is declared Coq < _day is declared Coq < _july is declared Coq < _last is declared Coq < _on is declared Coq < _over is declared Coq < _start is declared Coq < 1 goal ============================ (exists x : Entity, (_conference x /\ True) /\ (exists z1 : Entity, ((((_1994 z1 /\ _july z1) /\ _4th z1) /\ True) /\ _on x z1) /\ _start x)) -> (exists x : Entity, True /\ (exists z1 : Entity, ((_2 z1 /\ _day z1) /\ True) /\ _last x z1)) -> exists x : Entity, (_conference x /\ True) /\ (exists z1 : Entity, ((((_1994 z1 /\ _july z1) /\ _8th z1) /\ True) /\ _on x z1) /\ _over x) 2 goals x : Entity H0 : True x0 : Entity H2 : _last x x0 H3 : True H1 : _2 x0 H4 : _day x0 x1 : Entity H : _conference x1 H6 : True x2 : Entity H7 : _start x1 H8 : _on x1 x2 H9 : True H10 : _4th x2 H5 : _1994 x2 H11 : _july x2 ============================ _8th x2 goal 2 is: _over x1 Toplevel input, characters 425-437: > Theorem t1: (exists x, (and (and (_conference x) True) (exists z1, (and (and (and (and (and (_1994 z1) (_july z1)) (_4th z1)) True) (_on x z1)) (_start x))))) -> (exists x, (and True (exists z1, (and (and (and (_2 z1) (_day z1)) True) (_last x z1))))) -> (exists x, (and (and (_conference x) True) (exists z1, (and (and (and (and (and (_1994 z1) (_july z1)) (_8th z1)) True) (_on x z1)) (_over x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 439-443: > Theorem t1: (exists x, (and (and (_conference x) True) (exists z1, (and (and (and (and (and (_1994 z1) (_july z1)) (_4th z1)) True) (_on x z1)) (_start x))))) -> (exists x, (and True (exists z1, (and (and (and (_2 z1) (_day z1)) True) (_last x z1))))) -> (exists x, (and (and (_conference x) True) (exists z1, (and (and (and (and (and (_1994 z1) (_july z1)) (_8th z1)) True) (_on x z1)) (_over x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_260_temporal_reference multi unknown
fracas_261_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) Toplevel input, characters 422-426: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Toplevel input, characters 428-445: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) 1 goal H : _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H0 : _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H1 : _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) ============================ False Toplevel input, characters 438-450: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 452-456: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) Toplevel input, characters 422-426: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Toplevel input, characters 428-445: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) 1 goal H : _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H0 : _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H1 : _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) ============================ False Toplevel input, characters 438-450: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 452-456: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Toplevel input, characters 428-445: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) 1 goal H : _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H0 : _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H1 : _before (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) ============================ False Toplevel input, characters 438-450: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 452-456: > Theorem t1: (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_before (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_262_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) Toplevel input, characters 419-423: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Toplevel input, characters 425-442: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) 1 goal H : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H0 : _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H1 : _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) ============================ False Toplevel input, characters 435-447: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 449-453: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) Toplevel input, characters 419-423: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Toplevel input, characters 425-442: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) 1 goal H : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H0 : _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H1 : _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) ============================ False Toplevel input, characters 435-447: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 449-453: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Toplevel input, characters 425-442: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) 1 goal H : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H0 : _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H1 : _after (exists x : Entity, (x = _anderson /\ True) /\ _leave _anderson) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) ============================ False Toplevel input, characters 435-447: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 449-453: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_leave _anderson))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_263_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) Toplevel input, characters 427-431: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) No more goals. Toplevel input, characters 433-450: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) 1 goal H : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) H0 : _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H1 : _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) ============================ False Toplevel input, characters 443-455: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 457-461: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) Toplevel input, characters 427-431: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) No more goals. Toplevel input, characters 433-450: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) 1 goal H : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) H0 : _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H1 : _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) ============================ False Toplevel input, characters 443-455: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 457-461: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) No more goals. Toplevel input, characters 433-450: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _anderson is declared Coq < _jones is declared Coq < _leave is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) 1 goal H : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) H0 : _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H1 : _after (exists x : Entity, (x = _anderson /\ True) /\ _present _anderson) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) ============================ False Toplevel input, characters 443-455: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 457-461: > Theorem t1: (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _anderson) True) (_present _anderson))) (exists x, (and (and (x = _smith) True) (_present _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_264_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Toplevel input, characters 408-425: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) 1 goal H1 : _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H2 : _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H3 : _leave _jones H4 : True H5 : _leave _smith H6 : True ============================ False Toplevel input, characters 418-430: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 432-436: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Toplevel input, characters 408-425: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) 1 goal H1 : _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H2 : _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H3 : _leave _jones H4 : True H5 : _leave _smith H6 : True ============================ False Toplevel input, characters 418-430: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 432-436: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Toplevel input, characters 408-425: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) 1 goal H1 : _before (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H2 : _after (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H3 : _leave _jones H4 : True H5 : _leave _smith H6 : True ============================ False Toplevel input, characters 418-430: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 432-436: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_265_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Toplevel input, characters 408-425: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) 1 goal H1 : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H2 : _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H3 : _leave _jones H4 : True H5 : _leave _smith H6 : True ============================ False Toplevel input, characters 418-430: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 432-436: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Toplevel input, characters 408-425: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) 1 goal H1 : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H2 : _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H3 : _leave _jones H4 : True H5 : _leave _smith H6 : True ============================ False Toplevel input, characters 418-430: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 432-436: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) No more goals. Toplevel input, characters 408-425: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) 1 goal H1 : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H2 : _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H3 : _leave _jones H4 : True H5 : _leave _smith H6 : True ============================ False Toplevel input, characters 418-430: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 432-436: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_266_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Toplevel input, characters 408-425: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) 1 goal H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H2 : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H3 : _leave _jones H4 : True H5 : _leave _smith H6 : True ============================ False Toplevel input, characters 418-430: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 432-436: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) Toplevel input, characters 402-406: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Toplevel input, characters 408-425: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) 1 goal H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H2 : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H3 : _leave _jones H4 : True H5 : _leave _smith H6 : True ============================ False Toplevel input, characters 418-430: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 432-436: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) No more goals. Toplevel input, characters 408-425: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) 1 goal H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) H2 : _after (exists x : Entity, (x = _jones /\ True) /\ _leave _jones) (exists x : Entity, (x = _smith /\ True) /\ _leave _smith) H3 : _leave _jones H4 : True H5 : _leave _smith H6 : True ============================ False Toplevel input, characters 418-430: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 432-436: > Theorem t1: (exists x, (and (and (x = _smith) True) (_leave _smith))) -> (exists x, (and (and (x = _jones) True) (_leave _jones))) -> (_before (exists x, (and (and (x = _smith) True) (_leave _smith))) (exists x, (and (and (x = _jones) True) (_leave _jones)))) -> (not (_after (exists x, (and (and (x = _jones) True) (_leave _jones))) (exists x, (and (and (x = _smith) True) (_leave _smith))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_267_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H3 : True x0 : Entity H4 : _revise _smith x0 H2 : _contract x0 H5, H7 : True x2 : Entity H8 : _revise _jones x2 H6 : _contract x2 H9 : True ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 602-614: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 616-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H2 : _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) H4 : True x0 : Entity H5 : _revise _smith x0 H3 : _contract x0 H6, H8 : True x2 : Entity H9 : _revise _jones x2 H7 : _contract x2 H10 : True ============================ False Toplevel input, characters 608-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 622-626: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H3 : True x0 : Entity H4 : _revise _smith x0 H2 : _contract x0 H5, H7 : True x2 : Entity H8 : _revise _jones x2 H6 : _contract x2 H9 : True ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 602-614: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 616-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H2 : _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) H4 : True x0 : Entity H5 : _revise _smith x0 H3 : _contract x0 H6, H8 : True x2 : Entity H9 : _revise _jones x2 H7 : _contract x2 H10 : True ============================ False Toplevel input, characters 608-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 622-626: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H3 : True x0 : Entity H4 : _revise _smith x0 H2 : _contract x0 H5, H7 : True x2 : Entity H8 : _revise _jones x2 H6 : _contract x2 H9 : True ============================ _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 602-614: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 616-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _before (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H2 : _after (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) H4 : True x0 : Entity H5 : _revise _smith x0 H3 : _contract x0 H6, H8 : True x2 : Entity H9 : _revise _jones x2 H7 : _contract x2 H10 : True ============================ False Toplevel input, characters 608-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 622-626: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_before (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_after (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_268_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H3 : True x0 : Entity H4 : _revise _smith x0 H2 : _contract x0 H5, H7 : True x2 : Entity H8 : _revise _jones x2 H6 : _contract x2 H9 : True ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 602-614: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 616-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H2 : _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) H4 : True x0 : Entity H5 : _revise _smith x0 H3 : _contract x0 H6, H8 : True x2 : Entity H9 : _revise _jones x2 H7 : _contract x2 H10 : True ============================ False Toplevel input, characters 608-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 622-626: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H3 : True x0 : Entity H4 : _revise _smith x0 H2 : _contract x0 H5, H7 : True x2 : Entity H8 : _revise _jones x2 H6 : _contract x2 H9 : True ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 602-614: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 616-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H2 : _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) H4 : True x0 : Entity H5 : _revise _smith x0 H3 : _contract x0 H6, H8 : True x2 : Entity H9 : _revise _jones x2 H7 : _contract x2 H10 : True ============================ False Toplevel input, characters 608-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 622-626: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H3 : True x0 : Entity H4 : _revise _smith x0 H2 : _contract x0 H5, H7 : True x2 : Entity H8 : _revise _jones x2 H6 : _contract x2 H9 : True ============================ _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) Toplevel input, characters 602-614: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 616-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _do is declared Coq < _jones is declared Coq < _revise is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _smith z1)) -> _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) -> ~ _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) 1 goal H1 : _after (exists x : Entity, (x = _smith /\ True) /\ _do _smith) (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _revise _jones z1)) H2 : _before (exists x : Entity, (x = _jones /\ True) /\ _do _jones) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _revise _smith z2)) H4 : True x0 : Entity H5 : _revise _smith x0 H3 : _contract x0 H6, H8 : True x2 : Entity H9 : _revise _jones x2 H7 : _contract x2 H10 : True ============================ False Toplevel input, characters 608-620: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 622-626: > Theorem t1: (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_contract z1) True) (_revise _smith z1))))) -> (_after (exists x, (and (and (x = _smith) True) (_do _smith))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_revise _jones z1)))))) -> (not (_before (exists x, (and (and (x = _jones) True) (_do _jones))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (_contract z2) True) (_revise _smith z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_269_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 417-422: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 424-428: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 423-428: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 430-434: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 417-423: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-439: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 417-422: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 424-428: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 423-429: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 442-445: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 423-428: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 430-434: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 417-423: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-439: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 423-429: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 442-445: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 417-423: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 436-439: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 454-458: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _smith is declared Coq < _swam is declared Coq < Toplevel input, characters 13-48: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun x : Entity => _smith x /\ _swam x" has type "Entity -> Prop" which should be Set, Prop or Type. Toplevel input, characters 423-429: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 442-445: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 460-464: > Theorem t1: (fun x => (and (_smith x) (_swam x))) -> (fun x => (and (_jones x) (_swam x))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (and (_jones z1) (_swam z1)) True) (_before x z1)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (and (_smith z1) (_swam z1)) True) (_after x z1)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_270_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 858-863: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 865-869: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 864-869: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 871-875: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 858-864: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 877-880: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 895-899: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 858-863: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 865-869: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 864-870: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 883-886: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 901-905: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 864-869: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 871-875: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 858-864: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 877-880: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 895-899: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 864-870: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 883-886: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 901-905: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 858-864: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 877-880: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 895-899: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _shore is declared Coq < _smith is declared Coq < _swam is declared Coq < _to is declared Coq < Toplevel input, characters 13-149: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The term "fun F1 F2 : Entity -> Prop => exists x : Entity, (((_smith x /\ _swam x) /\ (exists z1 : Entity, (_shore z1 /\ True) /\ _to x z1)) /\ F1 x) /\ F2 x" has type "(Entity -> Prop) -> (Entity -> Prop) -> Prop" which should be Set, Prop or Type. Toplevel input, characters 864-870: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 883-886: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 901-905: > Theorem t1: (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_jones x) (_swam x)) (exists z1, (and (and (_shore z1) True) (_to x z1)))) (F1 x)) (F2 x)))) -> (fun F1 F2 => (exists x, (and (and (and (and (_smith x) (_swam x)) (exists z3, (and (and (and (_shore z3) (exists z2, (and (and (and (and (_jones z2) (_swam z2)) (exists z1, (and (and (_shore z1) True) (_to z2 z1)))) True) (_before z3 z2)))) True) (_to x z3)))) (F1 x)) (F2 x)))) -> (not (fun F1 F2 => (exists x, (and (and (and (and (and (_jones x) (_swam x)) (exists z2, (and (and (_shore z2) True) (_to x z2)))) (exists z4, (and (and (and (and (_smith z4) (_swam z4)) (exists z3, (and (and (_shore z3) True) (_to z4 z3)))) True) (_after x z4)))) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_271_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) Toplevel input, characters 414-418: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Toplevel input, characters 420-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) 1 goal H1 : _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) H2 : _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) H3 : _present _jones H4 : True H5 : _present _smith H6 : True ============================ False Toplevel input, characters 430-442: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 444-448: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) Toplevel input, characters 414-418: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Toplevel input, characters 420-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) 1 goal H1 : _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) H2 : _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) H3 : _present _jones H4 : True H5 : _present _smith H6 : True ============================ False Toplevel input, characters 430-442: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 444-448: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Toplevel input, characters 420-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) 1 goal H1 : _after (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) H2 : _before (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) H3 : _present _jones H4 : True H5 : _present _smith H6 : True ============================ False Toplevel input, characters 430-442: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 444-448: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_after (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_before (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_272_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) Toplevel input, characters 414-418: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Toplevel input, characters 420-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) 1 goal H1 : _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) H2 : _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) H3 : _present _jones H4 : True H5 : _present _smith H6 : True ============================ False Toplevel input, characters 430-442: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 444-448: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) Toplevel input, characters 414-418: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Toplevel input, characters 420-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) 1 goal H1 : _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) H2 : _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) H3 : _present _jones H4 : True H5 : _present _smith H6 : True ============================ False Toplevel input, characters 430-442: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 444-448: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) No more goals. Toplevel input, characters 420-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _present is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> (exists x : Entity, (x = _jones /\ True) /\ _present _jones) -> _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) -> ~ _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) 1 goal H1 : _before (exists x : Entity, (x = _jones /\ True) /\ _present _jones) (exists x : Entity, (x = _smith /\ True) /\ _present _smith) H2 : _after (exists x : Entity, (x = _smith /\ True) /\ _present _smith) (exists x : Entity, (x = _jones /\ True) /\ _present _jones) H3 : _present _jones H4 : True H5 : _present _smith H6 : True ============================ False Toplevel input, characters 430-442: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 444-448: > Theorem t1: (exists x, (and (and (x = _smith) True) (_present _smith))) -> (exists x, (and (and (x = _jones) True) (_present _jones))) -> (_before (exists x, (and (and (x = _jones) True) (_present _jones))) (exists x, (and (and (x = _smith) True) (_present _smith)))) -> (not (_after (exists x, (and (and (x = _smith) True) (_present _smith))) (exists x, (and (and (x = _jones) True) (_present _jones))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_273_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 832-836: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) Toplevel input, characters 838-842: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) 1 goal H2 : _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H3 : _be _smith H4 : True H6 : _be _smith H7 : True x1 : Entity H8 : Prog (_write _smith x1) H5 : _report x1 H9 : True H11 : _be _jones H12 : True x3 : Entity H13 : Prog (_write _jones x3) H10 : _report x3 H14 : True ============================ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 848-860: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 862-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 832-836: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) 1 goal H3 : _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) H4 : _be _jones H5 : True H7 : _be _jones H8 : True x1 : Entity H9 : Prog (_write _jones x1) H6 : _report x1 H10 : True H11 : _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H12 : _be _smith H13 : True H15 : _be _smith H16 : True x4 : Entity H17 : Prog (_write _smith x4) H14 : _report x4 H18 : True ============================ False Toplevel input, characters 854-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 868-872: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) Toplevel input, characters 838-842: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) 1 goal H2 : _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H3 : _be _smith H4 : True H6 : _be _smith H7 : True x1 : Entity H8 : Prog (_write _smith x1) H5 : _report x1 H9 : True H11 : _be _jones H12 : True x3 : Entity H13 : Prog (_write _jones x3) H10 : _report x3 H14 : True ============================ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 848-860: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 862-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) 1 goal H3 : _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) H4 : _be _jones H5 : True H7 : _be _jones H8 : True x1 : Entity H9 : Prog (_write _jones x1) H6 : _report x1 H10 : True H11 : _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H12 : _be _smith H13 : True H15 : _be _smith H16 : True x4 : Entity H17 : Prog (_write _smith x4) H14 : _report x4 H18 : True ============================ False Toplevel input, characters 854-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 868-872: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) 1 goal H2 : _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H3 : _be _smith H4 : True H6 : _be _smith H7 : True x1 : Entity H8 : Prog (_write _smith x1) H5 : _report x1 H9 : True H11 : _be _jones H12 : True x3 : Entity H13 : Prog (_write _jones x3) H10 : _report x3 H14 : True ============================ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 848-860: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 862-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) 1 goal H3 : _after (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) H4 : _be _jones H5 : True H7 : _be _jones H8 : True x1 : Entity H9 : Prog (_write _jones x1) H6 : _report x1 H10 : True H11 : _before (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H12 : _be _smith H13 : True H15 : _be _smith H16 : True x4 : Entity H17 : Prog (_write _smith x4) H14 : _report x4 H18 : True ============================ False Toplevel input, characters 854-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 868-872: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_before (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_after (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_274_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 832-836: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) Toplevel input, characters 838-842: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) 1 goal H2 : _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H3 : _be _smith H4 : True H6 : _be _smith H7 : True x1 : Entity H8 : Prog (_write _smith x1) H5 : _report x1 H9 : True H11 : _be _jones H12 : True x3 : Entity H13 : Prog (_write _jones x3) H10 : _report x3 H14 : True ============================ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 848-860: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 862-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 832-836: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) 1 goal H3 : _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) H4 : _be _jones H5 : True H7 : _be _jones H8 : True x1 : Entity H9 : Prog (_write _jones x1) H6 : _report x1 H10 : True H11 : _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H12 : _be _smith H13 : True H15 : _be _smith H16 : True x4 : Entity H17 : Prog (_write _smith x4) H14 : _report x4 H18 : True ============================ False Toplevel input, characters 854-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 868-872: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) Toplevel input, characters 838-842: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) 1 goal H2 : _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H3 : _be _smith H4 : True H6 : _be _smith H7 : True x1 : Entity H8 : Prog (_write _smith x1) H5 : _report x1 H9 : True H11 : _be _jones H12 : True x3 : Entity H13 : Prog (_write _jones x3) H10 : _report x3 H14 : True ============================ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 848-860: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 862-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) 1 goal H3 : _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) H4 : _be _jones H5 : True H7 : _be _jones H8 : True x1 : Entity H9 : Prog (_write _jones x1) H6 : _report x1 H10 : True H11 : _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H12 : _be _smith H13 : True H15 : _be _smith H16 : True x4 : Entity H17 : Prog (_write _smith x4) H14 : _report x4 H18 : True ============================ False Toplevel input, characters 854-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 868-872: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) 1 goal H2 : _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H3 : _be _smith H4 : True H6 : _be _smith H7 : True x1 : Entity H8 : Prog (_write _smith x1) H5 : _report x1 H9 : True H11 : _be _jones H12 : True x3 : Entity H13 : Prog (_write _jones x3) H10 : _report x3 H14 : True ============================ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) Toplevel input, characters 848-860: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 862-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _jones is declared Coq < _report is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _jones z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1))) -> ~ (exists x : Entity, ((x = _jones /\ True) /\ _be _jones) /\ _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3))) 1 goal H3 : _before (exists z6 : Entity, ((z6 = _smith /\ True) /\ _be _smith) /\ (exists z4 : Entity, (_report z4 /\ True) /\ Prog (_write _smith z4))) (exists z3 : Entity, (_report z3 /\ True) /\ Prog (_write _jones z3)) H4 : _be _jones H5 : True H7 : _be _jones H8 : True x1 : Entity H9 : Prog (_write _jones x1) H6 : _report x1 H10 : True H11 : _after (exists z4 : Entity, ((z4 = _jones /\ True) /\ _be _jones) /\ (exists z2 : Entity, (_report z2 /\ True) /\ Prog (_write _jones z2))) (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write _smith z1)) H12 : _be _smith H13 : True H15 : _be _smith H16 : True x4 : Entity H17 : Prog (_write _smith x4) H14 : _report x4 H18 : True ============================ False Toplevel input, characters 854-866: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 868-872: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1)))))) -> (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_report z1) True) (Prog (_write _jones z1)))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (_after (exists z4, (and (and (and (z4 = _jones) True) (_be _jones)) (exists z2, (and (and (_report z2) True) (Prog (_write _jones z2)))))) (exists z1, (and (and (_report z1) True) (Prog (_write _smith z1))))))) -> (not (exists x, (and (and (and (x = _jones) True) (_be _jones)) (_before (exists z6, (and (and (and (z6 = _smith) True) (_be _smith)) (exists z4, (and (and (_report z4) True) (Prog (_write _smith z4)))))) (exists z3, (and (and (_report z3) True) (Prog (_write _jones z3)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_275_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1) Toplevel input, characters 320-324: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1)) Toplevel input, characters 326-330: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1) 2 focused goals (shelved: 1) H : _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) ============================ _temper ?z1 goal 2 is: _lose _smith ?z1 Toplevel input, characters 336-348: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 350-354: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1) Toplevel input, characters 320-324: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1)) 1 goal H : _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) H2 : True x0 : Entity H3 : _lose _smith x0 H1 : _temper x0 H4 : True ============================ False Toplevel input, characters 342-354: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 356-360: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1)) Toplevel input, characters 326-330: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1) 2 focused goals (shelved: 1) H : _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) ============================ _temper ?z1 goal 2 is: _lose _smith ?z1 Toplevel input, characters 336-348: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 350-354: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1)) 1 goal H : _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) H2 : True x0 : Entity H3 : _lose _smith x0 H1 : _temper x0 H4 : True ============================ False Toplevel input, characters 342-354: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 356-360: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1) 2 focused goals (shelved: 1) H : _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) ============================ _temper ?z1 goal 2 is: _lose _smith ?z1 Toplevel input, characters 336-348: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 350-354: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _leave is declared Coq < _lose is declared Coq < _meeting is declared Coq < _smith is declared Coq < _temper is declared Coq < 1 goal ============================ _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_temper z1 /\ True) /\ _lose _smith z1)) 1 goal H : _before (exists x : Entity, True /\ (exists z2 : Entity, (_temper z2 /\ True) /\ _lose x z2)) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) H2 : True x0 : Entity H3 : _lose _smith x0 H1 : _temper x0 H4 : True ============================ False Toplevel input, characters 342-354: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 356-360: > Theorem t1: (_before (exists x, (and True (exists z2, (and (and (_temper z2) True) (_lose x z2))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_temper z1) True) (_lose _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_276_temporal_reference single unknown
fracas_277_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) Toplevel input, characters 429-433: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) 1 goal H1 : True x0 : Entity H3 : _in _smith x0 H0 : _1991 x0 H4 : True H5 : _live _smith H6 : _in _smith _birmingham H7 : True ============================ _1992 _birmingham Toplevel input, characters 439-451: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 453-457: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) 1 goal H2 : True x0 : Entity H4 : _in _smith x0 H1 : _1992 x0 H5 : True H6 : _live _smith H7 : _in _smith _birmingham H8, H10 : True x3 : Entity H12 : _in _smith x3 H9 : _1991 x3 H13 : True H14 : _live _smith H15 : _in _smith _birmingham H16 : True ============================ False Toplevel input, characters 445-457: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 459-463: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) Toplevel input, characters 429-433: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) 1 goal H1 : True x0 : Entity H3 : _in _smith x0 H0 : _1991 x0 H4 : True H5 : _live _smith H6 : _in _smith _birmingham H7 : True ============================ _1992 _birmingham Toplevel input, characters 439-451: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 453-457: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) 1 goal H2 : True x0 : Entity H4 : _in _smith x0 H1 : _1992 x0 H5 : True H6 : _live _smith H7 : _in _smith _birmingham H8, H10 : True x3 : Entity H12 : _in _smith x3 H9 : _1991 x3 H13 : True H14 : _live _smith H15 : _in _smith _birmingham H16 : True ============================ False Toplevel input, characters 445-457: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 459-463: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) 1 goal H1 : True x0 : Entity H3 : _in _smith x0 H0 : _1991 x0 H4 : True H5 : _live _smith H6 : _in _smith _birmingham H7 : True ============================ _1992 _birmingham Toplevel input, characters 439-451: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 453-457: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _birmingham is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1991 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_1992 z3 /\ True) /\ _in _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) 1 goal H2 : True x0 : Entity H4 : _in _smith x0 H1 : _1992 x0 H5 : True H6 : _live _smith H7 : _in _smith _birmingham H8, H10 : True x3 : Entity H12 : _in _smith x3 H9 : _1991 x3 H13 : True H14 : _live _smith H15 : _in _smith _birmingham H16 : True ============================ False Toplevel input, characters 445-457: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 459-463: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1991 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_1992 z3) True) (_in _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_278_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _first is declared Coq < _in is declared Coq < _novel is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_first z2 /\ _novel z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_first z2 /\ _novel z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _write _smith z2) Toplevel input, characters 383-387: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_first z2) (_novel z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_write _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_first z2) (_novel z2)) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_write _smith z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _first is declared Coq < _in is declared Coq < _novel is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_first z2 /\ _novel z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_first z2 /\ _novel z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _write _smith z2)) Toplevel input, characters 389-393: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_first z2) (_novel z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_first z2) (_novel z2)) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_write _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _first is declared Coq < _in is declared Coq < _novel is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_first z2 /\ _novel z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_first z2 /\ _novel z2) /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _write _smith z2) 1 goal H1 : True x0 : Entity H2 : _write _smith x0 H3 : True H0 : _first x0 H5 : _novel x0 x1 : Entity H6 : _in x0 x1 H4 : _1991 x1 H7 : True ============================ _1992 x1 Toplevel input, characters 399-411: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_first z2) (_novel z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_write _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_first z2) (_novel z2)) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_write _smith z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 413-417: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_first z2) (_novel z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_write _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_first z2) (_novel z2)) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_write _smith z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_279_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _in is declared Coq < _novel is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1991 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_novel z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _write _smith z1)) Toplevel input, characters 337-341: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_write _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _in is declared Coq < _novel is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1991 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_novel z1 /\ True) /\ _write _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _write _smith z1))) Toplevel input, characters 343-347: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_write _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _in is declared Coq < _novel is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1991 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_novel z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _write _smith z1)) 1 goal H1 : True x0 : Entity H3 : _in _smith x0 H0 : _1991 x0 H4 : True x1 : Entity H5 : _write _smith x1 H2 : _novel x1 H6 : True ============================ _1992 x0 Toplevel input, characters 353-365: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_write _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 367-371: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_write _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_280_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _in is declared Coq < _novel is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1991 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_novel z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_novel z1 /\ True) /\ _write _smith z1)) Toplevel input, characters 355-359: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _in is declared Coq < _novel is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1991 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_novel z1 /\ True) /\ _write _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_novel z1 /\ True) /\ _write _smith z1))) Toplevel input, characters 361-365: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _in is declared Coq < _novel is declared Coq < _smith is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1991 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_novel z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_novel z1 /\ True) /\ _write _smith z1)) 1 goal H1 : True x0 : Entity H3 : _in _smith x0 H0 : _1991 x0 H4 : True x1 : Entity H5 : _write _smith x1 H2 : _novel x1 H6 : True ============================ _1992 x0 Toplevel input, characters 371-383: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 385-389: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (_novel z1) True) (_write _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_281_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _run is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z2 : Entity, ((_1991 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_business z1 /\ True) /\ Prog (_run _smith z1)))) -> exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ Prog (_run _smith z1))) Toplevel input, characters 388-392: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_business z1) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (Prog (_run _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _run is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z2 : Entity, ((_1991 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_business z1 /\ True) /\ Prog (_run _smith z1)))) -> ~ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ Prog (_run _smith z1)))) Toplevel input, characters 394-398: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_business z1) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (Prog (_run _smith z1))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _run is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z2 : Entity, ((_1991 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_business z1 /\ True) /\ Prog (_run _smith z1)))) -> exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ Prog (_run _smith z1))) 1 goal H1 : _be _smith H2 : True x0 : Entity H4 : _in _smith x0 H0 : _1991 x0 H5 : True x1 : Entity H6 : Prog (_run _smith x1) H3 : _business x1 H7 : True ============================ _1992 x0 Toplevel input, characters 404-416: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_business z1) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (Prog (_run _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 418-422: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1991 z2) True) (_in _smith z2)) (exists z1, (and (and (_business z1) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (Prog (_run _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_282_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1)) Toplevel input, characters 357-361: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1))) Toplevel input, characters 363-367: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1)) 2 focused goals (shelved: 1) H1 : True x0 : Entity H2 : _discover _smith x0 H3 : True H0 : _new x0 H5 : _species x0 x1 : Entity H6 : _in x0 x1 H4 : _1991 x1 H7 : True ============================ _1992 ?z2 goal 2 is: _in _smith ?z2 Toplevel input, characters 373-385: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 387-391: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1)) Toplevel input, characters 357-361: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1))) 1 goal H2 : True x0 : Entity H4 : _in _smith x0 H1 : _1992 x0 H5 : True x1 : Entity H3 : True H6 : _discover _smith x1 H8 : True x3 : Entity H9 : _discover _smith x3 H10 : True H7 : _new x3 H12 : _species x3 x4 : Entity H13 : _in x3 x4 H11 : _1991 x4 H14 : True ============================ False Toplevel input, characters 379-391: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1))) Toplevel input, characters 363-367: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1)) 2 focused goals (shelved: 1) H1 : True x0 : Entity H2 : _discover _smith x0 H3 : True H0 : _new x0 H5 : _species x0 x1 : Entity H6 : _in x0 x1 H4 : _1991 x1 H7 : True ============================ _1992 ?z2 goal 2 is: _in _smith ?z2 Toplevel input, characters 373-385: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 387-391: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1))) 1 goal H2 : True x0 : Entity H4 : _in _smith x0 H1 : _1992 x0 H5 : True x1 : Entity H3 : True H6 : _discover _smith x1 H8 : True x3 : Entity H9 : _discover _smith x3 H10 : True H7 : _new x3 H12 : _species x3 x4 : Entity H13 : _in x3 x4 H11 : _1991 x4 H14 : True ============================ False Toplevel input, characters 379-391: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1)) 2 focused goals (shelved: 1) H1 : True x0 : Entity H2 : _discover _smith x0 H3 : True H0 : _new x0 H5 : _species x0 x1 : Entity H6 : _in x0 x1 H4 : _1991 x1 H7 : True ============================ _1992 ?z2 goal 2 is: _in _smith ?z2 Toplevel input, characters 373-385: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 387-391: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, True /\ _discover _smith z1))) 1 goal H2 : True x0 : Entity H4 : _in _smith x0 H1 : _1992 x0 H5 : True x1 : Entity H3 : True H6 : _discover _smith x1 H8 : True x3 : Entity H9 : _discover _smith x3 H10 : True H7 : _new x3 H12 : _species x3 x4 : Entity H13 : _in x3 x4 H11 : _1991 x4 H14 : True ============================ False Toplevel input, characters 379-391: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and True (_discover _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_283_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) Toplevel input, characters 399-403: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) 2 focused goals (shelved: 1) H1 : True x0 : Entity H2 : _discover _smith x0 H3 : True H0 : _new x0 H5 : _species x0 x1 : Entity H6 : _in x0 x1 H4 : _1991 x1 H7 : True ============================ _1992 ?z2 goal 2 is: _in _smith ?z2 Toplevel input, characters 409-421: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) 1 goal H2 : True x0 : Entity H4 : _in _smith x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _discover _smith x1 H7 : True H3 : _new x1 H8 : _species x1 H10 : True x3 : Entity H11 : _discover _smith x3 H12 : True H9 : _new x3 H14 : _species x3 x4 : Entity H15 : _in x3 x4 H13 : _1991 x4 H16 : True ============================ False Toplevel input, characters 415-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 429-433: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) Toplevel input, characters 399-403: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) 2 focused goals (shelved: 1) H1 : True x0 : Entity H2 : _discover _smith x0 H3 : True H0 : _new x0 H5 : _species x0 x1 : Entity H6 : _in x0 x1 H4 : _1991 x1 H7 : True ============================ _1992 ?z2 goal 2 is: _in _smith ?z2 Toplevel input, characters 409-421: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) 1 goal H2 : True x0 : Entity H4 : _in _smith x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _discover _smith x1 H7 : True H3 : _new x1 H8 : _species x1 H10 : True x3 : Entity H11 : _discover _smith x3 H12 : True H9 : _new x3 H14 : _species x3 x4 : Entity H15 : _in x3 x4 H13 : _1991 x4 H16 : True ============================ False Toplevel input, characters 415-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 429-433: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) 2 focused goals (shelved: 1) H1 : True x0 : Entity H2 : _discover _smith x0 H3 : True H0 : _new x0 H5 : _species x0 x1 : Entity H6 : _in x0 x1 H4 : _1991 x1 H7 : True ============================ _1992 ?z2 goal 2 is: _in _smith ?z2 Toplevel input, characters 409-421: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 423-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1991 is declared Coq < _1992 is declared Coq < _discover is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_new z2 /\ _species z2) /\ (exists z1 : Entity, (_1991 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _discover _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) 1 goal H2 : True x0 : Entity H4 : _in _smith x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _discover _smith x1 H7 : True H3 : _new x1 H8 : _species x1 H10 : True x3 : Entity H11 : _discover _smith x3 H12 : True H9 : _new x3 H14 : _species x3 x4 : Entity H15 : _in x3 x4 H13 : _1991 x4 H16 : True ============================ False Toplevel input, characters 415-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 429-433: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_new z2) (_species z2)) (exists z1, (and (and (_1991 z1) True) (_in z2 z1)))) True) (_discover _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_1992 z2) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_284_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _11 is declared Coq < _8 is declared Coq < _am is declared Coq < _at is declared Coq < _by is declared Coq < _finish is declared Coq < _have is declared Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _start is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _start _smith) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_am z1 /\ _8 z1) /\ True) /\ _at z2 z1)) /\ True) /\ Prog (_write _smith z2))) -> exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _finish _smith) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_am z1 /\ _11 z1) /\ True) /\ _by z2 z1)) /\ True) /\ Prog (_write _smith z2)) Toplevel input, characters 640-644: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (and (x = _smith) True) (_start _smith)) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_am z1) (_8 z1)) True) (_at z2 z1)))) True) (Prog (_write _smith z2)))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_finish _smith)) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_am z1) (_11 z1)) True) (_by z2 z1)))) True) (Prog (_write _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _11 is declared Coq < _8 is declared Coq < _am is declared Coq < _at is declared Coq < _by is declared Coq < _finish is declared Coq < _have is declared Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _start is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _start _smith) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_am z1 /\ _8 z1) /\ True) /\ _at z2 z1)) /\ True) /\ Prog (_write _smith z2))) -> ~ (exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _finish _smith) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_am z1 /\ _11 z1) /\ True) /\ _by z2 z1)) /\ True) /\ Prog (_write _smith z2))) Toplevel input, characters 646-650: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (and (x = _smith) True) (_start _smith)) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_am z1) (_8 z1)) True) (_at z2 z1)))) True) (Prog (_write _smith z2)))))) -> (not (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_finish _smith)) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_am z1) (_11 z1)) True) (_by z2 z1)))) True) (Prog (_write _smith z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _11 is declared Coq < _8 is declared Coq < _am is declared Coq < _at is declared Coq < _by is declared Coq < _finish is declared Coq < _have is declared Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _start is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> (exists x : Entity, ((x = _smith /\ True) /\ _start _smith) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_am z1 /\ _8 z1) /\ True) /\ _at z2 z1)) /\ True) /\ Prog (_write _smith z2))) -> exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _finish _smith) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_am z1 /\ _11 z1) /\ True) /\ _by z2 z1)) /\ True) /\ Prog (_write _smith z2)) 5 goals H2 : _start _smith H3 : True x0 : Entity H4 : Prog (_write _smith x0) H5 : True H1 : _report x0 x1 : Entity H7 : _at x0 x1 H8 : True H6 : _am x1 H9 : _8 x1 H11 : True x3 : Entity H13 : _in _smith x3 H14 : True H10 : _two x3 H15 : _hour x3 x4 : Entity H16 : _write _smith x4 H12 : _report x4 H17 : True ============================ _have _smith goal 2 is: _finish _smith goal 3 is: _11 x1 goal 4 is: _by x4 x1 goal 5 is: Prog (_write _smith x4) Toplevel input, characters 656-668: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (and (x = _smith) True) (_start _smith)) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_am z1) (_8 z1)) True) (_at z2 z1)))) True) (Prog (_write _smith z2)))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_finish _smith)) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_am z1) (_11 z1)) True) (_by z2 z1)))) True) (Prog (_write _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 670-674: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (and (x = _smith) True) (_start _smith)) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_am z1) (_8 z1)) True) (_at z2 z1)))) True) (Prog (_write _smith z2)))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_finish _smith)) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_am z1) (_11 z1)) True) (_by z2 z1)))) True) (Prog (_write _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_285_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 254-369: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 375-380: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 382-386: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 259-374: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 381-386: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 388-392: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 254-369: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 375-381: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 394-397: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 412-416: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 254-369: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 375-380: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 382-386: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 259-374: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 381-387: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 400-403: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 418-422: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 259-374: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 381-386: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 388-392: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 254-369: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 375-381: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 394-397: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 412-416: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 259-374: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 381-387: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 400-403: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 418-422: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 254-369: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 375-381: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 394-397: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 412-416: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _write is declared Coq < Toplevel input, characters 259-374: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ Prog (_write x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 381-387: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 400-403: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 418-422: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (_report z1) True) (Prog (_write x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_286_temporal_reference single unknown
fracas_287_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _one is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_one z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) Toplevel input, characters 389-393: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_one z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _one is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_one z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) Toplevel input, characters 395-399: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_one z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _one is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_one z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) 1 goal H1 : True x0 : Entity H3 : _in _smith x0 H4 : True H0 : _two x0 H5 : _hour x0 x1 : Entity H6 : _write _smith x1 H2 : _report x1 H7 : True ============================ _one x0 Toplevel input, characters 405-417: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_one z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 419-423: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_one z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_288_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) Toplevel input, characters 316-320: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Toplevel input, characters 322-339: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) 1 goal H2 : True x0 : Entity H3 : _write _smith x0 H1 : _report x0 H4, H6 : True x2 : Entity H8 : _in _smith x2 H9 : True H5 : _two x2 H10 : _hour x2 x3 : Entity H11 : _write _smith x3 H7 : _report x3 H12 : True ============================ False Toplevel input, characters 332-344: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 346-350: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) Toplevel input, characters 316-320: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Toplevel input, characters 322-339: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) 1 goal H2 : True x0 : Entity H3 : _write _smith x0 H1 : _report x0 H4, H6 : True x2 : Entity H8 : _in _smith x2 H9 : True H5 : _two x2 H10 : _hour x2 x3 : Entity H11 : _write _smith x3 H7 : _report x3 H12 : True ============================ False Toplevel input, characters 332-344: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 346-350: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Toplevel input, characters 322-339: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _hour is declared Coq < _in is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) 1 goal H2 : True x0 : Entity H3 : _write _smith x0 H1 : _report x0 H4, H6 : True x2 : Entity H8 : _in _smith x2 H9 : True H5 : _two x2 H10 : _hour x2 x3 : Entity H11 : _write _smith x3 H7 : _report x3 H12 : True ============================ False Toplevel input, characters 332-344: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 346-350: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (_report z1) True) (_write _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_289_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 274-409: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 415-420: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 422-426: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 279-414: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 421-426: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 428-432: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 274-409: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 415-421: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 434-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 452-456: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 274-409: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 415-420: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 422-426: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 279-414: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 421-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 440-443: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 458-462: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 279-414: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 421-426: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 428-432: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 274-409: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 415-421: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 434-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 452-456: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 279-414: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 421-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 440-443: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 458-462: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 274-409: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 415-421: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 434-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 452-456: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 279-414: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 421-427: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 440-443: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 458-462: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_290_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) Toplevel input, characters 356-360: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Toplevel input, characters 362-379: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) 1 goal H2 : True x0 : Entity H3 : _discover _smith x0 H4 : True H1 : _new x0 H5 : _species x0 H7 : True x2 : Entity H9 : _in _smith x2 H10 : True H6 : _two x2 H11 : _hour x2 x3 : Entity H12 : _discover _smith x3 H13 : True H8 : _new x3 H14 : _species x3 ============================ False Toplevel input, characters 372-384: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 386-390: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) Toplevel input, characters 356-360: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Toplevel input, characters 362-379: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) 1 goal H2 : True x0 : Entity H3 : _discover _smith x0 H4 : True H1 : _new x0 H5 : _species x0 H7 : True x2 : Entity H9 : _in _smith x2 H10 : True H6 : _two x2 H11 : _hour x2 x3 : Entity H12 : _discover _smith x3 H13 : True H8 : _new x3 H14 : _species x3 ============================ False Toplevel input, characters 372-384: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 386-390: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Toplevel input, characters 362-379: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _hour z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) 1 goal H2 : True x0 : Entity H3 : _discover _smith x0 H4 : True H1 : _new x0 H5 : _species x0 H7 : True x2 : Entity H9 : _in _smith x2 H10 : True H6 : _two x2 H11 : _hour x2 x3 : Entity H12 : _discover _smith x3 H13 : True H8 : _new x3 H14 : _species x3 ============================ False Toplevel input, characters 372-384: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 386-390: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_291_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 291-426: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 432-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 439-443: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 296-431: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 438-443: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 445-449: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 291-426: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 432-438: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 451-454: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 469-473: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 291-426: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 432-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 439-443: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 296-431: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 438-444: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 457-460: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 475-479: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 296-431: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 438-443: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 445-449: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 291-426: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 432-438: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 451-454: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 469-473: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 296-431: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 438-444: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 457-460: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 475-479: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 291-426: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 432-438: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 451-454: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 469-473: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _hour is declared Coq < _in is declared Coq < _many is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _spend is declared Coq < _two is declared Coq < Toplevel input, characters 296-431: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _hour x) /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ Prog (_discover x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 438-444: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 457-460: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 475-479: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_hour z2)) True) (_in _smith z2)) (exists z1, (and (and (and (and (_many z1) (_new z1)) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_hour x)) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (Prog (_discover x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_292_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 296-427: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 433-438: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 440-444: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 301-432: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 439-444: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 446-450: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 296-427: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 433-439: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 452-455: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 470-474: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 296-427: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 433-438: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 440-444: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 301-432: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 439-445: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 458-461: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 476-480: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 301-432: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 439-444: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 446-450: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 296-427: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 433-439: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 452-455: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 470-474: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 301-432: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 439-445: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 458-461: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 476-480: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 296-427: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 433-439: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 452-455: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 470-474: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _spend is declared Coq < _two is declared Coq < _year is declared Coq < Toplevel input, characters 301-432: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: In environment x : Entity The term "exists x : Entity, ((_two x /\ _year x) /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run x z1))" has type "Prop" while it is expected to have type "Entity". Toplevel input, characters 439-445: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 458-461: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 476-480: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (_spend _smith (exists x, (and (and (and (_two x) (_year x)) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run x z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_293_temporal_reference single unknown
fracas_294_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run _smith z1)))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1) Toplevel input, characters 368-372: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run _smith z1)))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)) Toplevel input, characters 374-378: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _business is declared Coq < _in is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _be _smith) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _in _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ Prog (_run _smith z1)))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1) 1 goal H1 : _be _smith H2 : True x0 : Entity H4 : _in _smith x0 H5 : True H0 : _two x0 H6 : _year x0 x1 : Entity H7 : Prog (_run _smith x1) H8 : True H3 : _own x1 H9 : _business x1 ============================ _run _smith x1 Toplevel input, characters 384-396: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 398-402: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_be _smith)) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_in _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (Prog (_run _smith z1)))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_295_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) Toplevel input, characters 666-670: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2))) Toplevel input, characters 672-676: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) 3 focused goals (shelved: 1) H0 : _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) H2 : True x0 : Entity H3 : _own _smith x0 H4 : True H1 : _chain x0 x1 : Entity H6 : _of x0 x1 H5 : _business x1 H7 : True ============================ _two ?z3 goal 2 is: _year ?z3 goal 3 is: _for _smith ?z3 Toplevel input, characters 682-694: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 696-700: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) Toplevel input, characters 666-670: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2))) 1 goal H1 : _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) H3 : True x0 : Entity H4 : _own _smith x0 H5 : True H2 : _chain x0 x1 : Entity H7 : _of x0 x1 H6 : _business x1 H8, H10 : True x3 : Entity H12 : _for _smith x3 H13 : True H9 : _two x3 H14 : _year x3 x4 : Entity H15 : _own _smith x4 H16 : True H11 : _chain x4 x5 : Entity H18 : _of x4 x5 H17 : _business x5 H19 : True ============================ False Toplevel input, characters 688-700: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 702-706: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2))) Toplevel input, characters 672-676: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) 3 focused goals (shelved: 1) H0 : _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) H2 : True x0 : Entity H3 : _own _smith x0 H4 : True H1 : _chain x0 x1 : Entity H6 : _of x0 x1 H5 : _business x1 H7 : True ============================ _two ?z3 goal 2 is: _year ?z3 goal 3 is: _for _smith ?z3 Toplevel input, characters 682-694: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 696-700: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2))) 1 goal H1 : _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) H3 : True x0 : Entity H4 : _own _smith x0 H5 : True H2 : _chain x0 x1 : Entity H7 : _of x0 x1 H6 : _business x1 H8, H10 : True x3 : Entity H12 : _for _smith x3 H13 : True H9 : _two x3 H14 : _year x3 x4 : Entity H15 : _own _smith x4 H16 : True H11 : _chain x4 x5 : Entity H18 : _of x4 x5 H17 : _business x5 H19 : True ============================ False Toplevel input, characters 688-700: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 702-706: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) 3 focused goals (shelved: 1) H0 : _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) H2 : True x0 : Entity H3 : _own _smith x0 H4 : True H1 : _chain x0 x1 : Entity H6 : _of x0 x1 H5 : _business x1 H7 : True ============================ _two ?z3 goal 2 is: _year ?z3 goal 3 is: _for _smith ?z3 Toplevel input, characters 682-694: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 696-700: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _for is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2))) 1 goal H1 : _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) H3 : True x0 : Entity H4 : _own _smith x0 H5 : True H2 : _chain x0 x1 : Entity H7 : _of x0 x1 H6 : _business x1 H8, H10 : True x3 : Entity H12 : _for _smith x3 H13 : True H9 : _two x3 H14 : _year x3 x4 : Entity H15 : _own _smith x4 H16 : True H11 : _chain x4 x5 : Entity H18 : _of x4 x5 H17 : _business x5 H19 : True ============================ False Toplevel input, characters 688-700: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 702-706: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_296_temporal_reference single unknown
fracas_297_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) Toplevel input, characters 592-596: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2) No more goals. Toplevel input, characters 598-615: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) 1 goal H1 : _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) H3 : True x0 : Entity H4 : _own _smith x0 H5 : True H2 : _chain x0 x1 : Entity H7 : _of x0 x1 H6 : _business x1 H8, H10 : True x3 : Entity H11 : _own _smith x3 H12 : True H9 : _chain x3 x4 : Entity H14 : _of x3 x4 H13 : _business x4 H15 : True ============================ False Toplevel input, characters 608-620: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 622-626: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) Toplevel input, characters 592-596: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2) No more goals. Toplevel input, characters 598-615: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) 1 goal H1 : _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) H3 : True x0 : Entity H4 : _own _smith x0 H5 : True H2 : _chain x0 x1 : Entity H7 : _of x0 x1 H6 : _business x1 H8, H10 : True x3 : Entity H11 : _own _smith x3 H12 : True H9 : _chain x3 x4 : Entity H14 : _of x3 x4 H13 : _business x4 H15 : True ============================ False Toplevel input, characters 608-620: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 622-626: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2) No more goals. Toplevel input, characters 598-615: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _chain is declared Coq < _in is declared Coq < _of is declared Coq < _own is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) /\ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) 1 goal H1 : _in (exists x : Entity, ((_two x /\ _year x) /\ True) /\ True) (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_chain z2 /\ (exists z1 : Entity, (_business z1 /\ True) /\ _of z2 z1)) /\ True) /\ _own _smith z2)) H3 : True x0 : Entity H4 : _own _smith x0 H5 : True H2 : _chain x0 x1 : Entity H7 : _of x0 x1 H6 : _business x1 H8, H10 : True x3 : Entity H11 : _own _smith x3 H12 : True H9 : _chain x3 x4 : Entity H14 : _of x3 x4 H13 : _business x4 H15 : True ============================ False Toplevel input, characters 608-620: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 622-626: > Theorem t1: (and (_in (exists x, (and (and (and (_two x) (_year x)) True) True)) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_chain z2) (exists z1, (and (and (_business z1) True) (_of z2 z1)))) True) (_own _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_298_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) Toplevel input, characters 447-451: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Toplevel input, characters 453-470: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) 1 goal H2 : True x0 : Entity H4 : _for _smith x0 H1 : _year x0 H5 : True H6 : _live _smith H7 : _in _smith _birmingham H8, H10 : True x3 : Entity H12 : _for _smith x3 H13 : True H9 : _two x3 H14 : _year x3 H15 : _live _smith H16 : _in _smith _birmingham H17 : True ============================ False Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) Toplevel input, characters 447-451: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Toplevel input, characters 453-470: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) 1 goal H2 : True x0 : Entity H4 : _for _smith x0 H1 : _year x0 H5 : True H6 : _live _smith H7 : _in _smith _birmingham H8, H10 : True x3 : Entity H12 : _for _smith x3 H13 : True H9 : _two x3 H14 : _year x3 H15 : _live _smith H16 : _in _smith _birmingham H17 : True ============================ False Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Toplevel input, characters 453-470: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) 1 goal H2 : True x0 : Entity H4 : _for _smith x0 H1 : _year x0 H5 : True H6 : _live _smith H7 : _in _smith _birmingham H8, H10 : True x3 : Entity H12 : _for _smith x3 H13 : True H9 : _two x3 H14 : _year x3 H15 : _live _smith H16 : _in _smith _birmingham H17 : True ============================ False Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_299_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) Toplevel input, characters 447-451: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Toplevel input, characters 453-470: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) 1 goal H2 : True x0 : Entity H4 : _for _smith x0 H1 : _year x0 H5 : True H6 : _live _smith H7 : _in _smith _birmingham H8, H10 : True x3 : Entity H12 : _for _smith x3 H13 : True H9 : _two x3 H14 : _year x3 H15 : _live _smith H16 : _in _smith _birmingham H17 : True ============================ False Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) Toplevel input, characters 447-451: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Toplevel input, characters 453-470: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) 1 goal H2 : True x0 : Entity H4 : _for _smith x0 H1 : _year x0 H5 : True H6 : _live _smith H7 : _in _smith _birmingham H8, H10 : True x3 : Entity H12 : _for _smith x3 H13 : True H9 : _two x3 H14 : _year x3 H15 : _live _smith H16 : _in _smith _birmingham H17 : True ============================ False Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) No more goals. Toplevel input, characters 453-470: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, ((_year z3 /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) 1 goal H2 : True x0 : Entity H4 : _for _smith x0 H1 : _year x0 H5 : True H6 : _live _smith H7 : _in _smith _birmingham H8, H10 : True x3 : Entity H12 : _for _smith x3 H13 : True H9 : _two x3 H14 : _year x3 H15 : _live _smith H16 : _in _smith _birmingham H17 : True ============================ False Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (_year z3) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_300_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) Toplevel input, characters 383-387: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith) No more goals. Toplevel input, characters 389-406: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) 1 goal H2 : True H3 : _live _smith H4 : _in _smith _birmingham H5, H7 : True x2 : Entity H9 : _for _smith x2 H10 : True H6 : _two x2 H11 : _year x2 H12 : _live _smith H13 : _in _smith _birmingham H14 : True ============================ False Toplevel input, characters 399-411: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 413-417: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) Toplevel input, characters 383-387: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith) No more goals. Toplevel input, characters 389-406: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) 1 goal H2 : True H3 : _live _smith H4 : _in _smith _birmingham H5, H7 : True x2 : Entity H9 : _for _smith x2 H10 : True H6 : _two x2 H11 : _year x2 H12 : _live _smith H13 : _in _smith _birmingham H14 : True ============================ False Toplevel input, characters 399-411: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 413-417: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith) No more goals. Toplevel input, characters 389-406: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _birmingham is declared Coq < _for is declared Coq < _in is declared Coq < _live is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z3 : Entity, (((_two z3 /\ _year z3) /\ True) /\ _for _smith z3) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _birmingham /\ True) /\ _in _smith _birmingham) /\ _live _smith)) 1 goal H2 : True H3 : _live _smith H4 : _in _smith _birmingham H5, H7 : True x2 : Entity H9 : _for _smith x2 H10 : True H6 : _two x2 H11 : _year x2 H12 : _live _smith H13 : _in _smith _birmingham H14 : True ============================ False Toplevel input, characters 399-411: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 413-417: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z3, (and (and (and (and (_two z3) (_year z3)) True) (_for _smith z3)) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _birmingham) True) (_in _smith _birmingham)) (_live _smith)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_301_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_own z2 /\ _business z2) /\ (exists z1 : Entity, (_year z1 /\ True) /\ _for z2 z1)) /\ True) /\ _run _smith z2) Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_own z2) (_business z2)) (exists z1, (and (and (_year z1) True) (_for z2 z1)))) True) (_run _smith z2))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_own z2 /\ _business z2) /\ (exists z1 : Entity, (_year z1 /\ True) /\ _for z2 z1)) /\ True) /\ _run _smith z2)) Toplevel input, characters 409-413: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_own z2) (_business z2)) (exists z1, (and (and (_year z1) True) (_for z2 z1)))) True) (_run _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_own z2 /\ _business z2) /\ (exists z1 : Entity, (_year z1 /\ True) /\ _for z2 z1)) /\ True) /\ _run _smith z2) 1 goal H1 : True x0 : Entity H3 : _for _smith x0 H4 : True H0 : _two x0 H5 : _year x0 x1 : Entity H6 : _run _smith x1 H7 : True H2 : _own x1 H8 : _business x1 ============================ _for x1 x0 Toplevel input, characters 419-431: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_own z2) (_business z2)) (exists z1, (and (and (_year z1) True) (_for z2 z1)))) True) (_run _smith z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 433-437: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_own z2) (_business z2)) (exists z1, (and (and (_year z1) True) (_for z2 z1)))) True) (_run _smith z2))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_302_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)) Toplevel input, characters 349-353: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1) No more goals. Toplevel input, characters 355-372: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)) 1 goal H2 : True x0 : Entity H3 : _run _smith x0 H4 : True H1 : _own x0 H5 : _business x0 H7 : True x2 : Entity H9 : _for _smith x2 H10 : True H6 : _two x2 H11 : _year x2 x3 : Entity H12 : _run _smith x3 H13 : True H8 : _own x3 H14 : _business x3 ============================ False Toplevel input, characters 365-377: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 379-383: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)) Toplevel input, characters 349-353: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1) No more goals. Toplevel input, characters 355-372: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)) 1 goal H2 : True x0 : Entity H3 : _run _smith x0 H4 : True H1 : _own x0 H5 : _business x0 H7 : True x2 : Entity H9 : _for _smith x2 H10 : True H6 : _two x2 H11 : _year x2 x3 : Entity H12 : _run _smith x3 H13 : True H8 : _own x3 H14 : _business x3 ============================ False Toplevel input, characters 365-377: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 379-383: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1) No more goals. Toplevel input, characters 355-372: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _business is declared Coq < _for is declared Coq < _own is declared Coq < _run is declared Coq < _smith is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_own z1 /\ _business z1) /\ True) /\ _run _smith z1)) 1 goal H2 : True x0 : Entity H3 : _run _smith x0 H4 : True H1 : _own x0 H5 : _business x0 H7 : True x2 : Entity H9 : _for _smith x2 H10 : True H6 : _two x2 H11 : _year x2 x3 : Entity H12 : _run _smith x3 H13 : True H8 : _own x3 H14 : _business x3 ============================ False Toplevel input, characters 365-377: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 379-383: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_own z1) (_business z1)) True) (_run _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_303_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) Toplevel input, characters 373-377: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2) No more goals. Toplevel input, characters 379-396: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) 1 goal H2 : True x0 : Entity H3 : _write _smith x0 H4 : True H1 : _report x0 x1 : Entity H6 : _for x0 x1 H5 : _hour x1 H7, H9 : True x3 : Entity H10 : _write _smith x3 H11 : True H8 : _report x3 x4 : Entity H13 : _for x3 x4 H14 : True H12 : _two x4 H15 : _hour x4 ============================ False Toplevel input, characters 389-401: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) Toplevel input, characters 373-377: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2) No more goals. Toplevel input, characters 379-396: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) 1 goal H2 : True x0 : Entity H3 : _write _smith x0 H4 : True H1 : _report x0 x1 : Entity H6 : _for x0 x1 H5 : _hour x1 H7, H9 : True x3 : Entity H10 : _write _smith x3 H11 : True H8 : _report x3 x4 : Entity H13 : _for x3 x4 H14 : True H12 : _two x4 H15 : _hour x4 ============================ False Toplevel input, characters 389-401: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2) No more goals. Toplevel input, characters 379-396: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, (_hour z1 /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) 1 goal H2 : True x0 : Entity H3 : _write _smith x0 H4 : True H1 : _report x0 x1 : Entity H6 : _for x0 x1 H5 : _hour x1 H7, H9 : True x3 : Entity H10 : _write _smith x3 H11 : True H8 : _report x3 x4 : Entity H13 : _for x3 x4 H14 : True H12 : _two x4 H15 : _hour x4 ============================ False Toplevel input, characters 389-401: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (_hour z1) True) (_for z2 z1)))) True) (_write _smith z2)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_304_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) Toplevel input, characters 313-317: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Toplevel input, characters 319-336: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) 1 goal H2 : True x0 : Entity H3 : _write _smith x0 H1 : _report x0 H4, H6 : True x2 : Entity H7 : _write _smith x2 H8 : True H5 : _report x2 x3 : Entity H10 : _for x2 x3 H11 : True H9 : _two x3 H12 : _hour x3 ============================ False Toplevel input, characters 329-341: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 343-347: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) Toplevel input, characters 313-317: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Toplevel input, characters 319-336: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) 1 goal H2 : True x0 : Entity H3 : _write _smith x0 H1 : _report x0 H4, H6 : True x2 : Entity H7 : _write _smith x2 H8 : True H5 : _report x2 x3 : Entity H10 : _for x2 x3 H11 : True H9 : _two x3 H12 : _hour x3 ============================ False Toplevel input, characters 329-341: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 343-347: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1) No more goals. Toplevel input, characters 319-336: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _for is declared Coq < _hour is declared Coq < _report is declared Coq < _smith is declared Coq < _two is declared Coq < _write is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, ((_report z2 /\ (exists z1 : Entity, ((_two z1 /\ _hour z1) /\ True) /\ _for z2 z1)) /\ True) /\ _write _smith z2)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _write _smith z1)) 1 goal H2 : True x0 : Entity H3 : _write _smith x0 H1 : _report x0 H4, H6 : True x2 : Entity H7 : _write _smith x2 H8 : True H5 : _report x2 x3 : Entity H10 : _for x2 x3 H11 : True H9 : _two x3 H12 : _hour x3 ============================ False Toplevel input, characters 329-341: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 343-347: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (_report z2) (exists z1, (and (and (and (_two z1) (_hour z1)) True) (_for z2 z1)))) True) (_write _smith z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_report z1) True) (_write _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_305_temporal_reference single unknown
fracas_306_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) Toplevel input, characters 357-361: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Toplevel input, characters 363-380: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) 1 goal H2 : True x0 : Entity H3 : _discover _smith x0 H4 : True H1 : _new x0 H5 : _species x0 H7 : True x2 : Entity H9 : _for _smith x2 H10 : True H6 : _two x2 H11 : _year x2 x3 : Entity H12 : _discover _smith x3 H13 : True H8 : _new x3 H14 : _species x3 ============================ False Toplevel input, characters 373-385: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 387-391: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) Toplevel input, characters 357-361: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Toplevel input, characters 363-380: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) 1 goal H2 : True x0 : Entity H3 : _discover _smith x0 H4 : True H1 : _new x0 H5 : _species x0 H7 : True x2 : Entity H9 : _for _smith x2 H10 : True H6 : _two x2 H11 : _year x2 x3 : Entity H12 : _discover _smith x3 H13 : True H8 : _new x3 H14 : _species x3 ============================ False Toplevel input, characters 373-385: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 387-391: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1) No more goals. Toplevel input, characters 363-380: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _discover is declared Coq < _for is declared Coq < _new is declared Coq < _smith is declared Coq < _species is declared Coq < _two is declared Coq < _year is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z2 : Entity, (((_two z2 /\ _year z2) /\ True) /\ _for _smith z2) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((_new z1 /\ _species z1) /\ True) /\ _discover _smith z1)) 1 goal H2 : True x0 : Entity H3 : _discover _smith x0 H4 : True H1 : _new x0 H5 : _species x0 H7 : True x2 : Entity H9 : _for _smith x2 H10 : True H6 : _two x2 H11 : _year x2 x3 : Entity H12 : _discover _smith x3 H13 : True H8 : _new x3 H14 : _species x3 ============================ False Toplevel input, characters 373-385: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 387-391: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z2, (and (and (and (and (_two z2) (_year z2)) True) (_for _smith z2)) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1))))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_new z1) (_species z1)) True) (_discover _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_307_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 761-766: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 768-772: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 767-772: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 774-778: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 761-767: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 780-783: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 798-802: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 761-766: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 768-772: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 767-773: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 786-789: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 804-808: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 767-772: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 774-778: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 761-767: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 780-783: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 798-802: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 767-773: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 786-789: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 804-808: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 761-767: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 780-783: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 798-802: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1994 is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _itel is declared Coq < _july is declared Coq < _month is declared Coq < _progress is declared Coq < _report is declared Coq < _send is declared Coq < Toplevel input, characters 75-219: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Error: The type of this term is a product while it is expected to be Entity. Toplevel input, characters 767-773: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 786-789: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 804-808: > Theorem t1: (and (_in (exists x, (and (and (_1994 x) True) True)) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) (_month (fun Q3 => (Q3 (fun w => True) (fun x1 => (exists x, (and (and (_report x) True) (exists z1, (and (and (_progress z1) True) (_send x1 x z1)))))))) (fun F1 F2 => (exists x, (and (and (x = _itel) (F1 _itel)) (F2 _itel)))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (and (_1994 z2) (_july z2)) True) (_in_e3 _itel z2)) (exists z3, (and (and (_report z3) True) (exists z1, (and (and (_progress z1) True) (_send _itel z3 z1)))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_308_temporal_reference single unknown
fracas_309_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1)) Toplevel input, characters 550-554: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> ~ (exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) Toplevel input, characters 556-560: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (not (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1)) 8 focused goals (shelved: 4) H1 : True x0 : Entity H3 : _past _smith x0 H0 : _five x0 H4 : True x1 : Entity H6 : _at _smith x1 H2 : _quarter x1 H7 : True x2 : Entity H8 : _leave _smith x2 H5 : _house x2 H9 : True ============================ _first ?z4 goal 2 is: _train ?z4 goal 3 is: _catch ?x ?z4 goal 4 is: _to ?x _luxembourg goal 5 is: _station ?z2 goal 6 is: _to ?x ?z2 goal 7 is: _taxi ?z1 goal 8 is: _take ?x ?z1 Toplevel input, characters 566-578: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 580-584: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1)) Toplevel input, characters 550-554: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> ~ (exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) 1 goal x : Entity H0 : True x0 : Entity H4 : _catch x x0 H5 : True H3 : _first x0 H6 : _train x0 H7 : _to x _luxembourg H8 : True x2 : Entity H10 : _to x x2 H1 : _station x2 H11 : True x3 : Entity H12 : _take x x3 H9 : _taxi x3 H13, H15 : True x5 : Entity H17 : _past _smith x5 H14 : _five x5 H18 : True x6 : Entity H20 : _at _smith x6 H16 : _quarter x6 H21 : True x7 : Entity H22 : _leave _smith x7 H19 : _house x7 H23 : True ============================ False Toplevel input, characters 572-584: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (not (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (not (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> ~ (exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) Toplevel input, characters 556-560: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (not (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1)) 8 focused goals (shelved: 4) H1 : True x0 : Entity H3 : _past _smith x0 H0 : _five x0 H4 : True x1 : Entity H6 : _at _smith x1 H2 : _quarter x1 H7 : True x2 : Entity H8 : _leave _smith x2 H5 : _house x2 H9 : True ============================ _first ?z4 goal 2 is: _train ?z4 goal 3 is: _catch ?x ?z4 goal 4 is: _to ?x _luxembourg goal 5 is: _station ?z2 goal 6 is: _to ?x ?z2 goal 7 is: _taxi ?z1 goal 8 is: _take ?x ?z1 Toplevel input, characters 566-578: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 580-584: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> ~ (exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) 1 goal x : Entity H0 : True x0 : Entity H4 : _catch x x0 H5 : True H3 : _first x0 H6 : _train x0 H7 : _to x _luxembourg H8 : True x2 : Entity H10 : _to x x2 H1 : _station x2 H11 : True x3 : Entity H12 : _take x x3 H9 : _taxi x3 H13, H15 : True x5 : Entity H17 : _past _smith x5 H14 : _five x5 H18 : True x6 : Entity H20 : _at _smith x6 H16 : _quarter x6 H21 : True x7 : Entity H22 : _leave _smith x7 H19 : _house x7 H23 : True ============================ False Toplevel input, characters 572-584: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (not (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (not (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1)) 8 focused goals (shelved: 4) H1 : True x0 : Entity H3 : _past _smith x0 H0 : _five x0 H4 : True x1 : Entity H6 : _at _smith x1 H2 : _quarter x1 H7 : True x2 : Entity H8 : _leave _smith x2 H5 : _house x2 H9 : True ============================ _first ?z4 goal 2 is: _train ?z4 goal 3 is: _catch ?x ?z4 goal 4 is: _to ?x _luxembourg goal 5 is: _station ?z2 goal 6 is: _to ?x ?z2 goal 7 is: _taxi ?z1 goal 8 is: _take ?x ?z1 Toplevel input, characters 566-578: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 580-584: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _catch is declared Coq < _first is declared Coq < _five is declared Coq < _house is declared Coq < _leave is declared Coq < _luxembourg is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < _train is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> ~ (exists x : Entity, ((True /\ (exists z4 : Entity, ((_first z4 /\ _train z4) /\ True) /\ _catch x z4)) /\ (exists z5 : Entity, (z5 = _luxembourg /\ True) /\ _to x _luxembourg)) /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) 1 goal x : Entity H0 : True x0 : Entity H4 : _catch x x0 H5 : True H3 : _first x0 H6 : _train x0 H7 : _to x _luxembourg H8 : True x2 : Entity H10 : _to x x2 H1 : _station x2 H11 : True x3 : Entity H12 : _take x x3 H9 : _taxi x3 H13, H15 : True x5 : Entity H17 : _past _smith x5 H14 : _five x5 H18 : True x6 : Entity H20 : _at _smith x6 H16 : _quarter x6 H21 : True x7 : Entity H22 : _leave _smith x7 H19 : _house x7 H23 : True ============================ False Toplevel input, characters 572-584: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (not (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 586-590: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (not (exists x, (and (and (and True (exists z4, (and (and (and (_first z4) (_train z4)) True) (_catch x z4)))) (exists z5, (and (and (z5 = _luxembourg) True) (_to x _luxembourg)))) (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_310_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x) Toplevel input, characters 238-242: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> ~ (exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x)) Toplevel input, characters 244-248: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (not (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x) 1 focused goal (shelved: 1) H1 : True x0 : Entity H2 : _lose _smith x0 H0 : _file x0 H3 : True ============================ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy ?x) Toplevel input, characters 254-266: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x) Toplevel input, characters 238-242: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> ~ (exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x)) 1 goal x : Entity H0 : True H1 : _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x) H3 : True x1 : Entity H4 : _lose _smith x1 H2 : _file x1 H5 : True ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (not (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (not (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> ~ (exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x)) Toplevel input, characters 244-248: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (not (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x) 1 focused goal (shelved: 1) H1 : True x0 : Entity H2 : _lose _smith x0 H0 : _file x0 H3 : True ============================ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy ?x) Toplevel input, characters 254-266: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> ~ (exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x)) 1 goal x : Entity H0 : True H1 : _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x) H3 : True x1 : Entity H4 : _lose _smith x1 H2 : _file x1 H5 : True ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (not (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (not (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x) 1 focused goal (shelved: 1) H1 : True x0 : Entity H2 : _lose _smith x0 H0 : _file x0 H3 : True ============================ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy ?x) Toplevel input, characters 254-266: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 268-272: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _crash is declared Coq < _destroy is declared Coq < _disk is declared Coq < _file is declared Coq < _hard is declared Coq < _lose is declared Coq < _smith is declared Coq < _when is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_file z1 /\ True) /\ _lose _smith z1)) -> ~ (exists x : Entity, True /\ _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x)) 1 goal x : Entity H0 : True H1 : _when (exists z1 : Entity, ((_hard z1 /\ _disk z1) /\ True) /\ _crash z1) (_destroy x) H3 : True x1 : Entity H4 : _lose _smith x1 H2 : _file x1 H5 : True ============================ False Toplevel input, characters 260-272: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (not (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 274-278: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_file z1) True) (_lose _smith z1))))) -> (not (exists x, (and True (_when (exists z1, (and (and (and (_hard z1) (_disk z1)) True) (_crash z1))) (_destroy x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_311_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) Toplevel input, characters 670-674: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> ~ _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) Toplevel input, characters 676-680: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (not (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) 1 goal x : Entity H0 : True x0 : Entity H3 : _to x x0 H1 : _station x0 H4 : True x1 : Entity H5 : _take x x1 H2 : _taxi x1 H6 : True H8 : _have _smith H9 : True x3 : Entity H11 : _past _smith x3 H7 : _five x3 H12 : True x4 : Entity H14 : _at _smith x4 H10 : _quarter x4 H15 : True x5 : Entity H16 : _leave _smith x5 H13 : _house x5 H17 : True ============================ _before (exists x2 : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x2 z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x2 z2))) (exists x2 : Entity, (x2 = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) Toplevel input, characters 686-698: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) Toplevel input, characters 670-674: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> ~ _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) 1 goal H1 : _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) x : Entity H0 : True x0 : Entity H4 : _to x x0 H2 : _station x0 H5 : True x1 : Entity H6 : _take x x1 H3 : _taxi x1 H7 : True H9 : _have _smith H10 : True x3 : Entity H12 : _past _smith x3 H8 : _five x3 H13 : True x4 : Entity H15 : _at _smith x4 H11 : _quarter x4 H16 : True x5 : Entity H17 : _leave _smith x5 H14 : _house x5 H18 : True ============================ False Toplevel input, characters 692-704: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (not (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 706-710: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (not (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> ~ _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) Toplevel input, characters 676-680: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (not (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) 1 goal x : Entity H0 : True x0 : Entity H3 : _to x x0 H1 : _station x0 H4 : True x1 : Entity H5 : _take x x1 H2 : _taxi x1 H6 : True H8 : _have _smith H9 : True x3 : Entity H11 : _past _smith x3 H7 : _five x3 H12 : True x4 : Entity H14 : _at _smith x4 H10 : _quarter x4 H15 : True x5 : Entity H16 : _leave _smith x5 H13 : _house x5 H17 : True ============================ _before (exists x2 : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x2 z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x2 z2))) (exists x2 : Entity, (x2 = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) Toplevel input, characters 686-698: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> ~ _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) 1 goal H1 : _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) x : Entity H0 : True x0 : Entity H4 : _to x x0 H2 : _station x0 H5 : True x1 : Entity H6 : _take x x1 H3 : _taxi x1 H7 : True H9 : _have _smith H10 : True x3 : Entity H12 : _past _smith x3 H8 : _five x3 H13 : True x4 : Entity H15 : _at _smith x4 H11 : _quarter x4 H16 : True x5 : Entity H17 : _leave _smith x5 H14 : _house x5 H18 : True ============================ False Toplevel input, characters 692-704: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (not (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 706-710: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (not (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) 1 goal x : Entity H0 : True x0 : Entity H3 : _to x x0 H1 : _station x0 H4 : True x1 : Entity H5 : _take x x1 H2 : _taxi x1 H6 : True H8 : _have _smith H9 : True x3 : Entity H11 : _past _smith x3 H7 : _five x3 H12 : True x4 : Entity H14 : _at _smith x4 H10 : _quarter x4 H15 : True x5 : Entity H16 : _leave _smith x5 H13 : _house x5 H17 : True ============================ _before (exists x2 : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x2 z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x2 z2))) (exists x2 : Entity, (x2 = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) Toplevel input, characters 686-698: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 700-704: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _five is declared Coq < _have is declared Coq < _house is declared Coq < _leave is declared Coq < _past is declared Coq < _quarter is declared Coq < _smith is declared Coq < _station is declared Coq < _take is declared Coq < _taxi is declared Coq < _to is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _smith /\ True) /\ _have _smith) /\ (exists z4 : Entity, ((_five z4 /\ True) /\ _past _smith z4) /\ (exists z2 : Entity, ((_quarter z2 /\ True) /\ _at _smith z2) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)))) -> (exists x : Entity, True /\ (exists z2 : Entity, ((_station z2 /\ True) /\ _to x z2) /\ (exists z1 : Entity, (_taxi z1 /\ True) /\ _take x z1))) -> ~ _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) 1 goal H1 : _before (exists x : Entity, True /\ (exists z3 : Entity, ((_station z3 /\ True) /\ _to x z3) /\ (exists z2 : Entity, (_taxi z2 /\ True) /\ _take x z2))) (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_house z1 /\ True) /\ _leave _smith z1)) x : Entity H0 : True x0 : Entity H4 : _to x x0 H2 : _station x0 H5 : True x1 : Entity H6 : _take x x1 H3 : _taxi x1 H7 : True H9 : _have _smith H10 : True x3 : Entity H12 : _past _smith x3 H8 : _five x3 H13 : True x4 : Entity H15 : _at _smith x4 H11 : _quarter x4 H16 : True x5 : Entity H17 : _leave _smith x5 H14 : _house x5 H18 : True ============================ False Toplevel input, characters 692-704: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (not (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 706-710: > Theorem t1: (exists x, (and (and (and (x = _smith) True) (_have _smith)) (exists z4, (and (and (and (_five z4) True) (_past _smith z4)) (exists z2, (and (and (and (_quarter z2) True) (_at _smith z2)) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))))) -> (exists x, (and True (exists z2, (and (and (and (_station z2) True) (_to x z2)) (exists z1, (and (and (_taxi z1) True) (_take x z1))))))) -> (not (_before (exists x, (and True (exists z3, (and (and (and (_station z3) True) (_to x z3)) (exists z2, (and (and (_taxi z2) True) (_take x z2))))))) (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_house z1) True) (_leave _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_312_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel Toplevel input, characters 628-632: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) Toplevel input, characters 634-638: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel 2 focused goals (shelved: 1) H1 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H3 : True x0 : Entity H4 : _deliver _itel x0 H2 : _report x0 H5 : True H7 : _always _itel H8 : _late _itel H9 : True x2 : Entity H10 : _deliver _itel x2 H6 : _report x2 H11 : True ============================ _1993 ?z2 goal 2 is: _in_e3 _itel ?z2 Toplevel input, characters 644-656: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 658-662: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel Toplevel input, characters 628-632: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) 1 goal H2 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H4 : True x0 : Entity H5 : _deliver _itel x0 H3 : _report x0 H6 : True H8 : _always _itel H9 : _late _itel H10 : True x2 : Entity H11 : _deliver _itel x2 H7 : _report x2 H12 : True H13 : _late _itel H15 : True x4 : Entity H17 : _in_e3 _itel x4 H14 : _1993 x4 H18 : True x5 : Entity H19 : _deliver _itel x5 H16 : _report x5 H20 : True ============================ False Toplevel input, characters 650-662: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 664-668: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) Toplevel input, characters 634-638: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel 2 focused goals (shelved: 1) H1 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H3 : True x0 : Entity H4 : _deliver _itel x0 H2 : _report x0 H5 : True H7 : _always _itel H8 : _late _itel H9 : True x2 : Entity H10 : _deliver _itel x2 H6 : _report x2 H11 : True ============================ _1993 ?z2 goal 2 is: _in_e3 _itel ?z2 Toplevel input, characters 644-656: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 658-662: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) 1 goal H2 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H4 : True x0 : Entity H5 : _deliver _itel x0 H3 : _report x0 H6 : True H8 : _always _itel H9 : _late _itel H10 : True x2 : Entity H11 : _deliver _itel x2 H7 : _report x2 H12 : True H13 : _late _itel H15 : True x4 : Entity H17 : _in_e3 _itel x4 H14 : _1993 x4 H18 : True x5 : Entity H19 : _deliver _itel x5 H16 : _report x5 H20 : True ============================ False Toplevel input, characters 650-662: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 664-668: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel 2 focused goals (shelved: 1) H1 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H3 : True x0 : Entity H4 : _deliver _itel x0 H2 : _report x0 H5 : True H7 : _always _itel H8 : _late _itel H9 : True x2 : Entity H10 : _deliver _itel x2 H6 : _report x2 H11 : True ============================ _1993 ?z2 goal 2 is: _in_e3 _itel ?z2 Toplevel input, characters 644-656: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 658-662: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _always is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _always _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) 1 goal H2 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H4 : True x0 : Entity H5 : _deliver _itel x0 H3 : _report x0 H6 : True H8 : _always _itel H9 : _late _itel H10 : True x2 : Entity H11 : _deliver _itel x2 H7 : _report x2 H12 : True H13 : _late _itel H15 : True x4 : Entity H17 : _in_e3 _itel x4 H14 : _1993 x4 H18 : True x5 : Entity H19 : _deliver _itel x5 H16 : _report x5 H20 : True ============================ False Toplevel input, characters 650-662: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 664-668: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_always _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_313_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel Toplevel input, characters 627-631: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) Toplevel input, characters 633-637: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel 2 focused goals (shelved: 1) H1 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H3 : True x0 : Entity H4 : _deliver _itel x0 H2 : _report x0 H5 : True H7 : _never _itel H8 : _late _itel H9 : True x2 : Entity H10 : _deliver _itel x2 H6 : _report x2 H11 : True ============================ _1993 ?z2 goal 2 is: _in_e3 _itel ?z2 Toplevel input, characters 643-655: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 657-661: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel Toplevel input, characters 627-631: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) 1 goal H2 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H4 : True x0 : Entity H5 : _deliver _itel x0 H3 : _report x0 H6 : True H8 : _never _itel H9 : _late _itel H10 : True x2 : Entity H11 : _deliver _itel x2 H7 : _report x2 H12 : True H13 : _late _itel H15 : True x4 : Entity H17 : _in_e3 _itel x4 H14 : _1993 x4 H18 : True x5 : Entity H19 : _deliver _itel x5 H16 : _report x5 H20 : True ============================ False Toplevel input, characters 649-661: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 663-667: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) Toplevel input, characters 633-637: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel 2 focused goals (shelved: 1) H1 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H3 : True x0 : Entity H4 : _deliver _itel x0 H2 : _report x0 H5 : True H7 : _never _itel H8 : _late _itel H9 : True x2 : Entity H10 : _deliver _itel x2 H6 : _report x2 H11 : True ============================ _1993 ?z2 goal 2 is: _in_e3 _itel ?z2 Toplevel input, characters 643-655: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 657-661: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) 1 goal H2 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H4 : True x0 : Entity H5 : _deliver _itel x0 H3 : _report x0 H6 : True H8 : _never _itel H9 : _late _itel H10 : True x2 : Entity H11 : _deliver _itel x2 H7 : _report x2 H12 : True H13 : _late _itel H15 : True x4 : Entity H17 : _in_e3 _itel x4 H14 : _1993 x4 H18 : True x5 : Entity H19 : _deliver _itel x5 H16 : _report x5 H20 : True ============================ False Toplevel input, characters 649-661: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 663-667: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel 2 focused goals (shelved: 1) H1 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H3 : True x0 : Entity H4 : _deliver _itel x0 H2 : _report x0 H5 : True H7 : _never _itel H8 : _late _itel H9 : True x2 : Entity H10 : _deliver _itel x2 H6 : _report x2 H11 : True ============================ _1993 ?z2 goal 2 is: _in_e3 _itel ?z2 Toplevel input, characters 643-655: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 657-661: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _deliver is declared Coq < _in is declared Coq < _in_e3 is declared Coq < _in_t3 is declared Coq < _itel is declared Coq < _late is declared Coq < _never is declared Coq < _report is declared Coq < 1 goal ============================ (exists x : Entity, (((x = _itel /\ True) /\ _late _itel) /\ _never _itel) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) /\ (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) -> ~ (exists x : Entity, ((x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in_e3 _itel z2) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1))) /\ _late _itel) 1 goal H2 : _in_t3 (exists x : Entity, (_1993 x /\ True) /\ True) (exists x : Entity, (x = _itel /\ True) /\ (exists z1 : Entity, (_report z1 /\ True) /\ _deliver _itel z1)) H4 : True x0 : Entity H5 : _deliver _itel x0 H3 : _report x0 H6 : True H8 : _never _itel H9 : _late _itel H10 : True x2 : Entity H11 : _deliver _itel x2 H7 : _report x2 H12 : True H13 : _late _itel H15 : True x4 : Entity H17 : _in_e3 _itel x4 H14 : _1993 x4 H18 : True x5 : Entity H19 : _deliver _itel x5 H16 : _report x5 H20 : True ============================ False Toplevel input, characters 649-661: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 663-667: > Theorem t1: (exists x, (and (and (and (and (x = _itel) True) (_late _itel)) (_never _itel)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1))))) -> (and (_in_t3 (exists x, (and (and (_1993 x) True) True)) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (exists x, (and (and (x = _itel) True) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) -> (not (exists x, (and (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in_e3 _itel z2)) (exists z1, (and (and (_report z1) True) (_deliver _itel z1)))))) (_late _itel)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_314_temporal_reference multi unknown
fracas_315_temporal_reference single Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) Toplevel input, characters 585-589: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> ~ (exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1))) Toplevel input, characters 591-595: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (not (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) 3 goals H : forall x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith) -> exists x0 : Entity, ((True /\ _have x0) /\ _be x0) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x0 z3) /\ Prog (_travel_e2 x0)) ============================ _have _smith goal 2 is: _be _smith goal 3 is: _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) Toplevel input, characters 601-613: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 615-619: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) Toplevel input, characters 585-589: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> ~ (exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1))) 1 goal H1 : _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) H2 : _be _smith H3 : _have _smith H4 : True H : forall x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith) -> exists x0 : Entity, ((True /\ _have x0) /\ _be x0) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x0 z3) /\ Prog (_travel_e2 x0)) ============================ False Toplevel input, characters 607-619: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (not (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 621-625: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (not (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> ~ (exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1))) Toplevel input, characters 591-595: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (not (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) 3 goals H : forall x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith) -> exists x0 : Entity, ((True /\ _have x0) /\ _be x0) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x0 z3) /\ Prog (_travel_e2 x0)) ============================ _have _smith goal 2 is: _be _smith goal 3 is: _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) Toplevel input, characters 601-613: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 615-619: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> ~ (exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1))) 1 goal H1 : _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) H2 : _be _smith H3 : _have _smith H4 : True H : forall x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith) -> exists x0 : Entity, ((True /\ _have x0) /\ _be x0) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x0 z3) /\ Prog (_travel_e2 x0)) ============================ False Toplevel input, characters 607-619: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (not (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 621-625: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (not (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) 3 goals H : forall x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith) -> exists x0 : Entity, ((True /\ _have x0) /\ _be x0) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x0 z3) /\ Prog (_travel_e2 x0)) ============================ _have _smith goal 2 is: _be _smith goal 3 is: _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) Toplevel input, characters 601-613: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 615-619: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _arrive is declared Coq < _be is declared Coq < _day is declared Coq < _for is declared Coq < _have is declared Coq < _in is declared Coq < _katmandu is declared Coq < _smith is declared Coq < _three is declared Coq < _travel is declared Coq < _travel_e2 is declared Coq < _travel_e3 is declared Coq < 1 goal ============================ ((exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith)) -> exists x : Entity, ((True /\ _have x) /\ _be x) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x z3) /\ Prog (_travel_e2 x))) -> ~ (exists x : Entity, (((x = _smith /\ True) /\ _have _smith) /\ _be _smith) /\ _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1))) 1 goal H1 : _before (exists z4 : Entity, True /\ (exists z2 : Entity, ((z2 = _katmandu /\ True) /\ _in z4 _katmandu) /\ _arrive z4)) (exists z1 : Entity, (_day z1 /\ True) /\ Prog (_travel_e3 _smith z1)) H2 : _be _smith H3 : _have _smith H4 : True H : forall x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _katmandu /\ True) /\ _in _smith _katmandu) /\ _arrive _smith) -> exists x0 : Entity, ((True /\ _have x0) /\ _be x0) /\ (exists z3 : Entity, (((_three z3 /\ _day z3) /\ True) /\ _for x0 z3) /\ Prog (_travel_e2 x0)) ============================ False Toplevel input, characters 607-619: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (not (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 621-625: > Theorem t1: ((exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _katmandu) True) (_in _smith _katmandu)) (_arrive _smith))))) -> (exists x, (and (and (and True (_have x)) (_be x)) (exists z3, (and (and (and (and (_three z3) (_day z3)) True) (_for x z3)) (Prog (_travel_e2 x))))))) -> (not (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (_before (exists z4, (and True (exists z2, (and (and (and (z2 = _katmandu) True) (_in z4 _katmandu)) (_arrive z4))))) (exists z1, (and (and (_day z1) True) (Prog (_travel_e3 _smith z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_316_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) Toplevel input, characters 562-566: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones)) Toplevel input, characters 568-572: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (not (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) 1 goal H2 : _have _jones H3 : True x0 : Entity H4 : _unemploy _jones H5 : _in _jones x0 H1 : _past x0 H6 : True H8 : _employ _jones H9 : _ever _jones H10 : _since _jones H11 : _have _jones H12 : True H13 : _graduate _jones H14 : _in _jones _march H15 : True ============================ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) Toplevel input, characters 578-590: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) Toplevel input, characters 562-566: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones)) 1 goal H2 : _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) H3 : True H5 : _employ _jones H6 : _ever _jones H7 : _since _jones H8 : _have _jones H9 : True H10 : _graduate _jones H11 : _in _jones _march H12 : True H14 : _have _jones H15 : True x3 : Entity H16 : _unemploy _jones H17 : _in _jones x3 H13 : _past x3 H18 : True ============================ False Toplevel input, characters 584-596: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (not (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 598-602: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (not (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones)) Toplevel input, characters 568-572: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (not (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) 1 goal H2 : _have _jones H3 : True x0 : Entity H4 : _unemploy _jones H5 : _in _jones x0 H1 : _past x0 H6 : True H8 : _employ _jones H9 : _ever _jones H10 : _since _jones H11 : _have _jones H12 : True H13 : _graduate _jones H14 : _in _jones _march H15 : True ============================ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) Toplevel input, characters 578-590: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones)) 1 goal H2 : _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) H3 : True H5 : _employ _jones H6 : _ever _jones H7 : _since _jones H8 : _have _jones H9 : True H10 : _graduate _jones H11 : _in _jones _march H12 : True H14 : _have _jones H15 : True x3 : Entity H16 : _unemploy _jones H17 : _in _jones x3 H13 : _past x3 H18 : True ============================ False Toplevel input, characters 584-596: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (not (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 598-602: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (not (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) 1 goal H2 : _have _jones H3 : True x0 : Entity H4 : _unemploy _jones H5 : _in _jones x0 H1 : _past x0 H6 : True H8 : _employ _jones H9 : _ever _jones H10 : _since _jones H11 : _have _jones H12 : True H13 : _graduate _jones H14 : _in _jones _march H15 : True ============================ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) Toplevel input, characters 578-590: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 592-596: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _at is declared Coq < _employ is declared Coq < _ever is declared Coq < _graduate is declared Coq < _have is declared Coq < _in is declared Coq < _jones is declared Coq < _march is declared Coq < _past is declared Coq < _since is declared Coq < _time is declared Coq < _unemploy is declared Coq < 1 goal ============================ (exists x : Entity, (((((x = _jones /\ True) /\ _have _jones) /\ _since _jones) /\ _ever _jones) /\ _employ _jones) /\ (exists z1 : Entity, ((z1 = _march /\ True) /\ _in _jones _march) /\ _graduate _jones)) -> (exists x : Entity, ((x = _jones /\ True) /\ _have _jones) /\ (exists z1 : Entity, ((_past z1 /\ True) /\ _in _jones z1) /\ _unemploy _jones)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones)) 1 goal H2 : _before (exists z3 : Entity, True /\ _graduate z3) (exists z1 : Entity, ((_time z1 /\ True) /\ _at _jones z1) /\ _unemploy _jones) H3 : True H5 : _employ _jones H6 : _ever _jones H7 : _since _jones H8 : _have _jones H9 : True H10 : _graduate _jones H11 : _in _jones _march H12 : True H14 : _have _jones H15 : True x3 : Entity H16 : _unemploy _jones H17 : _in _jones x3 H13 : _past x3 H18 : True ============================ False Toplevel input, characters 584-596: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (not (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 598-602: > Theorem t1: (exists x, (and (and (and (and (and (and (x = _jones) True) (_have _jones)) (_since _jones)) (_ever _jones)) (_employ _jones)) (exists z1, (and (and (and (z1 = _march) True) (_in _jones _march)) (_graduate _jones))))) -> (exists x, (and (and (and (x = _jones) True) (_have _jones)) (exists z1, (and (and (and (_past z1) True) (_in _jones z1)) (_unemploy _jones))))) -> (not (exists x, (and (and (x = _jones) True) (_before (exists z3, (and True (_graduate z3))) (exists z1, (and (and (and (_time z1) True) (_at _jones z1)) (_unemploy _jones))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_317_temporal_reference multi unknown
fracas_318_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1107-1112: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1114-1118: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1113-1118: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1120-1124: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1107-1113: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1126-1129: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1144-1148: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1107-1112: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1114-1118: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1113-1119: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1132-1135: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1150-1154: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1113-1118: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1120-1124: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1107-1113: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1126-1129: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1144-1148: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1113-1119: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1132-1135: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1150-1154: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1107-1113: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1126-1129: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1144-1148: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _'s is declared Coq < _about is declared Coq < _as_e2 is declared Coq < _as_e3 is declared Coq < _be is declared Coq < _board is declared Coq < _come is declared Coq < _do is declared Coq < _finish is declared Coq < _in is declared Coq < _jones is declared Coq < _jones_e2 is declared Coq < _last is declared Coq < _long is declared Coq < _mary is declared Coq < _mary_e2 is declared Coq < _meeting is declared Coq < _program is declared Coq < _story is declared Coq < _tell is declared Coq < _update is declared Coq < _while is declared Coq < Toplevel input, characters 72-78: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). > ^^^^^^ Error: In environment x : Entity -> Prop The term "_jones" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 1113-1119: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1132-1135: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 1150-1154: > Theorem t1: (and (and (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary)))) (_while (exists x, (and (and (and (x = _jones) True) (_be _jones)) (exists z1, (and (and (_program z1) True) (Prog (_update _jones z1)))))) (exists x, (and (and (and (and (and (x = _mary) True) (exists z4, (and True (_tell _mary z4)))) (exists z5, (and (and (and (_board z5) (_meeting z5)) True) (_about _mary z5)))) (_in _mary)) (_come _mary))))) -> (_before (exists x, (and True (_do x))) (exists x, (and True (_finish x)))) -> (not (True (fun x => (and (and (and (_last x) (_as_e2 x)) (_long x)) (exists z1, (and (and (and (_jones_e2 z1) (_'s z1)) True) (_as_e3 x z1))))) (fun x => (exists z4, (and (and (_program z4) True) (Prog (_update x z4))))) (fun F1 F2 => (exists x, (and (and (and (and (_mary_e2 x) (_'s x)) (_story x)) (F1 x)) (F2 x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_319_temporal_reference multi unknown
fracas_320_temporal_reference single unknown
fracas_321_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 672-677: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 679-683: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 678-683: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 685-689: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 672-678: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 691-694: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 709-713: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 672-677: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 679-683: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 678-684: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 697-700: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 715-719: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 678-683: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 685-689: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 672-678: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 691-694: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 709-713: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 678-684: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 697-700: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 715-719: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 672-678: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 691-694: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 709-713: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _coming is declared Coq < _florence is declared Coq < _florence_e2 is declared Coq < _four is declared Coq < _from is declared Coq < _go is declared Coq < _have is declared Coq < _in is declared Coq < _now is declared Coq < _past is declared Coq < _smith is declared Coq < _smith_e2 is declared Coq < _time is declared Coq < _to is declared Coq < _twice is declared Coq < _two is declared Coq < _will is declared Coq < _year is declared Coq < Toplevel input, characters 415-424: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). > ^^^^^^^^^ Error: In environment x : Entity z4 : Entity z1 : Entity -> Prop The term "_florence" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 678-684: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 697-700: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 715-719: > Theorem t1: (exists x, (and (and (and (and (x = _smith) True) (_have _smith)) (_be _smith)) (exists z2, (and (and (and (and (_past z2) True) (_in _smith z2)) (_twice _smith)) (_florence_e2 _smith))))) -> (exists x, (and (and (x = _smith) True) (_will (exists z4, (and (and (and (and (and (_coming z4) (_year z4)) True) (_in _smith z4)) (_twice _smith)) (exists z1, (and (and (and (z1 = _florence) True) (_to _smith _florence)) (_go _smith)))))))) -> (not (exists x, (and (and (and (and (_two x) (_year x)) (exists z1, (and (and (and (_now z1) (_smith_e2 z1)) True) (_from x z1)))) True) (_will (and (and (and (and (_have x) (_be x)) (_time x)) (_florence_e2 x)) (_four x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_322_temporal_reference single unknown
fracas_323_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 353-360: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 559-564: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 566-570: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 358-365: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 565-570: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 572-576: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 353-360: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 559-565: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 578-581: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 596-600: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 353-360: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 559-564: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 566-570: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 358-365: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 565-571: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 584-587: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 602-606: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 358-365: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 565-570: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 572-576: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 353-360: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 559-565: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 578-581: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 596-600: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 358-365: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 565-571: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 584-587: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 602-606: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 353-360: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 559-565: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 578-581: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 596-600: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _be is declared Coq < _break is declared Coq < _can is declared Coq < _gamble is declared Coq < _gambling is declared Coq < _moment is declared Coq < _one is declared Coq < _seriously is declared Coq < _start is declared Coq < _stop is declared Coq < _stop_e2 is declared Coq < _stop_e3 is declared Coq < _until is declared Coq < _when is declared Coq < Toplevel input, characters 358-365: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). > ^^^^^^^ Error: The reference _people was not found in the current environment. Toplevel input, characters 565-571: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 584-587: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 602-606: > Theorem t1: (fun X0 => (forall x, ((and (_one x) (_gambling x)) -> ((and (and (and (_seriously x) (_stop_e2 x)) (exists z1, (and True (_until x z1)))) True) -> (not (and (_break x) (X0 (fun F1 F2 => (F2 x))))))))) -> (forall x, ((_one x) -> (True -> (not (_when (exists z2, (and (and True (_break z2)) (_be z2))) (_can (_gamble x))))))) -> (not (forall x, ((_people x) -> ((and (and (and (and (_start x) (Prog (_gamble x))) (_seriously x)) (exists z4, (and (and (and (_moment z4) (exists z3, (and True (z3 = z4)))) True) (_stop_e3 x z4)))) True) -> (_break x))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_324_temporal_reference single unknown
fracas_325_temporal_reference multi Welcome to Coq 8.15.0 Coq < Coq < _asleep is declared Coq < _discover is declared Coq < _ever is declared Coq < _have is declared Coq < _people is declared Coq < 1 goal ============================ (exists x : Entity, ((_asleep x /\ True) /\ _ever x) /\ _know x (exists z2 : Entity, True /\ _asleep z2)) -> (exists x : Entity, (_people x /\ True) /\ _know x (exists x0 : Entity, (True /\ _have x0) /\ _after (exists z2 : Entity, (True /\ _have z2) /\ _asleep z2) (_asleep x0))) -> exists x : Entity, (_people x /\ True) /\ _discover x (exists x0 : Entity, (True /\ _have x0) /\ _asleep x0) Toplevel input, characters 401-405: > Theorem t1: (exists x, (and (and (and (_asleep x) True) (_ever x)) (_know x (exists z2, (and True (_asleep z2)))))) -> (exists x, (and (and (_people x) True) (_know x (exists x, (and (and True (_have x)) (_after (exists z2, (and (and True (_have z2)) (_asleep z2))) (_asleep x))))))) -> (exists x, (and (and (_people x) True) (_discover x (exists x, (and (and True (_have x)) (_asleep x)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _asleep is declared Coq < _discover is declared Coq < _ever is declared Coq < _have is declared Coq < _people is declared Coq < 1 goal ============================ (exists x : Entity, ((_asleep x /\ True) /\ _ever x) /\ _know x (exists z2 : Entity, True /\ _asleep z2)) -> (exists x : Entity, (_people x /\ True) /\ _know x (exists x0 : Entity, (True /\ _have x0) /\ _after (exists z2 : Entity, (True /\ _have z2) /\ _asleep z2) (_asleep x0))) -> ~ (exists x : Entity, (_people x /\ True) /\ _discover x (exists x0 : Entity, (True /\ _have x0) /\ _asleep x0)) Toplevel input, characters 407-411: > Theorem t1: (exists x, (and (and (and (_asleep x) True) (_ever x)) (_know x (exists z2, (and True (_asleep z2)))))) -> (exists x, (and (and (_people x) True) (_know x (exists x, (and (and True (_have x)) (_after (exists z2, (and (and True (_have z2)) (_asleep z2))) (_asleep x))))))) -> (not (exists x, (and (and (_people x) True) (_discover x (exists x, (and (and True (_have x)) (_asleep x))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _asleep is declared Coq < _discover is declared Coq < _ever is declared Coq < _have is declared Coq < _people is declared Coq < 1 goal ============================ (exists x : Entity, ((_asleep x /\ True) /\ _ever x) /\ _know x (exists z2 : Entity, True /\ _asleep z2)) -> (exists x : Entity, (_people x /\ True) /\ _know x (exists x0 : Entity, (True /\ _have x0) /\ _after (exists z2 : Entity, (True /\ _have z2) /\ _asleep z2) (_asleep x0))) -> exists x : Entity, (_people x /\ True) /\ _discover x (exists x0 : Entity, (True /\ _have x0) /\ _asleep x0) 1 goal x : Entity H1 : _know x (exists x : Entity, (True /\ _have x) /\ _after (exists z2 : Entity, (True /\ _have z2) /\ _asleep z2) (_asleep x)) H0 : _people x H2 : True x0 : Entity H3 : _know x0 (exists z2 : Entity, True /\ _asleep z2) H4 : _ever x0 H : _asleep x0 H5 : True ============================ _discover x (exists x1 : Entity, (True /\ _have x1) /\ _asleep x1) Toplevel input, characters 417-429: > Theorem t1: (exists x, (and (and (and (_asleep x) True) (_ever x)) (_know x (exists z2, (and True (_asleep z2)))))) -> (exists x, (and (and (_people x) True) (_know x (exists x, (and (and True (_have x)) (_after (exists z2, (and (and True (_have z2)) (_asleep z2))) (_asleep x))))))) -> (exists x, (and (and (_people x) True) (_discover x (exists x, (and (and True (_have x)) (_asleep x)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 431-435: > Theorem t1: (exists x, (and (and (and (_asleep x) True) (_ever x)) (_know x (exists z2, (and True (_asleep z2)))))) -> (exists x, (and (and (_people x) True) (_know x (exists x, (and (and True (_have x)) (_after (exists z2, (and (and True (_have z2)) (_asleep z2))) (_asleep x))))))) -> (exists x, (and (and (_people x) True) (_discover x (exists x, (and (and True (_have x)) (_asleep x)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_326_verbs single Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _build is declared Coq < _finish is declared Coq < _in is declared Coq < _itel is declared Coq < _mtalk is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ _build _itel _mtalk))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ _finish _itel _mtalk)) Toplevel input, characters 362-366: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_build _itel _mtalk))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_finish _itel _mtalk))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _build is declared Coq < _finish is declared Coq < _in is declared Coq < _itel is declared Coq < _mtalk is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ _build _itel _mtalk))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ _finish _itel _mtalk))) Toplevel input, characters 368-372: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_build _itel _mtalk))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_finish _itel _mtalk)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _build is declared Coq < _finish is declared Coq < _in is declared Coq < _itel is declared Coq < _mtalk is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ _build _itel _mtalk))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ _finish _itel _mtalk)) 1 goal H1 : True x0 : Entity H3 : _in _itel x0 H0 : _1993 x0 H4 : True H5 : _build _itel _mtalk H6 : True ============================ _finish _itel _mtalk Toplevel input, characters 378-390: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_build _itel _mtalk))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_finish _itel _mtalk))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 392-396: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_build _itel _mtalk))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_finish _itel _mtalk))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_327_verbs single Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _be is declared Coq < _build is declared Coq < _finish is declared Coq < _in is declared Coq < _itel is declared Coq < _mtalk is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _be _itel) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ Prog (_build _itel _mtalk)))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ _finish _itel _mtalk)) Toplevel input, characters 387-391: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_be _itel)) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (Prog (_build _itel _mtalk)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_finish _itel _mtalk))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _be is declared Coq < _build is declared Coq < _finish is declared Coq < _in is declared Coq < _itel is declared Coq < _mtalk is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _be _itel) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ Prog (_build _itel _mtalk)))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ _finish _itel _mtalk))) Toplevel input, characters 393-397: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_be _itel)) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (Prog (_build _itel _mtalk)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_finish _itel _mtalk)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _be is declared Coq < _build is declared Coq < _finish is declared Coq < _in is declared Coq < _itel is declared Coq < _mtalk is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _be _itel) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ Prog (_build _itel _mtalk)))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (z1 = _mtalk /\ True) /\ _finish _itel _mtalk)) 1 goal H1 : _be _itel H2 : True x0 : Entity H4 : _in _itel x0 H0 : _1993 x0 H5 : True H6 : Prog (_build _itel _mtalk) H7 : True ============================ _finish _itel _mtalk Toplevel input, characters 403-415: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_be _itel)) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (Prog (_build _itel _mtalk)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_finish _itel _mtalk))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 417-421: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_be _itel)) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (Prog (_build _itel _mtalk)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (z1 = _mtalk) True) (_finish _itel _mtalk))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_328_verbs single Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 428-432: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) No more goals. Toplevel input, characters 434-451: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1993 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7, H9 : True x3 : Entity H12 : _in _itel x3 H8 : _1993 x3 H13 : True x4 : Entity H14 : _win _itel x4 H11 : _contract x4 H15 : True H16 : _from _itel _apcom H17 : True ============================ False Toplevel input, characters 444-456: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 458-462: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 428-432: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) No more goals. Toplevel input, characters 434-451: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1993 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7, H9 : True x3 : Entity H12 : _in _itel x3 H8 : _1993 x3 H13 : True x4 : Entity H14 : _win _itel x4 H11 : _contract x4 H15 : True H16 : _from _itel _apcom H17 : True ============================ False Toplevel input, characters 444-456: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 458-462: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) No more goals. Toplevel input, characters 434-451: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ (exists z3 : Entity, (((_1993 z3 /\ True) /\ _in _itel z3) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) /\ (exists z2 : Entity, (z2 = _apcom /\ True) /\ _from _itel _apcom))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1993 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7, H9 : True x3 : Entity H12 : _in _itel x3 H8 : _1993 x3 H13 : True x4 : Entity H14 : _win _itel x4 H11 : _contract x4 H15 : True H16 : _from _itel _apcom H17 : True ============================ False Toplevel input, characters 444-456: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 458-462: > Theorem t1: (exists x, (and (and (x = _itel) True) (exists z3, (and (and (and (and (_1993 z3) True) (_in _itel z3)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))) (exists z2, (and (and (z2 = _apcom) True) (_from _itel _apcom))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_329_verbs single Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _be is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _be _itel) /\ (exists z4 : Entity, ((_1993 z4 /\ True) /\ _in _itel z4) /\ (exists z2 : Entity, ((z2 = _apcom /\ True) /\ _from _itel _apcom) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ Prog (_win _itel z1))))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 447-451: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_be _itel)) (exists z4, (and (and (and (_1993 z4) True) (_in _itel z4)) (exists z2, (and (and (and (z2 = _apcom) True) (_from _itel _apcom)) (exists z1, (and (and (_contract z1) True) (Prog (_win _itel z1)))))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _be is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _be _itel) /\ (exists z4 : Entity, ((_1993 z4 /\ True) /\ _in _itel z4) /\ (exists z2 : Entity, ((z2 = _apcom /\ True) /\ _from _itel _apcom) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ Prog (_win _itel z1))))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 453-457: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_be _itel)) (exists z4, (and (and (and (_1993 z4) True) (_in _itel z4)) (exists z2, (and (and (and (z2 = _apcom) True) (_from _itel _apcom)) (exists z1, (and (and (_contract z1) True) (Prog (_win _itel z1)))))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1993 is declared Coq < _apcom is declared Coq < _be is declared Coq < _contract is declared Coq < _from is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _itel /\ True) /\ _be _itel) /\ (exists z4 : Entity, ((_1993 z4 /\ True) /\ _in _itel z4) /\ (exists z2 : Entity, ((z2 = _apcom /\ True) /\ _from _itel _apcom) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ Prog (_win _itel z1))))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1993 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 1 goal H1 : _be _itel H2 : True x0 : Entity H4 : _in _itel x0 H0 : _1993 x0 H5 : True H7 : _from _itel _apcom H8 : True x2 : Entity H9 : Prog (_win _itel x2) H6 : _contract x2 H10 : True ============================ _win _itel x2 Toplevel input, characters 463-475: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_be _itel)) (exists z4, (and (and (and (_1993 z4) True) (_in _itel z4)) (exists z2, (and (and (and (z2 = _apcom) True) (_from _itel _apcom)) (exists z1, (and (and (_contract z1) True) (Prog (_win _itel z1)))))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 477-481: > Theorem t1: (exists x, (and (and (and (x = _itel) True) (_be _itel)) (exists z4, (and (and (and (_1993 z4) True) (_in _itel z4)) (exists z2, (and (and (and (z2 = _apcom) True) (_from _itel _apcom)) (exists z1, (and (and (_contract z1) True) (Prog (_win _itel z1)))))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1993 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_330_verbs single unknown
fracas_331_verbs single Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) Toplevel input, characters 350-354: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1) No more goals. Toplevel input, characters 356-373: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) 1 goal H3 : True x0 : Entity H4 : _leave _jones x0 H2 : _meeting x0 H5, H7 : True x2 : Entity H8 : _leave _smith x2 H6 : _meeting x2 H9, H11 : True x4 : Entity H12 : _leave _smith x4 H10 : _meeting x4 H13 : True ============================ False Toplevel input, characters 366-378: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) Toplevel input, characters 350-354: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1) No more goals. Toplevel input, characters 356-373: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) 1 goal H3 : True x0 : Entity H4 : _leave _jones x0 H2 : _meeting x0 H5, H7 : True x2 : Entity H8 : _leave _smith x2 H6 : _meeting x2 H9, H11 : True x4 : Entity H12 : _leave _smith x4 H10 : _meeting x4 H13 : True ============================ False Toplevel input, characters 366-378: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1) No more goals. Toplevel input, characters 356-373: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) 1 goal H3 : True x0 : Entity H4 : _leave _jones x0 H2 : _meeting x0 H5, H7 : True x2 : Entity H8 : _leave _smith x2 H6 : _meeting x2 H9, H11 : True x4 : Entity H12 : _leave _smith x4 H10 : _meeting x4 H13 : True ============================ False Toplevel input, characters 366-378: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_332_verbs single Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) Toplevel input, characters 350-354: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1) No more goals. Toplevel input, characters 356-373: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) 1 goal H3 : True x0 : Entity H4 : _leave _jones x0 H2 : _meeting x0 H5, H7 : True x2 : Entity H8 : _leave _jones x2 H6 : _meeting x2 H9, H11 : True x4 : Entity H12 : _leave _smith x4 H10 : _meeting x4 H13 : True ============================ False Toplevel input, characters 366-378: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) Toplevel input, characters 350-354: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1) No more goals. Toplevel input, characters 356-373: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) 1 goal H3 : True x0 : Entity H4 : _leave _jones x0 H2 : _meeting x0 H5, H7 : True x2 : Entity H8 : _leave _jones x2 H6 : _meeting x2 H9, H11 : True x4 : Entity H12 : _leave _smith x4 H10 : _meeting x4 H13 : True ============================ False Toplevel input, characters 366-378: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1) No more goals. Toplevel input, characters 356-373: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _jones is declared Coq < _leave is declared Coq < _meeting is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _smith z1)) /\ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_meeting z1 /\ True) /\ _leave _jones z1)) 1 goal H3 : True x0 : Entity H4 : _leave _jones x0 H2 : _meeting x0 H5, H7 : True x2 : Entity H8 : _leave _jones x2 H6 : _meeting x2 H9, H11 : True x4 : Entity H12 : _leave _smith x4 H10 : _meeting x4 H13 : True ============================ False Toplevel input, characters 366-378: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 380-384: > Theorem t1: (and (exists x, (and (and (x = _smith) True) (exists z1, (and (and (_meeting z1) True) (_leave _smith z1))))) (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_meeting z1) True) (_leave _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_333_verbs single unknown
fracas_334_attitudes single Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 425-429: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 431-435: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _know _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 441-453: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 455-459: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 425-429: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _know _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H9 : True ============================ False Toplevel input, characters 447-459: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 461-465: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 431-435: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _know _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 441-453: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 455-459: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _know _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H9 : True ============================ False Toplevel input, characters 447-459: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 461-465: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _know _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 441-453: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 455-459: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _know _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _know _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H9 : True ============================ False Toplevel input, characters 447-459: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 461-465: > Theorem t1: (exists x, (and (and (x = _smith) True) (_know _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_335_attitudes single Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 428-432: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 434-438: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _believe _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 444-456: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 458-462: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 428-432: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _believe _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H9 : True ============================ False Toplevel input, characters 450-462: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 464-468: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 434-438: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _believe _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 444-456: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 458-462: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _believe _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H9 : True ============================ False Toplevel input, characters 450-462: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 464-468: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _believe _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 444-456: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 458-462: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _believe is declared Coq < _contract is declared Coq < _have is declared Coq < _in is declared Coq < _itel is declared Coq < _smith is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ _believe _smith (exists x0 : Entity, ((x0 = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _believe _smith (exists x : Entity, ((x = _itel /\ True) /\ _have _itel) /\ (exists z2 : Entity, ((_contract z2 /\ (exists z1 : Entity, (_1992 z1 /\ True) /\ _in z2 z1)) /\ True) /\ _win _itel z2)) H9 : True ============================ False Toplevel input, characters 450-462: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 464-468: > Theorem t1: (exists x, (and (and (x = _smith) True) (_believe _smith (exists x, (and (and (and (x = _itel) True) (_have _itel)) (exists z2, (and (and (and (_contract z2) (exists z1, (and (and (_1992 z1) True) (_in z2 z1)))) True) (_win _itel z2)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_336_attitudes single Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 373-377: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 383-395: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 397-401: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H9 : True ============================ False Toplevel input, characters 389-401: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 373-377: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 383-395: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 397-401: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H9 : True ============================ False Toplevel input, characters 389-401: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 383-395: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 397-401: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _manage _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H9 : True ============================ False Toplevel input, characters 389-401: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 403-407: > Theorem t1: (exists x, (and (and (x = _itel) True) (_manage _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_337_attitudes single Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 364-368: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 370-374: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 380-392: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 394-398: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 364-368: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H9 : True ============================ False Toplevel input, characters 386-398: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 400-404: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 370-374: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 380-392: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 394-398: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H9 : True ============================ False Toplevel input, characters 386-398: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 400-404: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H0 : _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H1 : True ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 380-392: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 394-398: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _try is declared Coq < _win is declared Coq < 1 goal ============================ (exists x : Entity, (x = _itel /\ True) /\ _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True H8 : _try _itel (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) H9 : True ============================ False Toplevel input, characters 386-398: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 400-404: > Theorem t1: (exists x, (and (and (x = _itel) True) (_try _itel (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_338_attitudes single Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 365-369: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H : _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 375-387: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 389-393: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H : _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True ============================ False Toplevel input, characters 381-393: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 395-399: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) Toplevel input, characters 365-369: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H : _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 375-387: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 389-393: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H : _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True ============================ False Toplevel input, characters 381-393: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 395-399: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H : _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 375-387: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 389-393: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H : _true (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True ============================ False Toplevel input, characters 381-393: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 395-399: > Theorem t1: (_true (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_339_attitudes single Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 360-364: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H : _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 376-388: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 390-394: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) Toplevel input, characters 360-364: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H : _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True ============================ False Toplevel input, characters 382-394: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 396-400: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H : _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 376-388: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 390-394: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H : _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True ============================ False Toplevel input, characters 382-394: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 396-400: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1)) 4 focused goals (shelved: 2) H : _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) ============================ _1992 ?z2 goal 2 is: _in _itel ?z2 goal 3 is: _contract ?z1 goal 4 is: _win _itel ?z1 Toplevel input, characters 376-388: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 390-394: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _1992 is declared Coq < _contract is declared Coq < _in is declared Coq < _itel is declared Coq < _win is declared Coq < 1 goal ============================ _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) -> ~ (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) 1 goal H : _false (exists x : Entity, (x = _itel /\ True) /\ (exists z2 : Entity, ((_1992 z2 /\ True) /\ _in _itel z2) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _win _itel z1))) H2 : True x0 : Entity H4 : _in _itel x0 H1 : _1992 x0 H5 : True x1 : Entity H6 : _win _itel x1 H3 : _contract x1 H7 : True ============================ False Toplevel input, characters 382-394: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 396-400: > Theorem t1: (_false (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))) -> (not (exists x, (and (and (x = _itel) True) (exists z2, (and (and (and (_1992 z2) True) (_in _itel z2)) (exists z1, (and (and (_contract z1) True) (_win _itel z1)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_340_attitudes multi unknown
fracas_341_attitudes multi unknown
fracas_342_attitudes single Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) Toplevel input, characters 310-314: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1) No more goals. Toplevel input, characters 316-333: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) 1 goal H2 : True x0 : Entity H3 : _sign _jones x0 H1 : _contract x0 H4, H6 : True H8 : _see _smith _jones H9 : True x3 : Entity H10 : _sign _jones x3 H7 : _contract x3 H11 : True ============================ False Toplevel input, characters 326-338: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 340-344: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) Toplevel input, characters 310-314: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1) No more goals. Toplevel input, characters 316-333: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) 1 goal H2 : True x0 : Entity H3 : _sign _jones x0 H1 : _contract x0 H4, H6 : True H8 : _see _smith _jones H9 : True x3 : Entity H10 : _sign _jones x3 H7 : _contract x3 H11 : True ============================ False Toplevel input, characters 326-338: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 340-344: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1) No more goals. Toplevel input, characters 316-333: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _jones is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) -> ~ (exists x : Entity, (x = _jones /\ True) /\ (exists z1 : Entity, (_contract z1 /\ True) /\ _sign _jones z1)) 1 goal H2 : True x0 : Entity H3 : _sign _jones x0 H1 : _contract x0 H4, H6 : True H8 : _see _smith _jones H9 : True x3 : Entity H10 : _sign _jones x3 H7 : _contract x3 H11 : True ============================ False Toplevel input, characters 326-338: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 340-344: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))) -> (not (exists x, (and (and (x = _jones) True) (exists z1, (and (and (_contract z1) True) (_sign _jones z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_343_attitudes multi Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 613-618: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 620-624: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 619-624: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 626-630: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 613-619: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 632-635: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 650-654: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 613-618: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 620-624: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 619-625: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 638-641: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 656-660: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 619-624: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). nltac. > ^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 626-630: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). nltac. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 613-619: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 632-635: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 650-654: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 619-625: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 638-641: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 656-660: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 613-619: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 632-635: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 650-654: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _chairman is declared Coq < _contract is declared Coq < _itel is declared Coq < _itel_e2 is declared Coq < _jones is declared Coq < _of is declared Coq < _see is declared Coq < _sign is declared Coq < _sign_e2 is declared Coq < _sign_e3 is declared Coq < _smith is declared Coq < Toplevel input, characters 325-330: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). > ^^^^^ Error: In environment x : Entity z2 : Entity z1 : Entity -> Prop The term "_itel" has type "Entity -> Prop" while it is expected to have type "Entity". Toplevel input, characters 619-625: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). repeat nltac_base. > ^^^^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 638-641: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). repeat nltac_base. try substitution. > ^^^ Error: Syntax error: illegal begin of toplevel:vernac_toplevel. Toplevel input, characters 656-660: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign_e3 _jones z2))))))) -> (exists x, (and (and (x = _jones) True) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (z1 = _itel) True) (_of z2 _itel)))) True) (_jones = z2))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (_chairman z1) (_contract (fun F1 F2 => (exists z1, (and (and (and (_itel_e2 z1) (_sign_e2 z1)) (F1 z1)) (F2 z1)))) (fun w => True) (fun y => (_of z1 y)))) True) (_see _smith z1)))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: No focused proof (No proof-editing in progress). Coq < Theorem is not defined! unknown
fracas_344_attitudes multi Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> ~ (exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4) Toplevel input, characters 487-491: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (not (exists x z4, (and (and (_phone z4) True) (_answer x z4)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4 No more goals. Toplevel input, characters 493-510: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (exists x z4, (and (and (_phone z4) True) (_answer x z4))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4 No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> ~ (exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4) 1 goal x, x0 : Entity H2 : _answer x x0 H1 : _phone x0 H3, H5 : True x2 : Entity H7 : _see _helen x2 H8 : True H6 : _chairman x2 x3 : Entity H10 : _of x2 x3 H9 : _department x3 H11 : True x4 : Entity H12 : _answer _helen x4 H4 : _phone x4 H13, H15 : True x7 : Entity H0 : _chairman x7 x6 : Entity H17 : _of x7 x6 H16 : _department x6 H18 : True H14 : _person x7 H20 : True ============================ False Toplevel input, characters 503-515: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (not (exists x z4, (and (and (_phone z4) True) (_answer x z4)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 517-521: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (not (exists x z4, (and (and (_phone z4) True) (_answer x z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> ~ (exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4) Toplevel input, characters 487-491: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (not (exists x z4, (and (and (_phone z4) True) (_answer x z4)))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4 No more goals. Toplevel input, characters 493-510: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (exists x z4, (and (and (_phone z4) True) (_answer x z4))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> ~ (exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4) 1 goal x, x0 : Entity H2 : _answer x x0 H1 : _phone x0 H3, H5 : True x2 : Entity H7 : _see _helen x2 H8 : True H6 : _chairman x2 x3 : Entity H10 : _of x2 x3 H9 : _department x3 H11 : True x4 : Entity H12 : _answer _helen x4 H4 : _phone x4 H13, H15 : True x7 : Entity H0 : _chairman x7 x6 : Entity H17 : _of x7 x6 H16 : _department x6 H18 : True H14 : _person x7 H20 : True ============================ False Toplevel input, characters 503-515: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (not (exists x z4, (and (and (_phone z4) True) (_answer x z4)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 517-521: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (not (exists x z4, (and (and (_phone z4) True) (_answer x z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4 No more goals. Toplevel input, characters 493-510: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (exists x z4, (and (and (_phone z4) True) (_answer x z4))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _answer is declared Coq < _chairman is declared Coq < _department is declared Coq < _helen is declared Coq < _of is declared Coq < _person is declared Coq < _phone is declared Coq < _see is declared Coq < 1 goal ============================ (exists x : Entity, ((x = _helen /\ (exists z2 : Entity, ((_chairman z2 /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of z2 z1)) /\ True) /\ _see _helen z2)) /\ True) /\ (exists z4 : Entity, (_phone z4 /\ True) /\ _answer _helen z4)) -> (exists x : Entity, ((_chairman x /\ (exists z1 : Entity, (_department z1 /\ True) /\ _of x z1)) /\ True) /\ (exists z2 : Entity, (_person z2 /\ True) /\ x = z2)) -> ~ (exists x z4 : Entity, (_phone z4 /\ True) /\ _answer x z4) 1 goal x, x0 : Entity H2 : _answer x x0 H1 : _phone x0 H3, H5 : True x2 : Entity H7 : _see _helen x2 H8 : True H6 : _chairman x2 x3 : Entity H10 : _of x2 x3 H9 : _department x3 H11 : True x4 : Entity H12 : _answer _helen x4 H4 : _phone x4 H13, H15 : True x7 : Entity H0 : _chairman x7 x6 : Entity H17 : _of x7 x6 H16 : _department x6 H18 : True H14 : _person x7 H20 : True ============================ False Toplevel input, characters 503-515: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (not (exists x z4, (and (and (_phone z4) True) (_answer x z4)))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 517-521: > Theorem t1: (exists x, (and (and (and (x = _helen) (exists z2, (and (and (and (_chairman z2) (exists z1, (and (and (_department z1) True) (_of z2 z1)))) True) (_see _helen z2)))) True) (exists z4, (and (and (_phone z4) True) (_answer _helen z4))))) -> (exists x, (and (and (and (_chairman x) (exists z1, (and (and (_department z1) True) (_of x z1)))) True) (exists z2, (and (and (_person z2) True) (x = z2))))) -> (not (exists x z4, (and (and (_phone z4) True) (_answer x z4)))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_345_attitudes single Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)) Toplevel input, characters 479-483: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) Toplevel input, characters 485-489: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)) 1 goal H2 : True H4 : _see _smith _jones H5 : True x1 : Entity H6 : _sign _smith x1 H1 : _contract x1 H7 : True x2 : Entity H0 : _secretary x2 H9 : True x3 : Entity H10 : _make x2 x3 H8 : _copy x3 H11 : True ============================ _sign _jones x1 Toplevel input, characters 495-507: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)) Toplevel input, characters 479-483: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) 1 goal H3 : True H5 : _see _smith _jones H6 : True x1 : Entity H7 : _sign _smith x1 H2 : _contract x1 H8, H10 : True H12 : _see _smith _jones H13 : True x4 : Entity H14 : _sign _jones x4 H11 : _contract x4 H15 : True x5 : Entity H1 : _secretary x5 H17 : True x6 : Entity H18 : _make x5 x6 H16 : _copy x6 H19 : True ============================ False Toplevel input, characters 501-513: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) Toplevel input, characters 485-489: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)) 1 goal H2 : True H4 : _see _smith _jones H5 : True x1 : Entity H6 : _sign _smith x1 H1 : _contract x1 H7 : True x2 : Entity H0 : _secretary x2 H9 : True x3 : Entity H10 : _make x2 x3 H8 : _copy x3 H11 : True ============================ _sign _jones x1 Toplevel input, characters 495-507: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) 1 goal H3 : True H5 : _see _smith _jones H6 : True x1 : Entity H7 : _sign _smith x1 H2 : _contract x1 H8, H10 : True H12 : _see _smith _jones H13 : True x4 : Entity H14 : _sign _jones x4 H11 : _contract x4 H15 : True x5 : Entity H1 : _secretary x5 H17 : True x6 : Entity H18 : _make x5 x6 H16 : _copy x6 H19 : True ============================ False Toplevel input, characters 501-513: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)) 1 goal H2 : True H4 : _see _smith _jones H5 : True x1 : Entity H6 : _sign _smith x1 H1 : _contract x1 H7 : True x2 : Entity H0 : _secretary x2 H9 : True x3 : Entity H10 : _make x2 x3 H8 : _copy x3 H11 : True ============================ _sign _jones x1 Toplevel input, characters 495-507: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 509-513: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _contract is declared Coq < _copy is declared Coq < _jones is declared Coq < _make is declared Coq < _secretary is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (_secretary x /\ True) /\ (exists z4 : Entity, (_copy z4 /\ True) /\ _make x z4)) /\ (exists x : Entity, ((x = _smith /\ (exists z1 : Entity, (z1 = _jones /\ True) /\ _see _smith _jones)) /\ True) /\ (exists z3 : Entity, (_contract z3 /\ True) /\ _sign _smith z3)) -> ~ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) 1 goal H3 : True H5 : _see _smith _jones H6 : True x1 : Entity H7 : _sign _smith x1 H2 : _contract x1 H8, H10 : True H12 : _see _smith _jones H13 : True x4 : Entity H14 : _sign _jones x4 H11 : _contract x4 H15 : True x5 : Entity H1 : _secretary x5 H17 : True x6 : Entity H18 : _make x5 x6 H16 : _copy x6 H19 : True ============================ False Toplevel input, characters 501-513: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 515-519: > Theorem t1: (and (exists x, (and (and (_secretary x) True) (exists z4, (and (and (_copy z4) True) (_make x z4))))) (exists x, (and (and (and (x = _smith) (exists z1, (and (and (z1 = _jones) True) (_see _smith _jones)))) True) (exists z3, (and (and (_contract z3) True) (_sign _smith z3)))))) -> (not (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
fracas_346_attitudes single Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) Toplevel input, characters 666-670: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (not (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) No more goals. Toplevel input, characters 672-689: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) No more goals. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) 4 goals H2, H4 : True H6 : _see _smith _jones H7 : True H5 : _out _jones x2 : Entity H9 : _cross _jones x2 H10 : True H8 : _crucial x2 H11 : _clause x2 H13 : _out _jones H14 : _see _smith _jones H15 : True x4 : Entity H16 : _cross _jones x4 H17 : True H12 : _crucial x4 H18 : _clause x4 ============================ False goal 2 is: False goal 3 is: False goal 4 is: False Toplevel input, characters 682-694: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (not (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 696-700: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (not (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) Toplevel input, characters 666-670: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (not (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))))). nltac. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) No more goals. Toplevel input, characters 672-689: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) 4 goals H2, H4 : True H6 : _see _smith _jones H7 : True H5 : _out _jones x2 : Entity H9 : _cross _jones x2 H10 : True H8 : _crucial x2 H11 : _clause x2 H13 : _out _jones H14 : _see _smith _jones H15 : True x4 : Entity H16 : _cross _jones x4 H17 : True H12 : _crucial x4 H18 : _clause x4 ============================ False goal 2 is: False goal 3 is: False goal 4 is: False Toplevel input, characters 682-694: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (not (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 696-700: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (not (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2))) No more goals. Toplevel input, characters 672-689: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^^^^^^ Error: No such goal. Coq < Theorem is not defined! Welcome to Coq 8.15.0 Coq < Coq < _clause is declared Coq < _contract is declared Coq < _cross is declared Coq < _crucial is declared Coq < _jones is declared Coq < _out is declared Coq < _see is declared Coq < _sign is declared Coq < _smith is declared Coq < 1 goal ============================ (exists x : Entity, (x = _smith /\ True) /\ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (_out _jones /\ (exists z4 : Entity, ((_crucial z4 /\ _clause z4) /\ True) /\ _cross _jones z4) \/ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) -> ~ (exists x : Entity, (x = _smith /\ True) /\ ((exists z3 : Entity, (((z3 = _jones /\ True) /\ _see _smith _jones) /\ _out _jones) /\ (exists z5 : Entity, ((_crucial z5 /\ _clause z5) /\ True) /\ _cross _jones z5)) \/ (exists z1 : Entity, ((z1 = _jones /\ True) /\ _see _smith _jones) /\ (exists z2 : Entity, (_contract z2 /\ True) /\ _sign _jones z2)))) 4 goals H2, H4 : True H6 : _see _smith _jones H7 : True H5 : _out _jones x2 : Entity H9 : _cross _jones x2 H10 : True H8 : _crucial x2 H11 : _clause x2 H13 : _out _jones H14 : _see _smith _jones H15 : True x4 : Entity H16 : _cross _jones x4 H17 : True H12 : _crucial x4 H18 : _clause x4 ============================ False goal 2 is: False goal 3 is: False goal 4 is: False Toplevel input, characters 682-694: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (not (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))))). repeat nltac_base. try substitution. > ^^^^^^^^^^^^ Error: The reference substitution was not found in the current environment. Toplevel input, characters 696-700: > Theorem t1: (exists x, (and (and (x = _smith) True) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (or (and (_out _jones) (exists z4, (and (and (and (_crucial z4) (_clause z4)) True) (_cross _jones z4)))) (exists z2, (and (and (_contract z2) True) (_sign _jones z2)))))))) -> (not (exists x, (and (and (x = _smith) True) (or (exists z3, (and (and (and (and (z3 = _jones) True) (_see _smith _jones)) (_out _jones)) (exists z5, (and (and (and (_crucial z5) (_clause z5)) True) (_cross _jones z5))))) (exists z1, (and (and (and (z1 = _jones) True) (_see _smith _jones)) (exists z2, (and (and (_contract z2) True) (_sign _jones z2))))))))). repeat nltac_base. try substitution. Qed. > ^^^^ Error: (in proof t1): Attempt to save an incomplete proof t1 < Theorem is not defined! unknown
